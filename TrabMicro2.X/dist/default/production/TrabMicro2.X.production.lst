

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 01:33:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   101  0000                     
   102                           ; Version 2.20
   103                           ; Generated 12/02/2020 GMT
   104                           ; 
   105                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F4520 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataCOMRAM
   138  00718D                     __pidataCOMRAM:
   139                           	callstack 0
   140                           
   141                           ;initializer for _key
   142  00718D  20                 	db	32
   143                           
   144                           	psect	idataBANK1
   145  0070D4                     __pidataBANK1:
   146                           	callstack 0
   147                           
   148                           ;initializer for _txt0
   149  0070D4  20                 	db	32
   150  0070D5  20                 	db	32
   151  0070D6  20                 	db	32
   152  0070D7  20                 	db	32
   153  0070D8  20                 	db	32
   154  0070D9  20                 	db	32
   155  0070DA  20                 	db	32
   156  0070DB  20                 	db	32
   157  0070DC  20                 	db	32
   158  0070DD  20                 	db	32
   159  0070DE  20                 	db	32
   160  0070DF  20                 	db	32
   161  0070E0  20                 	db	32
   162  0070E1  20                 	db	32
   163  0070E2  20                 	db	32
   164  0070E3  20                 	db	32
   165  0070E4  00                 	db	0
   166                           
   167                           ;initializer for _txt3e
   168  0070E5  20                 	db	32
   169  0070E6  20                 	db	32
   170  0070E7  54                 	db	84
   171  0070E8  45                 	db	69
   172  0070E9  4E                 	db	78
   173  0070EA  53                 	db	83
   174  0070EB  41                 	db	65
   175  0070EC  4F                 	db	79
   176  0070ED  20                 	db	32
   177  0070EE  42                 	db	66
   178  0070EF  41                 	db	65
   179  0070F0  49                 	db	73
   180  0070F1  58                 	db	88
   181  0070F2  41                 	db	65
   182  0070F3  20                 	db	32
   183  0070F4  20                 	db	32
   184  0070F5  00                 	db	0
   185                           
   186                           ;initializer for _txt2e
   187  0070F6  2A                 	db	42
   188  0070F7  2A                 	db	42
   189  0070F8  2A                 	db	42
   190  0070F9  20                 	db	32
   191  0070FA  20                 	db	32
   192  0070FB  20                 	db	32
   193  0070FC  45                 	db	69
   194  0070FD  52                 	db	82
   195  0070FE  52                 	db	82
   196  0070FF  4F                 	db	79
   197  007100  20                 	db	32
   198  007101  20                 	db	32
   199  007102  20                 	db	32
   200  007103  2A                 	db	42
   201  007104  2A                 	db	42
   202  007105  2A                 	db	42
   203  007106  00                 	db	0
   204                           
   205                           ;initializer for _txt42
   206  007107  20                 	db	32
   207  007108  20                 	db	32
   208  007109  20                 	db	32
   209  00710A  20                 	db	32
   210  00710B  20                 	db	32
   211  00710C  20                 	db	32
   212  00710D  20                 	db	32
   213  00710E  20                 	db	32
   214  00710F  20                 	db	32
   215  007110  20                 	db	32
   216  007111  20                 	db	32
   217  007112  20                 	db	32
   218  007113  20                 	db	32
   219  007114  20                 	db	32
   220  007115  2D                 	db	45
   221  007116  3E                 	db	62
   222  007117  00                 	db	0
   223                           
   224                           ;initializer for _txt12
   225  007118  20                 	db	32
   226  007119  4D                 	db	77
   227  00711A  45                 	db	69
   228  00711B  4E                 	db	78
   229  00711C  55                 	db	85
   230  00711D  20                 	db	32
   231  00711E  2D                 	db	45
   232  00711F  2D                 	db	45
   233  007120  20                 	db	32
   234  007121  43                 	db	67
   235  007122  4F                 	db	79
   236  007123  4E                 	db	78
   237  007124  46                 	db	70
   238  007125  49                 	db	73
   239  007126  47                 	db	71
   240  007127  20                 	db	32
   241  007128  00                 	db	0
   242                           
   243                           ;initializer for _txt41
   244  007129  3C                 	db	60
   245  00712A  2D                 	db	45
   246  00712B  20                 	db	32
   247  00712C  20                 	db	32
   248  00712D  20                 	db	32
   249  00712E  20                 	db	32
   250  00712F  20                 	db	32
   251  007130  20                 	db	32
   252  007131  20                 	db	32
   253  007132  20                 	db	32
   254  007133  20                 	db	32
   255  007134  20                 	db	32
   256  007135  20                 	db	32
   257  007136  20                 	db	32
   258  007137  2D                 	db	45
   259  007138  3E                 	db	62
   260  007139  00                 	db	0
   261                           
   262                           ;initializer for _txt11
   263  00713A  20                 	db	32
   264  00713B  4D                 	db	77
   265  00713C  45                 	db	69
   266  00713D  4E                 	db	78
   267  00713E  55                 	db	85
   268  00713F  20                 	db	32
   269  007140  50                 	db	80
   270  007141  52                 	db	82
   271  007142  49                 	db	73
   272  007143  4E                 	db	78
   273  007144  43                 	db	67
   274  007145  49                 	db	73
   275  007146  50                 	db	80
   276  007147  41                 	db	65
   277  007148  4C                 	db	76
   278  007149  20                 	db	32
   279  00714A  00                 	db	0
   280                           
   281                           ;initializer for _txt32
   282  00714B  4E                 	db	78
   283  00714C  56                 	db	86
   284  00714D  20                 	db	32
   285  00714E  4D                 	db	77
   286  00714F  49                 	db	73
   287  007150  4E                 	db	78
   288  007151  20                 	db	32
   289  007152  43                 	db	67
   290  007153  58                 	db	88
   291  007154  53                 	db	83
   292  007155  3A                 	db	58
   293  007156  20                 	db	32
   294  007157  00                 	db	0
   295                           
   296                           ;initializer for _txt22
   297  007158  4E                 	db	78
   298  007159  56                 	db	86
   299  00715A  20                 	db	32
   300  00715B  4D                 	db	77
   301  00715C  49                 	db	73
   302  00715D  4E                 	db	78
   303  00715E  20                 	db	32
   304  00715F  43                 	db	67
   305  007160  58                 	db	88
   306  007161  49                 	db	73
   307  007162  3A                 	db	58
   308  007163  20                 	db	32
   309  007164  00                 	db	0
   310                           
   311                           ;initializer for _txt33
   312  007165  4E                 	db	78
   313  007166  49                 	db	73
   314  007167  56                 	db	86
   315  007168  45                 	db	69
   316  007169  4C                 	db	76
   317  00716A  20                 	db	32
   318  00716B  43                 	db	67
   319  00716C  58                 	db	88
   320  00716D  53                 	db	83
   321  00716E  3A                 	db	58
   322  00716F  20                 	db	32
   323  007170  00                 	db	0
   324                           
   325                           ;initializer for _txt23
   326  007171  4E                 	db	78
   327  007172  49                 	db	73
   328  007173  56                 	db	86
   329  007174  45                 	db	69
   330  007175  4C                 	db	76
   331  007176  20                 	db	32
   332  007177  43                 	db	67
   333  007178  58                 	db	88
   334  007179  49                 	db	73
   335  00717A  3A                 	db	58
   336  00717B  20                 	db	32
   337  00717C  00                 	db	0
   338                           
   339                           ;initializer for _txt31
   340  00717D  53                 	db	83
   341  00717E  54                 	db	84
   342  00717F  41                 	db	65
   343  007180  54                 	db	84
   344  007181  55                 	db	85
   345  007182  53                 	db	83
   346  007183  3A                 	db	58
   347  007184  20                 	db	32
   348  007185  00                 	db	0
   349                           
   350                           ;initializer for _txt21
   351  007186  4D                 	db	77
   352  007187  4F                 	db	79
   353  007188  44                 	db	68
   354  007189  4F                 	db	79
   355  00718A  3A                 	db	58
   356  00718B  20                 	db	32
   357  00718C  00                 	db	0
   358                           
   359                           	psect	idataBANK2
   360  0000CC                     __pidataBANK2:
   361                           	callstack 0
   362                           
   363                           ;initializer for _txt43
   364  0000CC  3C                 	db	60
   365  0000CD  2D                 	db	45
   366  0000CE  20                 	db	32
   367  0000CF  20                 	db	32
   368  0000D0  20                 	db	32
   369  0000D1  20                 	db	32
   370  0000D2  20                 	db	32
   371  0000D3  20                 	db	32
   372  0000D4  20                 	db	32
   373  0000D5  20                 	db	32
   374  0000D6  20                 	db	32
   375  0000D7  20                 	db	32
   376  0000D8  20                 	db	32
   377  0000D9  20                 	db	32
   378  0000DA  20                 	db	32
   379  0000DB  20                 	db	32
   380  0000DC  00                 	db	0
   381                           
   382                           ;initializer for _txt13
   383  0000DD  20                 	db	32
   384  0000DE  20                 	db	32
   385  0000DF  20                 	db	32
   386  0000E0  20                 	db	32
   387  0000E1  20                 	db	32
   388  0000E2  4E                 	db	78
   389  0000E3  49                 	db	73
   390  0000E4  56                 	db	86
   391  0000E5  45                 	db	69
   392  0000E6  49                 	db	73
   393  0000E7  53                 	db	83
   394  0000E8  20                 	db	32
   395  0000E9  20                 	db	32
   396  0000EA  20                 	db	32
   397  0000EB  20                 	db	32
   398  0000EC  20                 	db	32
   399  0000ED  00                 	db	0
   400                           
   401                           	psect	smallconst
   402  000600                     __psmallconst:
   403                           	callstack 0
   404  000600  00                 	db	0
   405  000601                     __powers_:
   406                           	callstack 0
   407  000601  0000               	dw	0
   408  000603  3F80               	dw	16256
   409  000605  0000               	dw	0
   410  000607  4120               	dw	16672
   411  000609  0000               	dw	0
   412  00060B  42C8               	dw	17096
   413  00060D  0000               	dw	0
   414  00060F  447A               	dw	17530
   415  000611  4000               	dw	16384
   416  000613  461C               	dw	17948
   417  000615  5000               	dw	20480
   418  000617  47C3               	dw	18371
   419  000619  2400               	dw	9216
   420  00061B  4974               	dw	18804
   421  00061D  9680               	dw	38528
   422  00061F  4B18               	dw	19224
   423  000621  BC20               	dw	48160
   424  000623  4CBE               	dw	19646
   425  000625  6B28               	dw	27432
   426  000627  4E6E               	dw	20078
   427  000629  02F9               	dw	761
   428  00062B  5015               	dw	20501
   429  00062D  78EC               	dw	30956
   430  00062F  60AD               	dw	24749
   431  000631  F2CA               	dw	62154
   432  000633  7149               	dw	29001
   433  000635                     __end_of__powers_:
   434                           	callstack 0
   435  000635                     __npowers_:
   436                           	callstack 0
   437  000635  0000               	dw	0
   438  000637  3F80               	dw	16256
   439  000639  CCCD               	dw	52429
   440  00063B  3DCC               	dw	15820
   441  00063D  D70A               	dw	55050
   442  00063F  3C23               	dw	15395
   443  000641  126F               	dw	4719
   444  000643  3A83               	dw	14979
   445  000645  B717               	dw	46871
   446  000647  38D1               	dw	14545
   447  000649  C5AC               	dw	50604
   448  00064B  3727               	dw	14119
   449  00064D  37BD               	dw	14269
   450  00064F  3586               	dw	13702
   451  000651  BF95               	dw	49045
   452  000653  33D6               	dw	13270
   453  000655  CC77               	dw	52343
   454  000657  322B               	dw	12843
   455  000659  705F               	dw	28767
   456  00065B  3089               	dw	12425
   457  00065D  E6FF               	dw	59135
   458  00065F  2EDB               	dw	11995
   459  000661  E508               	dw	58632
   460  000663  1E3C               	dw	7740
   461  000665  4260               	dw	16992
   462  000667  0DA2               	dw	3490
   463  000669                     __end_of__npowers_:
   464                           	callstack 0
   465  000669                     _linha:
   466                           	callstack 0
   467  000669  01                 	db	1
   468  00066A  02                 	db	2
   469  00066B  04                 	db	4
   470  00066C  00                 	db	0
   471  00066D                     __end_of_linha:
   472                           	callstack 0
   473  00066D                     _dpowers:
   474                           	callstack 0
   475  00066D  0001               	dw	1
   476  00066F  0000               	dw	0
   477  000671  000A               	dw	10
   478  000673  0000               	dw	0
   479  000675  0064               	dw	100
   480  000677  0000               	dw	0
   481  000679  03E8               	dw	1000
   482  00067B  0000               	dw	0
   483  00067D  2710               	dw	10000
   484  00067F  0000               	dw	0
   485  000681  86A0               	dw	34464
   486  000683  0001               	dw	1
   487  000685  4240               	dw	16960
   488  000687  000F               	dw	15
   489  000689  9680               	dw	38528
   490  00068B  0098               	dw	152
   491  00068D  E100               	dw	57600
   492  00068F  05F5               	dw	1525
   493  000691  CA00               	dw	51712
   494  000693  3B9A               	dw	15258
   495  000695                     __end_of_dpowers:
   496                           	callstack 0
   497  0000                     _TMR0	set	4054
   498  0000                     _T0CON	set	4053
   499  0000                     _INTCONbits	set	4082
   500  0000                     _LATE	set	3981
   501  0000                     _PORTE	set	3972
   502  0000                     _LATD	set	3980
   503  0000                     _PORTD	set	3971
   504  0000                     _LATC	set	3979
   505  0000                     _PORTC	set	3970
   506  0000                     _LATB	set	3978
   507  0000                     _PORTB	set	3969
   508  0000                     _LATA	set	3977
   509  0000                     _PORTA	set	3968
   510  0000                     _TRISE	set	3990
   511  0000                     _TRISD	set	3989
   512  0000                     _TRISC	set	3988
   513  0000                     _TRISB	set	3987
   514  0000                     _TRISA	set	3986
   515  0000                     _INTCON2	set	4081
   516  0000                     _INTCON	set	4082
   517  0000                     _TMR1H	set	4047
   518  0000                     _TMR1L	set	4046
   519  0000                     _T1CON	set	4045
   520  0000                     _INTCON2bits	set	4081
   521  0000                     _PORTEbits	set	3972
   522  0000                     _TRISEbits	set	3990
   523  0000                     _RCREG	set	4014
   524  0000                     _TXREG	set	4013
   525  0000                     _RCSTAbits	set	4011
   526  0000                     _TXSTAbits	set	4012
   527  0000                     _SPBRG	set	4015
   528  0000                     _BAUDCONbits	set	4024
   529  0000                     _PIR1bits	set	3998
   530  0000                     _PR2	set	4043
   531  0000                     _T2CONbits	set	4042
   532  0000                     _CCPR1L	set	4030
   533  0000                     _PORTDbits	set	3971
   534  0000                     _PORTCbits	set	3970
   535  0000                     _TRISDbits	set	3989
   536  0000                     _TRISCbits	set	3988
   537  0000                     _CCP1CON	set	4029
   538  0000                     _ADRESL	set	4035
   539  0000                     _ADRESH	set	4036
   540  0000                     _ADCON0bits	set	4034
   541  0000                     _ADCON2	set	4032
   542  0000                     _ADCON1	set	4033
   543  0000                     _ADCON0	set	4034
   544  000695                     STR_3:
   545  000695  4D                 	db	77	;'M'
   546  000696  41                 	db	65	;'A'
   547  000697  4E                 	db	78	;'N'
   548  000698  55                 	db	85	;'U'
   549  000699  41                 	db	65	;'A'
   550  00069A  4C                 	db	76	;'L'
   551  00069B  20                 	db	32
   552  00069C  20                 	db	32
   553  00069D  20                 	db	32
   554  00069E  20                 	db	32
   555  00069F  00                 	db	0
   556  0006A0                     STR_5:
   557  0006A0  4C                 	db	76	;'L'
   558  0006A1  49                 	db	73	;'I'
   559  0006A2  47                 	db	71	;'G'
   560  0006A3  20                 	db	32
   561  0006A4  20                 	db	32
   562  0006A5  20                 	db	32
   563  0006A6  20                 	db	32
   564  0006A7  20                 	db	32
   565  0006A8  00                 	db	0
   566  0006A9                     STR_4:
   567  0006A9  44                 	db	68	;'D'
   568  0006AA  45                 	db	69	;'E'
   569  0006AB  53                 	db	83	;'S'
   570  0006AC  4C                 	db	76	;'L'
   571  0006AD  20                 	db	32
   572  0006AE  20                 	db	32
   573  0006AF  20                 	db	32
   574  0006B0  20                 	db	32
   575  0006B1  00                 	db	0
   576  0006B2                     STR_2:
   577  0006B2  41                 	db	65	;'A'
   578  0006B3  55                 	db	85	;'U'
   579  0006B4  54                 	db	84	;'T'
   580  0006B5  4F                 	db	79	;'O'
   581  0006B6  20                 	db	32
   582  0006B7  20                 	db	32
   583  0006B8  00                 	db	0
   584  0006B9                     STR_10:
   585  0006B9  2F                 	db	47
   586  0006BA  2A                 	db	42
   587  0006BB  25                 	db	37
   588  0006BC  30                 	db	48	;'0'
   589  0006BD  34                 	db	52	;'4'
   590  0006BE  64                 	db	100	;'d'
   591  0006BF  00                 	db	0
   592  0006C0                     STR_8:
   593  0006C0  25                 	db	37
   594  0006C1  30                 	db	48	;'0'
   595  0006C2  34                 	db	52	;'4'
   596  0006C3  2E                 	db	46
   597  0006C4  32                 	db	50	;'2'
   598  0006C5  66                 	db	102	;'f'
   599  0006C6  00                 	db	0
   600  0006C7                     STR_15:
   601  0006C7  25                 	db	37
   602  0006C8  30                 	db	48	;'0'
   603  0006C9  32                 	db	50	;'2'
   604  0006CA  64                 	db	100	;'d'
   605  0006CB  0A                 	db	10
   606  0006CC  00                 	db	0
   607  0006CD                     STR_1:
   608  0006CD  25                 	db	37
   609  0006CE  30                 	db	48	;'0'
   610  0006CF  33                 	db	51	;'3'
   611  0006D0  64                 	db	100	;'d'
   612  0006D1  0A                 	db	10
   613  0006D2  00                 	db	0
   614  0006D3                     STR_12:
   615  0006D3  2F                 	db	47
   616  0006D4  25                 	db	37
   617  0006D5  30                 	db	48	;'0'
   618  0006D6  32                 	db	50	;'2'
   619  0006D7  64                 	db	100	;'d'
   620  0006D8  00                 	db	0
   621  0006D9                     STR_11:
   622  0006D9  2F                 	db	47
   623  0006DA  25                 	db	37
   624  0006DB  30                 	db	48	;'0'
   625  0006DC  34                 	db	52	;'4'
   626  0006DD  64                 	db	100	;'d'
   627  0006DE  00                 	db	0
   628  0006DF  00                 	db	0	; dummy byte at the end
   629  0000                     
   630                           ; #config settings
   631                           
   632                           	psect	cinit
   633  0078A8                     __pcinit:
   634                           	callstack 0
   635  0078A8                     start_initialization:
   636                           	callstack 0
   637  0078A8                     __initialization:
   638                           	callstack 0
   639                           
   640                           ; Initialize objects allocated to BANK2 (34 bytes)
   641                           ; load TBLPTR registers with __pidataBANK2
   642  0078A8  0ECC               	movlw	low __pidataBANK2
   643  0078AA  6EF6               	movwf	tblptrl,c
   644  0078AC  0E00               	movlw	high __pidataBANK2
   645  0078AE  6EF7               	movwf	tblptrh,c
   646  0078B0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   647  0078B2  6EF8               	movwf	tblptru,c
   648  0078B4  EE02  F000         	lfsr	0,__pdataBANK2
   649  0078B8  EE10 F022          	lfsr	1,34
   650  0078BC                     copy_data0:
   651  0078BC  0009               	tblrd		*+
   652  0078BE  CFF5 FFEE          	movff	tablat,postinc0
   653  0078C2  50E5               	movf	postdec1,w,c
   654  0078C4  50E1               	movf	fsr1l,w,c
   655  0078C6  E1FA               	bnz	copy_data0
   656                           
   657                           ; Initialize objects allocated to BANK1 (185 bytes)
   658                           ; load TBLPTR registers with __pidataBANK1
   659  0078C8  0ED4               	movlw	low __pidataBANK1
   660  0078CA  6EF6               	movwf	tblptrl,c
   661  0078CC  0E70               	movlw	high __pidataBANK1
   662  0078CE  6EF7               	movwf	tblptrh,c
   663  0078D0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   664  0078D2  6EF8               	movwf	tblptru,c
   665  0078D4  EE01  F000         	lfsr	0,__pdataBANK1
   666  0078D8  EE10 F0B9          	lfsr	1,185
   667  0078DC                     copy_data1:
   668  0078DC  0009               	tblrd		*+
   669  0078DE  CFF5 FFEE          	movff	tablat,postinc0
   670  0078E2  50E5               	movf	postdec1,w,c
   671  0078E4  50E1               	movf	fsr1l,w,c
   672  0078E6  E1FA               	bnz	copy_data1
   673                           
   674                           ; Initialize objects allocated to COMRAM (1 bytes)
   675                           ; load TBLPTR registers with __pidataCOMRAM
   676  0078E8  0E8D               	movlw	low __pidataCOMRAM
   677  0078EA  6EF6               	movwf	tblptrl,c
   678  0078EC  0E71               	movlw	high __pidataCOMRAM
   679  0078EE  6EF7               	movwf	tblptrh,c
   680  0078F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   681  0078F2  6EF8               	movwf	tblptru,c
   682  0078F4  0009               	tblrd		*+	;fetch initializer
   683  0078F6  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   684                           
   685                           ; Clear objects allocated to BANK2 (22 bytes)
   686  0078FA  EE02  F022         	lfsr	0,__pbssBANK2
   687  0078FE  0E16               	movlw	22
   688  007900                     clear_0:
   689  007900  6AEE               	clrf	postinc0,c
   690  007902  06E8               	decf	wreg,f,c
   691  007904  E1FD               	bnz	clear_0
   692                           
   693                           ; Clear objects allocated to BANK1 (36 bytes)
   694  007906  EE01  F0B9         	lfsr	0,__pbssBANK1
   695  00790A  0E24               	movlw	36
   696  00790C                     clear_1:
   697  00790C  6AEE               	clrf	postinc0,c
   698  00790E  06E8               	decf	wreg,f,c
   699  007910  E1FD               	bnz	clear_1
   700                           
   701                           ; Clear objects allocated to BANK0 (19 bytes)
   702  007912  EE00  F0E3         	lfsr	0,__pbssBANK0
   703  007916  0E13               	movlw	19
   704  007918                     clear_2:
   705  007918  6AEE               	clrf	postinc0,c
   706  00791A  06E8               	decf	wreg,f,c
   707  00791C  E1FD               	bnz	clear_2
   708                           
   709                           ; Clear objects allocated to COMRAM (1 bytes)
   710  00791E  6A7C               	clrf	__pbssCOMRAM& (0+255),c
   711  007920                     end_of_initialization:
   712                           	callstack 0
   713  007920                     __end_of__initialization:
   714                           	callstack 0
   715  007920  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   716  007922  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   717  007924  0E00               	movlw	low (__Lmediumconst shr (0+16))
   718  007926  6EF8               	movwf	tblptru,c
   719  007928  0100               	movlb	0
   720  00792A  EF4B  F011         	goto	_main	;jump to C main() function
   721                           
   722                           	psect	bssCOMRAM
   723  00007C                     __pbssCOMRAM:
   724                           	callstack 0
   725  00007C                     _dado:
   726                           	callstack 0
   727  00007C                     	ds	1
   728                           
   729                           	psect	dataCOMRAM
   730  00007D                     __pdataCOMRAM:
   731                           	callstack 0
   732  00007D                     _key:
   733                           	callstack 0
   734  00007D                     	ds	1
   735                           
   736                           	psect	bssBANK0
   737  0000E3                     __pbssBANK0:
   738                           	callstack 0
   739  0000E3                     _tensaoCXS:
   740                           	callstack 0
   741  0000E3                     	ds	4
   742  0000E7                     _tensaoCXI:
   743                           	callstack 0
   744  0000E7                     	ds	4
   745  0000EB                     _minCXS:
   746                           	callstack 0
   747  0000EB                     	ds	2
   748  0000ED                     _minCXI:
   749                           	callstack 0
   750  0000ED                     	ds	2
   751  0000EF                     _tecla:
   752                           	callstack 0
   753  0000EF                     	ds	1
   754  0000F0                     _states:
   755                           	callstack 0
   756  0000F0                     	ds	6
   757                           
   758                           	psect	bssBANK1
   759  0001B9                     __pbssBANK1:
   760                           	callstack 0
   761  0001B9                     _nivelCXS:
   762                           	callstack 0
   763  0001B9                     	ds	2
   764  0001BB                     _nivelCXI:
   765                           	callstack 0
   766  0001BB                     	ds	2
   767  0001BD                     _flag_safe:
   768                           	callstack 0
   769  0001BD                     	ds	2
   770  0001BF                     _count2:
   771                           	callstack 0
   772  0001BF                     	ds	2
   773  0001C1                     _count:
   774                           	callstack 0
   775  0001C1                     	ds	2
   776  0001C3                     _buffer_tx:
   777                           	callstack 0
   778  0001C3                     	ds	22
   779  0001D9                     _str:
   780                           	callstack 0
   781  0001D9                     	ds	4
   782                           
   783                           	psect	dataBANK1
   784  000100                     __pdataBANK1:
   785                           	callstack 0
   786  000100                     _txt0:
   787                           	callstack 0
   788  000100                     	ds	17
   789  000111                     _txt3e:
   790                           	callstack 0
   791  000111                     	ds	17
   792  000122                     _txt2e:
   793                           	callstack 0
   794  000122                     	ds	17
   795  000133                     _txt42:
   796                           	callstack 0
   797  000133                     	ds	17
   798  000144                     _txt12:
   799                           	callstack 0
   800  000144                     	ds	17
   801  000155                     _txt41:
   802                           	callstack 0
   803  000155                     	ds	17
   804  000166                     _txt11:
   805                           	callstack 0
   806  000166                     	ds	17
   807  000177                     _txt32:
   808                           	callstack 0
   809  000177                     	ds	13
   810  000184                     _txt22:
   811                           	callstack 0
   812  000184                     	ds	13
   813  000191                     _txt33:
   814                           	callstack 0
   815  000191                     	ds	12
   816  00019D                     _txt23:
   817                           	callstack 0
   818  00019D                     	ds	12
   819  0001A9                     _txt31:
   820                           	callstack 0
   821  0001A9                     	ds	9
   822  0001B2                     _txt21:
   823                           	callstack 0
   824  0001B2                     	ds	7
   825                           
   826                           	psect	bssBANK2
   827  000222                     __pbssBANK2:
   828                           	callstack 0
   829  000222                     _buffer_rx:
   830                           	callstack 0
   831  000222                     	ds	22
   832                           
   833                           	psect	dataBANK2
   834  000200                     __pdataBANK2:
   835                           	callstack 0
   836  000200                     _txt43:
   837                           	callstack 0
   838  000200                     	ds	17
   839  000211                     _txt13:
   840                           	callstack 0
   841  000211                     	ds	17
   842                           
   843                           	psect	cstackBANK2
   844  000238                     __pcstackBANK2:
   845                           	callstack 0
   846  000238                     main@dado:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x0
   850  000238                     	ds	2
   851                           
   852                           	psect	cstackBANK1
   853  0001DD                     __pcstackBANK1:
   854                           	callstack 0
   855  0001DD                     _sprintf$1961:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x0
   859  0001DD                     	ds	4
   860  0001E1                     sprintf@ap:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x4
   864  0001E1                     	ds	2
   865  0001E3                     sprintf@tmpval:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x6
   869  0001E3                     	ds	4
   870  0001E7                     sprintf@val:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0xA
   874  0001E7                     	ds	4
   875  0001EB                     sprintf@eexp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0xE
   879  0001EB                     	ds	2
   880  0001ED                     sprintf@flag:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x10
   884  0001ED                     	ds	2
   885  0001EF                     sprintf@width:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x12
   889  0001EF                     	ds	2
   890  0001F1                     sprintf@fval:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x14
   894  0001F1                     	ds	4
   895  0001F5                     sprintf@prec:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x18
   899  0001F5                     	ds	2
   900  0001F7                     sprintf@c:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x1A
   904  0001F7                     	ds	1
   905  0001F8                     atualizatela@estados:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x1B
   909  0001F8                     	ds	2
   910  0001FA                     ??_atualizatela:
   911                           
   912                           ; 1 bytes @ 0x1D
   913  0001FA                     	ds	2
   914  0001FC                     _atualizatela$1957:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x1F
   918  0001FC                     	ds	4
   919                           
   920                           	psect	cstackBANK0
   921  000080                     __pcstackBANK0:
   922                           	callstack 0
   923  000080                     ??_isr:
   924                           
   925                           ; 1 bytes @ 0x0
   926  000080                     	ds	10
   927  00008A                     ??_Lcd_Cmd:
   928  00008A                     ??_Lcd_Chr_CP:
   929  00008A                     ??_isdigit:
   930  00008A                     ?_adc_amostra:
   931                           	callstack 0
   932  00008A                     ?___wmul:
   933                           	callstack 0
   934  00008A                     ?___awmod:
   935                           	callstack 0
   936  00008A                     ?___lwmod:
   937                           	callstack 0
   938  00008A                     ?__tdiv_to_l_:
   939                           	callstack 0
   940  00008A                     ?__div_to_l_:
   941                           	callstack 0
   942  00008A                     ?___lldiv:
   943                           	callstack 0
   944  00008A                     ?___aldiv:
   945                           	callstack 0
   946  00008A                     ?___flneg:
   947                           	callstack 0
   948  00008A                     ?___xxtofl:
   949                           	callstack 0
   950  00008A                     serial_rx@timeout:
   951                           	callstack 0
   952  00008A                     atraso_ms@valor:
   953                           	callstack 0
   954  00008A                     ___wmul@multiplier:
   955                           	callstack 0
   956  00008A                     ___awmod@dividend:
   957                           	callstack 0
   958  00008A                     ___lwmod@dividend:
   959                           	callstack 0
   960  00008A                     ___lldiv@dividend:
   961                           	callstack 0
   962  00008A                     ___aldiv@dividend:
   963                           	callstack 0
   964  00008A                     __div_to_l_@f1:
   965                           	callstack 0
   966  00008A                     ___fleq@ff1:
   967                           	callstack 0
   968  00008A                     ___flge@ff1:
   969                           	callstack 0
   970  00008A                     ___flneg@f1:
   971                           	callstack 0
   972  00008A                     __tdiv_to_l_@f1:
   973                           	callstack 0
   974  00008A                     ___xxtofl@val:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0xA
   978  00008A                     	ds	1
   979  00008B                     _isdigit$1745:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0xB
   983  00008B                     	ds	1
   984  00008C                     ??_adc_amostra:
   985  00008C                     ??_serial_rx:
   986  00008C                     Lcd_Chr_CP@data:
   987                           	callstack 0
   988  00008C                     Lcd_Cmd@data:
   989                           	callstack 0
   990  00008C                     isdigit@c:
   991                           	callstack 0
   992  00008C                     atraso_ms@i:
   993                           	callstack 0
   994  00008C                     ___wmul@multiplicand:
   995                           	callstack 0
   996  00008C                     ___awmod@divisor:
   997                           	callstack 0
   998  00008C                     ___lwmod@divisor:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0xC
  1002  00008C                     	ds	1
  1003  00008D                     ??_Lcd_Init:
  1004  00008D                     Lcd_Out@x:
  1005                           	callstack 0
  1006  00008D                     serial_rx@to:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0xD
  1010  00008D                     	ds	1
  1011  00008E                     ??___xxtofl:
  1012  00008E                     atraso_ms@j:
  1013                           	callstack 0
  1014  00008E                     Lcd_Init@data:
  1015                           	callstack 0
  1016  00008E                     ___awmod@counter:
  1017                           	callstack 0
  1018  00008E                     ___lwmod@counter:
  1019                           	callstack 0
  1020  00008E                     Lcd_Out@buffer:
  1021                           	callstack 0
  1022  00008E                     ___wmul@product:
  1023                           	callstack 0
  1024  00008E                     ___lldiv@divisor:
  1025                           	callstack 0
  1026  00008E                     ___aldiv@divisor:
  1027                           	callstack 0
  1028  00008E                     __div_to_l_@f2:
  1029                           	callstack 0
  1030  00008E                     ___fleq@ff2:
  1031                           	callstack 0
  1032  00008E                     ___flge@ff2:
  1033                           	callstack 0
  1034  00008E                     __tdiv_to_l_@f2:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0xE
  1038  00008E                     	ds	1
  1039  00008F                     ?___lwdiv:
  1040                           	callstack 0
  1041  00008F                     ___awmod@sign:
  1042                           	callstack 0
  1043  00008F                     tc_tecla@timeout:
  1044                           	callstack 0
  1045  00008F                     ___lwdiv@dividend:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0xF
  1049  00008F                     	ds	1
  1050  000090                     ?___awdiv:
  1051                           	callstack 0
  1052  000090                     adc_amostra@canal:
  1053                           	callstack 0
  1054  000090                     Lcd_Out@y:
  1055                           	callstack 0
  1056  000090                     ___awdiv@dividend:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x10
  1060  000090                     	ds	1
  1061  000091                     Lcd_Out@data:
  1062                           	callstack 0
  1063  000091                     tc_tecla@tmp:
  1064                           	callstack 0
  1065  000091                     ___lwdiv@divisor:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x11
  1069  000091                     	ds	1
  1070  000092                     ??__tdiv_to_l_:
  1071  000092                     ??___fleq:
  1072  000092                     ??___flge:
  1073  000092                     ___aldiv@counter:
  1074                           	callstack 0
  1075  000092                     ___xxtofl@sign:
  1076                           	callstack 0
  1077  000092                     maketela@estados0:
  1078                           	callstack 0
  1079  000092                     tc_tecla@to:
  1080                           	callstack 0
  1081  000092                     ___awdiv@divisor:
  1082                           	callstack 0
  1083  000092                     ___lldiv@quotient:
  1084                           	callstack 0
  1085  000092                     __div_to_l_@quot:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x12
  1089  000092                     	ds	1
  1090  000093                     ___aldiv@sign:
  1091                           	callstack 0
  1092  000093                     ___lwdiv@counter:
  1093                           	callstack 0
  1094  000093                     ___xxtofl@exp:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x13
  1098  000093                     	ds	1
  1099  000094                     ??_maketela:
  1100  000094                     tc_tecla@ret:
  1101                           	callstack 0
  1102  000094                     ___awdiv@counter:
  1103                           	callstack 0
  1104  000094                     ___lwdiv@quotient:
  1105                           	callstack 0
  1106  000094                     ___aldiv@quotient:
  1107                           	callstack 0
  1108  000094                     ___xxtofl@arg:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x14
  1112  000094                     	ds	1
  1113  000095                     tc_tecla@i:
  1114                           	callstack 0
  1115  000095                     ___awdiv@sign:
  1116                           	callstack 0
  1117  000095                     __tdiv_to_l_@quot:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x15
  1121  000095                     	ds	1
  1122  000096                     ___lldiv@counter:
  1123                           	callstack 0
  1124  000096                     __div_to_l_@cntr:
  1125                           	callstack 0
  1126  000096                     ___awdiv@quotient:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x16
  1130  000096                     	ds	1
  1131  000097                     ?___llmod:
  1132                           	callstack 0
  1133  000097                     __div_to_l_@exp1:
  1134                           	callstack 0
  1135  000097                     ___llmod@dividend:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x17
  1139  000097                     	ds	1
  1140  000098                     ?___flmul:
  1141                           	callstack 0
  1142  000098                     PWM1_Init@f:
  1143                           	callstack 0
  1144  000098                     ___flmul@b:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x18
  1148  000098                     	ds	1
  1149  000099                     __tdiv_to_l_@cntr:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x19
  1153  000099                     	ds	1
  1154  00009A                     ??_PWM1_Init:
  1155  00009A                     __tdiv_to_l_@exp1:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x1A
  1159  00009A                     	ds	1
  1160  00009B                     ___llmod@divisor:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x1B
  1164  00009B                     	ds	1
  1165  00009C                     ___flmul@a:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x1C
  1169  00009C                     	ds	2
  1170  00009E                     PWM1_Init@temp:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x1E
  1174  00009E                     	ds	1
  1175  00009F                     ___llmod@counter:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x1F
  1179  00009F                     	ds	1
  1180  0000A0                     ??___flmul:
  1181                           
  1182                           ; 1 bytes @ 0x20
  1183  0000A0                     	ds	4
  1184  0000A4                     ___flmul@sign:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x24
  1188  0000A4                     	ds	1
  1189  0000A5                     ___flmul@aexp:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x25
  1193  0000A5                     	ds	1
  1194  0000A6                     ___flmul@grs:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x26
  1198  0000A6                     	ds	4
  1199  0000AA                     ___flmul@bexp:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x2A
  1203  0000AA                     	ds	1
  1204  0000AB                     ___flmul@prod:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x2B
  1208  0000AB                     	ds	4
  1209  0000AF                     ___flmul@temp:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x2F
  1213  0000AF                     	ds	2
  1214  0000B1                     ?___fldiv:
  1215                           	callstack 0
  1216  0000B1                     ?_fround:
  1217                           	callstack 0
  1218  0000B1                     ?_scale:
  1219                           	callstack 0
  1220  0000B1                     ___fldiv@b:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x31
  1224  0000B1                     	ds	4
  1225  0000B5                     ___fldiv@a:
  1226                           	callstack 0
  1227  0000B5                     _fround$1959:
  1228                           	callstack 0
  1229  0000B5                     _scale$1960:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x35
  1233  0000B5                     	ds	4
  1234  0000B9                     ??___fldiv:
  1235  0000B9                     scale@scl:
  1236                           	callstack 0
  1237  0000B9                     _fround$1958:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x39
  1241  0000B9                     	ds	1
  1242  0000BA                     ?___fltol:
  1243                           	callstack 0
  1244  0000BA                     ___fltol@f1:
  1245                           	callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x3A
  1248  0000BA                     	ds	3
  1249  0000BD                     fround@prec:
  1250                           	callstack 0
  1251  0000BD                     ___fldiv@rem:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x3D
  1255  0000BD                     	ds	1
  1256  0000BE                     ??___fltol:
  1257  0000BE                     ?___fladd:
  1258                           	callstack 0
  1259  0000BE                     ___fladd@b:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x3E
  1263  0000BE                     	ds	3
  1264  0000C1                     ___fldiv@sign:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x41
  1268  0000C1                     	ds	1
  1269  0000C2                     ___fltol@sign1:
  1270                           	callstack 0
  1271  0000C2                     ___fldiv@new_exp:
  1272                           	callstack 0
  1273  0000C2                     ___fladd@a:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x42
  1277  0000C2                     	ds	1
  1278  0000C3                     ___fltol@exp1:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x43
  1282  0000C3                     	ds	1
  1283  0000C4                     ___fldiv@grs:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x44
  1287  0000C4                     	ds	2
  1288  0000C6                     ??___fladd:
  1289                           
  1290                           ; 1 bytes @ 0x46
  1291  0000C6                     	ds	2
  1292  0000C8                     ___fldiv@bexp:
  1293                           	callstack 0
  1294                           
  1295                           ; 1 bytes @ 0x48
  1296  0000C8                     	ds	1
  1297  0000C9                     ___fldiv@aexp:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x49
  1301  0000C9                     	ds	1
  1302  0000CA                     ___fladd@signs:
  1303                           	callstack 0
  1304                           
  1305                           ; 1 bytes @ 0x4A
  1306  0000CA                     	ds	1
  1307  0000CB                     ___fladd@aexp:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x4B
  1311  0000CB                     	ds	1
  1312  0000CC                     ___fladd@bexp:
  1313                           	callstack 0
  1314                           
  1315                           ; 1 bytes @ 0x4C
  1316  0000CC                     	ds	1
  1317  0000CD                     ___fladd@grs:
  1318                           	callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x4D
  1321  0000CD                     	ds	1
  1322  0000CE                     ?___flsub:
  1323                           	callstack 0
  1324  0000CE                     ___flsub@b:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x4E
  1328  0000CE                     	ds	4
  1329  0000D2                     ___flsub@a:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x52
  1333  0000D2                     	ds	4
  1334  0000D6                     ?_sprintf:
  1335                           	callstack 0
  1336  0000D6                     sprintf@sp:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x56
  1340  0000D6                     	ds	2
  1341  0000D8                     sprintf@f:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x58
  1345  0000D8                     	ds	6
  1346  0000DE                     ??_sprintf:
  1347                           
  1348                           ; 1 bytes @ 0x5E
  1349  0000DE                     	ds	4
  1350  0000E2                     ??_main:
  1351                           
  1352                           ; 1 bytes @ 0x62
  1353  0000E2                     	ds	1
  1354                           
  1355                           	psect	cstackCOMRAM
  1356  000001                     __pcstackCOMRAM:
  1357                           	callstack 0
  1358  000001                     ??i2_Lcd_Chr_CP:
  1359  000001                     ??i2_Lcd_Cmd:
  1360  000001                     ??i2_isdigit:
  1361  000001                     ?i2_adc_amostra:
  1362                           	callstack 0
  1363  000001                     ?i2___wmul:
  1364                           	callstack 0
  1365  000001                     ?i2___awmod:
  1366                           	callstack 0
  1367  000001                     ?i2___lwmod:
  1368                           	callstack 0
  1369  000001                     ?i2___lldiv:
  1370                           	callstack 0
  1371  000001                     ?i2__div_to_l_:
  1372                           	callstack 0
  1373  000001                     ?i2___flneg:
  1374                           	callstack 0
  1375  000001                     ?i2__tdiv_to_l_:
  1376                           	callstack 0
  1377  000001                     ?i2___xxtofl:
  1378                           	callstack 0
  1379  000001                     serial_tx@val:
  1380                           	callstack 0
  1381  000001                     i2___wmul@multiplier:
  1382                           	callstack 0
  1383  000001                     i2___awmod@dividend:
  1384                           	callstack 0
  1385  000001                     i2___lwmod@dividend:
  1386                           	callstack 0
  1387  000001                     i2___lldiv@dividend:
  1388                           	callstack 0
  1389  000001                     i2__div_to_l_@f1:
  1390                           	callstack 0
  1391  000001                     i2___fleq@ff1:
  1392                           	callstack 0
  1393  000001                     i2___flge@ff1:
  1394                           	callstack 0
  1395  000001                     i2___flneg@f1:
  1396                           	callstack 0
  1397  000001                     i2__tdiv_to_l_@f1:
  1398                           	callstack 0
  1399  000001                     i2___xxtofl@val:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x0
  1403  000001                     	ds	1
  1404  000002                     i2_isdigit$1745:
  1405                           	callstack 0
  1406  000002                     serial_tx_str@val:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x1
  1410  000002                     	ds	1
  1411  000003                     ??i2_adc_amostra:
  1412  000003                     i2Lcd_Chr_CP@data:
  1413                           	callstack 0
  1414  000003                     i2Lcd_Cmd@data:
  1415                           	callstack 0
  1416  000003                     i2isdigit@c:
  1417                           	callstack 0
  1418  000003                     i2___wmul@multiplicand:
  1419                           	callstack 0
  1420  000003                     i2___awmod@divisor:
  1421                           	callstack 0
  1422  000003                     i2___lwmod@divisor:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x2
  1426  000003                     	ds	1
  1427  000004                     serial_tx_str@i:
  1428                           	callstack 0
  1429  000004                     i2Lcd_Out@x:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x3
  1433  000004                     	ds	1
  1434  000005                     ??i2___xxtofl:
  1435  000005                     i2___awmod@counter:
  1436                           	callstack 0
  1437  000005                     i2___lwmod@counter:
  1438                           	callstack 0
  1439  000005                     i2Lcd_Out@buffer:
  1440                           	callstack 0
  1441  000005                     i2___wmul@product:
  1442                           	callstack 0
  1443  000005                     i2___lldiv@divisor:
  1444                           	callstack 0
  1445  000005                     i2__div_to_l_@f2:
  1446                           	callstack 0
  1447  000005                     i2___fleq@ff2:
  1448                           	callstack 0
  1449  000005                     i2___flge@ff2:
  1450                           	callstack 0
  1451  000005                     i2__tdiv_to_l_@f2:
  1452                           	callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x4
  1455  000005                     	ds	1
  1456  000006                     ?i2___lwdiv:
  1457                           	callstack 0
  1458  000006                     i2___awmod@sign:
  1459                           	callstack 0
  1460  000006                     i2___lwdiv@dividend:
  1461                           	callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x5
  1464  000006                     	ds	1
  1465  000007                     ?i2___awdiv:
  1466                           	callstack 0
  1467  000007                     i2adc_amostra@canal:
  1468                           	callstack 0
  1469  000007                     i2Lcd_Out@y:
  1470                           	callstack 0
  1471  000007                     i2___awdiv@dividend:
  1472                           	callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x6
  1475  000007                     	ds	1
  1476  000008                     i2Lcd_Out@data:
  1477                           	callstack 0
  1478  000008                     i2___lwdiv@divisor:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x7
  1482  000008                     	ds	1
  1483  000009                     ??i2___fleq:
  1484  000009                     ??i2___flge:
  1485  000009                     ??i2__tdiv_to_l_:
  1486  000009                     i2___xxtofl@sign:
  1487                           	callstack 0
  1488  000009                     i2___awdiv@divisor:
  1489                           	callstack 0
  1490  000009                     i2___lldiv@quotient:
  1491                           	callstack 0
  1492  000009                     i2__div_to_l_@quot:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x8
  1496  000009                     	ds	1
  1497  00000A                     i2___xxtofl@exp:
  1498                           	callstack 0
  1499  00000A                     i2___lwdiv@quotient:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x9
  1503  00000A                     	ds	1
  1504  00000B                     i2___awdiv@counter:
  1505                           	callstack 0
  1506  00000B                     i2___xxtofl@arg:
  1507                           	callstack 0
  1508                           
  1509                           ; 4 bytes @ 0xA
  1510  00000B                     	ds	1
  1511  00000C                     i2___awdiv@sign:
  1512                           	callstack 0
  1513  00000C                     i2___lwdiv@counter:
  1514                           	callstack 0
  1515  00000C                     i2__tdiv_to_l_@quot:
  1516                           	callstack 0
  1517                           
  1518                           ; 4 bytes @ 0xB
  1519  00000C                     	ds	1
  1520  00000D                     i2___lldiv@counter:
  1521                           	callstack 0
  1522  00000D                     i2__div_to_l_@cntr:
  1523                           	callstack 0
  1524  00000D                     i2___awdiv@quotient:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0xC
  1528  00000D                     	ds	1
  1529  00000E                     ?i2___llmod:
  1530                           	callstack 0
  1531  00000E                     i2__div_to_l_@exp1:
  1532                           	callstack 0
  1533  00000E                     i2___llmod@dividend:
  1534                           	callstack 0
  1535                           
  1536                           ; 4 bytes @ 0xD
  1537  00000E                     	ds	1
  1538  00000F                     ?i2___flmul:
  1539                           	callstack 0
  1540  00000F                     i2___flmul@b:
  1541                           	callstack 0
  1542                           
  1543                           ; 4 bytes @ 0xE
  1544  00000F                     	ds	1
  1545  000010                     i2__tdiv_to_l_@cntr:
  1546                           	callstack 0
  1547                           
  1548                           ; 1 bytes @ 0xF
  1549  000010                     	ds	1
  1550  000011                     i2__tdiv_to_l_@exp1:
  1551                           	callstack 0
  1552                           
  1553                           ; 1 bytes @ 0x10
  1554  000011                     	ds	1
  1555  000012                     i2___llmod@divisor:
  1556                           	callstack 0
  1557                           
  1558                           ; 4 bytes @ 0x11
  1559  000012                     	ds	1
  1560  000013                     i2___flmul@a:
  1561                           	callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x12
  1564  000013                     	ds	3
  1565  000016                     i2___llmod@counter:
  1566                           	callstack 0
  1567                           
  1568                           ; 1 bytes @ 0x15
  1569  000016                     	ds	1
  1570  000017                     ??i2___flmul:
  1571                           
  1572                           ; 1 bytes @ 0x16
  1573  000017                     	ds	4
  1574  00001B                     i2___flmul@sign:
  1575                           	callstack 0
  1576                           
  1577                           ; 1 bytes @ 0x1A
  1578  00001B                     	ds	1
  1579  00001C                     i2___flmul@grs:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x1B
  1583  00001C                     	ds	4
  1584  000020                     i2___flmul@aexp:
  1585                           	callstack 0
  1586                           
  1587                           ; 1 bytes @ 0x1F
  1588  000020                     	ds	1
  1589  000021                     i2___flmul@bexp:
  1590                           	callstack 0
  1591                           
  1592                           ; 1 bytes @ 0x20
  1593  000021                     	ds	1
  1594  000022                     i2___flmul@prod:
  1595                           	callstack 0
  1596                           
  1597                           ; 4 bytes @ 0x21
  1598  000022                     	ds	4
  1599  000026                     i2___flmul@temp:
  1600                           	callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x25
  1603  000026                     	ds	2
  1604  000028                     ?i2_fround:
  1605                           	callstack 0
  1606  000028                     ?i2_scale:
  1607                           	callstack 0
  1608  000028                     ?i2___fltol:
  1609                           	callstack 0
  1610  000028                     ?i2___fldiv:
  1611                           	callstack 0
  1612  000028                     i2___fltol@f1:
  1613                           	callstack 0
  1614  000028                     i2___fldiv@b:
  1615                           	callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x27
  1618  000028                     	ds	4
  1619  00002C                     ??i2___fltol:
  1620  00002C                     i2___fldiv@a:
  1621                           	callstack 0
  1622  00002C                     i2_fround$2226:
  1623                           	callstack 0
  1624  00002C                     i2_scale$2227:
  1625                           	callstack 0
  1626                           
  1627                           ; 4 bytes @ 0x2B
  1628  00002C                     	ds	4
  1629  000030                     ??i2___fldiv:
  1630  000030                     i2scale@scl:
  1631                           	callstack 0
  1632  000030                     i2___fltol@sign1:
  1633                           	callstack 0
  1634  000030                     i2_fround$2225:
  1635                           	callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x2F
  1638  000030                     	ds	1
  1639  000031                     i2___fltol@exp1:
  1640                           	callstack 0
  1641                           
  1642                           ; 1 bytes @ 0x30
  1643  000031                     	ds	3
  1644  000034                     i2fround@prec:
  1645                           	callstack 0
  1646  000034                     i2___fldiv@rem:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x33
  1650  000034                     	ds	1
  1651  000035                     ?i2___fladd:
  1652                           	callstack 0
  1653  000035                     i2___fladd@b:
  1654                           	callstack 0
  1655                           
  1656                           ; 4 bytes @ 0x34
  1657  000035                     	ds	3
  1658  000038                     i2___fldiv@sign:
  1659                           	callstack 0
  1660                           
  1661                           ; 1 bytes @ 0x37
  1662  000038                     	ds	1
  1663  000039                     i2___fldiv@new_exp:
  1664                           	callstack 0
  1665  000039                     i2___fladd@a:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x38
  1669  000039                     	ds	2
  1670  00003B                     i2___fldiv@grs:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x3A
  1674  00003B                     	ds	2
  1675  00003D                     ??i2___fladd:
  1676                           
  1677                           ; 1 bytes @ 0x3C
  1678  00003D                     	ds	2
  1679  00003F                     i2___fldiv@bexp:
  1680                           	callstack 0
  1681                           
  1682                           ; 1 bytes @ 0x3E
  1683  00003F                     	ds	1
  1684  000040                     i2___fldiv@aexp:
  1685                           	callstack 0
  1686                           
  1687                           ; 1 bytes @ 0x3F
  1688  000040                     	ds	1
  1689  000041                     i2___fladd@signs:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x40
  1693  000041                     	ds	1
  1694  000042                     i2___fladd@aexp:
  1695                           	callstack 0
  1696                           
  1697                           ; 1 bytes @ 0x41
  1698  000042                     	ds	1
  1699  000043                     i2___fladd@bexp:
  1700                           	callstack 0
  1701                           
  1702                           ; 1 bytes @ 0x42
  1703  000043                     	ds	1
  1704  000044                     i2___fladd@grs:
  1705                           	callstack 0
  1706                           
  1707                           ; 1 bytes @ 0x43
  1708  000044                     	ds	1
  1709  000045                     ?i2___flsub:
  1710                           	callstack 0
  1711  000045                     i2___flsub@b:
  1712                           	callstack 0
  1713                           
  1714                           ; 4 bytes @ 0x44
  1715  000045                     	ds	4
  1716  000049                     i2___flsub@a:
  1717                           	callstack 0
  1718                           
  1719                           ; 4 bytes @ 0x48
  1720  000049                     	ds	4
  1721  00004D                     ?i2_sprintf:
  1722                           	callstack 0
  1723  00004D                     i2sprintf@sp:
  1724                           	callstack 0
  1725                           
  1726                           ; 2 bytes @ 0x4C
  1727  00004D                     	ds	2
  1728  00004F                     i2sprintf@f:
  1729                           	callstack 0
  1730                           
  1731                           ; 2 bytes @ 0x4E
  1732  00004F                     	ds	6
  1733  000055                     ??i2_sprintf:
  1734                           
  1735                           ; 1 bytes @ 0x54
  1736  000055                     	ds	4
  1737  000059                     i2_sprintf$2228:
  1738                           	callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x58
  1741  000059                     	ds	4
  1742  00005D                     i2sprintf@ap:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x5C
  1746  00005D                     	ds	2
  1747  00005F                     i2sprintf@tmpval:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x5E
  1751  00005F                     	ds	4
  1752  000063                     i2sprintf@val:
  1753                           	callstack 0
  1754                           
  1755                           ; 4 bytes @ 0x62
  1756  000063                     	ds	4
  1757  000067                     i2sprintf@eexp:
  1758                           	callstack 0
  1759                           
  1760                           ; 2 bytes @ 0x66
  1761  000067                     	ds	2
  1762  000069                     i2sprintf@flag:
  1763                           	callstack 0
  1764                           
  1765                           ; 2 bytes @ 0x68
  1766  000069                     	ds	2
  1767  00006B                     i2sprintf@width:
  1768                           	callstack 0
  1769                           
  1770                           ; 2 bytes @ 0x6A
  1771  00006B                     	ds	2
  1772  00006D                     i2sprintf@fval:
  1773                           	callstack 0
  1774                           
  1775                           ; 4 bytes @ 0x6C
  1776  00006D                     	ds	4
  1777  000071                     i2sprintf@prec:
  1778                           	callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x70
  1781  000071                     	ds	2
  1782  000073                     i2sprintf@c:
  1783                           	callstack 0
  1784                           
  1785                           ; 1 bytes @ 0x72
  1786  000073                     	ds	1
  1787  000074                     i2atualizatela@estados:
  1788                           	callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x73
  1791  000074                     	ds	2
  1792  000076                     ??i2_atualizatela:
  1793                           
  1794                           ; 1 bytes @ 0x75
  1795  000076                     	ds	2
  1796  000078                     i2_atualizatela$2224:
  1797                           	callstack 0
  1798                           
  1799                           ; 4 bytes @ 0x77
  1800  000078                     	ds	4
  1801                           
  1802 ;;
  1803 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1804 ;;
  1805 ;; *************** function _main *****************
  1806 ;; Defined at:
  1807 ;;		line 38 in file "main.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  dado            2    0[BANK2 ] int 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1821 ;;      Params:         0       0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       2       0       0       0
  1823 ;;      Temps:          0       1       0       0       0       0       0
  1824 ;;      Totals:         0       1       0       2       0       0       0
  1825 ;;Total ram usage:        3 bytes
  1826 ;; Hardware stack levels required when called:    9
  1827 ;; This function calls:
  1828 ;;		_Lcd_Init
  1829 ;;		_PWM1_Init
  1830 ;;		_PWM1_Start
  1831 ;;		___flge
  1832 ;;		_adc_init
  1833 ;;		_atualizatela
  1834 ;;		_leituraCXI
  1835 ;;		_leituraCXS
  1836 ;;		_maketela
  1837 ;;		_serial_init
  1838 ;;		_serial_rx
  1839 ;;		_sprintf
  1840 ;;		_tc_tecla
  1841 ;;		_testeMin
  1842 ;; This function is called by:
  1843 ;;		Startup code after reset
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text0
  1848  002296                     __ptext0:
  1849                           	callstack 0
  1850  002296                     _main:
  1851                           	callstack 22
  1852  002296                     
  1853                           ;main.c: 40: ADCON0 = 0b00000000;
  1854  002296  0E00               	movlw	0
  1855  002298  6EC2               	movwf	194,c	;volatile
  1856                           
  1857                           ;main.c: 41: ADCON1 = 0x00;
  1858  00229A  0E00               	movlw	0
  1859  00229C  6EC1               	movwf	193,c	;volatile
  1860  00229E                     
  1861                           ;main.c: 42: INTCON2bits.RBPU = 1;
  1862  00229E  8EF1               	bsf	241,7,c	;volatile
  1863                           
  1864                           ;main.c: 43: T1CON = 0b10000011;
  1865  0022A0  0E83               	movlw	131
  1866  0022A2  6ECD               	movwf	205,c	;volatile
  1867                           
  1868                           ;main.c: 44: TMR1L = 0;
  1869  0022A4  0E00               	movlw	0
  1870  0022A6  6ECE               	movwf	206,c	;volatile
  1871                           
  1872                           ;main.c: 45: TMR1H = 0;
  1873  0022A8  0E00               	movlw	0
  1874  0022AA  6ECF               	movwf	207,c	;volatile
  1875  0022AC                     
  1876                           ;main.c: 46: PWM1_Init(1000);
  1877  0022AC  0E03               	movlw	3
  1878  0022AE  0100               	movlb	0	; () banked
  1879  0022B0  6F99               	movwf	(PWM1_Init@f+1)& (0+255),b
  1880  0022B2  0EE8               	movlw	232
  1881  0022B4  6F98               	movwf	PWM1_Init@f& (0+255),b
  1882  0022B6  ECCB  F036         	call	_PWM1_Init	;wreg free
  1883  0022BA                     
  1884                           ;main.c: 47: PWM1_Start();
  1885  0022BA  EC3D  F000         	call	_PWM1_Start	;wreg free
  1886  0022BE                     
  1887                           ;main.c: 48: INTCON = 0b11100000;
  1888  0022BE  0EE0               	movlw	224
  1889  0022C0  6EF2               	movwf	242,c	;volatile
  1890  0022C2                     
  1891                           ;main.c: 49: INTCON2 = 0b10000000;
  1892  0022C2  0E80               	movlw	128
  1893  0022C4  6EF1               	movwf	241,c	;volatile
  1894  0022C6                     
  1895                           ;main.c: 50: TRISA = 0b11111111;
  1896  0022C6  6892               	setf	146,c	;volatile
  1897  0022C8                     
  1898                           ;main.c: 51: TRISB = 0b00000000;
  1899  0022C8  0E00               	movlw	0
  1900  0022CA  6E93               	movwf	147,c	;volatile
  1901  0022CC                     
  1902                           ;main.c: 52: TRISC = 0b10000000;
  1903  0022CC  0E80               	movlw	128
  1904  0022CE  6E94               	movwf	148,c	;volatile
  1905  0022D0                     
  1906                           ;main.c: 53: TRISD = 0b00001111;
  1907  0022D0  0E0F               	movlw	15
  1908  0022D2  6E95               	movwf	149,c	;volatile
  1909  0022D4                     
  1910                           ;main.c: 54: TRISE = 0b00000001;
  1911  0022D4  0E01               	movlw	1
  1912  0022D6  6E96               	movwf	150,c	;volatile
  1913  0022D8                     
  1914                           ;main.c: 56: PORTA = 0;
  1915  0022D8  0E00               	movlw	0
  1916  0022DA  6E80               	movwf	128,c	;volatile
  1917  0022DC                     
  1918                           ;main.c: 57: LATA = 0;
  1919  0022DC  0E00               	movlw	0
  1920  0022DE  6E89               	movwf	137,c	;volatile
  1921  0022E0                     
  1922                           ;main.c: 58: PORTB = 0xFF;
  1923  0022E0  6881               	setf	129,c	;volatile
  1924  0022E2                     
  1925                           ;main.c: 59: LATB = 0xFF;
  1926  0022E2  688A               	setf	138,c	;volatile
  1927  0022E4                     
  1928                           ;main.c: 60: PORTC = 0;
  1929  0022E4  0E00               	movlw	0
  1930  0022E6  6E82               	movwf	130,c	;volatile
  1931  0022E8                     
  1932                           ;main.c: 61: LATC = 0;
  1933  0022E8  0E00               	movlw	0
  1934  0022EA  6E8B               	movwf	139,c	;volatile
  1935  0022EC                     
  1936                           ;main.c: 62: PORTD = 0x0F;
  1937  0022EC  0E0F               	movlw	15
  1938  0022EE  6E83               	movwf	131,c	;volatile
  1939  0022F0                     
  1940                           ;main.c: 63: LATD = 0x0F;
  1941  0022F0  0E0F               	movlw	15
  1942  0022F2  6E8C               	movwf	140,c	;volatile
  1943  0022F4                     
  1944                           ;main.c: 64: PORTE = 0;
  1945  0022F4  0E00               	movlw	0
  1946  0022F6  6E84               	movwf	132,c	;volatile
  1947  0022F8                     
  1948                           ;main.c: 65: LATE = 0;
  1949  0022F8  0E00               	movlw	0
  1950  0022FA  6E8D               	movwf	141,c	;volatile
  1951  0022FC                     
  1952                           ;main.c: 66: INTCON2bits.INTEDG0 = 0;
  1953  0022FC  9CF1               	bcf	241,6,c	;volatile
  1954  0022FE                     
  1955                           ;main.c: 67: INTCONbits.INT0IF = 0;
  1956  0022FE  92F2               	bcf	242,1,c	;volatile
  1957  002300                     
  1958                           ;main.c: 68: INTCONbits.INT0IE = 1;
  1959  002300  88F2               	bsf	242,4,c	;volatile
  1960  002302                     
  1961                           ;main.c: 69: INTCONbits.TMR0IF = 0;
  1962  002302  94F2               	bcf	242,2,c	;volatile
  1963  002304                     
  1964                           ;main.c: 70: INTCONbits.TMR0IE = 1;
  1965  002304  8AF2               	bsf	242,5,c	;volatile
  1966  002306                     
  1967                           ;main.c: 73: T0CON = 0b11000101;
  1968  002306  0EC5               	movlw	197
  1969  002308  6ED5               	movwf	213,c	;volatile
  1970  00230A                     
  1971                           ;main.c: 74: TMR0 = 131;
  1972  00230A  0E00               	movlw	0
  1973  00230C  6ED7               	movwf	215,c	;volatile
  1974  00230E  0E83               	movlw	131
  1975  002310  6ED6               	movwf	214,c	;volatile
  1976  002312                     
  1977                           ;main.c: 75: (INTCONbits.GIE = 1);
  1978  002312  8EF2               	bsf	242,7,c	;volatile
  1979  002314                     
  1980                           ;main.c: 77: adc_init();
  1981  002314  EC8D  F000         	call	_adc_init	;wreg free
  1982  002318                     
  1983                           ;main.c: 78: Lcd_Init();
  1984  002318  ECEF  F031         	call	_Lcd_Init	;wreg free
  1985  00231C                     
  1986                           ;main.c: 79: serial_init();
  1987  00231C  EC77  F000         	call	_serial_init	;wreg free
  1988  002320                     
  1989                           ;main.c: 80: states[0] = 2;
  1990  002320  0E00               	movlw	0
  1991  002322  0100               	movlb	0	; () banked
  1992  002324  6FF1               	movwf	(_states+1)& (0+255),b
  1993  002326  0E02               	movlw	2
  1994  002328  6FF0               	movwf	_states& (0+255),b
  1995  00232A                     
  1996                           ; BSR set to: 0
  1997                           ;main.c: 81: maketela(states[0]);
  1998  00232A  C0F0  F092         	movff	_states,maketela@estados0
  1999  00232E  C0F1  F093         	movff	_states+1,maketela@estados0+1
  2000  002332  ECC1  F02E         	call	_maketela	;wreg free
  2001  002336                     
  2002                           ;main.c: 82: atualizatela(states);
  2003  002336  0EF0               	movlw	low _states
  2004  002338  0101               	movlb	1	; () banked
  2005  00233A  6FF8               	movwf	atualizatela@estados& (0+255),b
  2006  00233C  0E00               	movlw	high _states
  2007  00233E  6FF9               	movwf	(atualizatela@estados+1)& (0+255),b
  2008  002340  ECE8  F020         	call	_atualizatela	;wreg free
  2009  002344                     l359:
  2010  002344  0004               	clrwdt		;# 
  2011  002346                     
  2012                           ;main.c: 87: dado = serial_rx('\n');
  2013  002346  0E00               	movlw	0
  2014  002348  0100               	movlb	0	; () banked
  2015  00234A  6F8B               	movwf	(serial_rx@timeout+1)& (0+255),b
  2016  00234C  0E0A               	movlw	10
  2017  00234E  6F8A               	movwf	serial_rx@timeout& (0+255),b
  2018  002350  EC7C  F03B         	call	_serial_rx	;wreg free
  2019  002354  0100               	movlb	0	; () banked
  2020  002356  6FE2               	movwf	??_main& (0+255),b
  2021  002358  51E2               	movf	??_main& (0+255),w,b
  2022  00235A  0102               	movlb	2	; () banked
  2023  00235C  6F38               	movwf	main@dado& (0+255),b
  2024  00235E  6B39               	clrf	(main@dado+1)& (0+255),b
  2025  002360                     
  2026                           ; BSR set to: 2
  2027                           ;main.c: 88: sprintf(str, "%03d\n", dado);
  2028  002360  0ED9               	movlw	low _str
  2029  002362  0100               	movlb	0	; () banked
  2030  002364  6FD6               	movwf	sprintf@sp& (0+255),b
  2031  002366  0E01               	movlw	high _str
  2032  002368  6FD7               	movwf	(sprintf@sp+1)& (0+255),b
  2033  00236A  0ECD               	movlw	low STR_1
  2034  00236C  6FD8               	movwf	sprintf@f& (0+255),b
  2035  00236E  0E06               	movlw	high STR_1
  2036  002370  6FD9               	movwf	(sprintf@f+1)& (0+255),b
  2037  002372  C238  F0DA         	movff	main@dado,?_sprintf+4
  2038  002376  C239  F0DB         	movff	main@dado+1,?_sprintf+5
  2039  00237A  EC70  F003         	call	_sprintf	;wreg free
  2040  00237E                     
  2041                           ;main.c: 89: leituraCXI();
  2042  00237E  EC58  F03D         	call	_leituraCXI	;wreg free
  2043  002382                     
  2044                           ;main.c: 90: leituraCXS();
  2045  002382  EC19  F03D         	call	_leituraCXS	;wreg free
  2046  002386                     
  2047                           ;main.c: 91: testeMin();
  2048  002386  EC97  F03C         	call	_testeMin	;wreg free
  2049  00238A                     
  2050                           ;main.c: 92: tecla = tc_tecla(1500)+0x30;
  2051  00238A  0E05               	movlw	5
  2052  00238C  0100               	movlb	0	; () banked
  2053  00238E  6F90               	movwf	(tc_tecla@timeout+1)& (0+255),b
  2054  002390  0EDC               	movlw	220
  2055  002392  6F8F               	movwf	tc_tecla@timeout& (0+255),b
  2056  002394  ECC5  F02A         	call	_tc_tecla	;wreg free
  2057  002398  0F30               	addlw	48
  2058  00239A  0100               	movlb	0	; () banked
  2059  00239C  6FEF               	movwf	_tecla& (0+255),b
  2060  00239E                     
  2061                           ; BSR set to: 0
  2062                           ;main.c: 93: if ((tecla == '1')|(dado == '1'))
  2063  00239E  0E31               	movlw	49
  2064  0023A0  19EF               	xorwf	_tecla& (0+255),w,b
  2065  0023A2  B4D8               	btfsc	status,2,c
  2066  0023A4  EFD6  F011         	goto	u13851
  2067  0023A8  EFD8  F011         	goto	u13850
  2068  0023AC                     u13851:
  2069  0023AC  EFE3  F011         	goto	l10280
  2070  0023B0                     u13850:
  2071  0023B0                     
  2072                           ; BSR set to: 0
  2073  0023B0  0E31               	movlw	49
  2074  0023B2  0102               	movlb	2	; () banked
  2075  0023B4  1938               	xorwf	main@dado& (0+255),w,b
  2076  0023B6  1139               	iorwf	(main@dado+1)& (0+255),w,b
  2077  0023B8  A4D8               	btfss	status,2,c
  2078  0023BA  EFE1  F011         	goto	u13861
  2079  0023BE  EFE3  F011         	goto	u13860
  2080  0023C2                     u13861:
  2081  0023C2  EFF5  F011         	goto	l10286
  2082  0023C6                     u13860:
  2083  0023C6                     l10280:
  2084                           
  2085                           ;main.c: 94: {;main.c: 95: states[0] = 1;
  2086  0023C6  0E00               	movlw	0
  2087  0023C8  0100               	movlb	0	; () banked
  2088  0023CA  6FF1               	movwf	(_states+1)& (0+255),b
  2089  0023CC  0E01               	movlw	1
  2090  0023CE  6FF0               	movwf	_states& (0+255),b
  2091  0023D0                     
  2092                           ; BSR set to: 0
  2093                           ;main.c: 96: maketela(states[0]);
  2094  0023D0  C0F0  F092         	movff	_states,maketela@estados0
  2095  0023D4  C0F1  F093         	movff	_states+1,maketela@estados0+1
  2096  0023D8  ECC1  F02E         	call	_maketela	;wreg free
  2097  0023DC                     
  2098                           ;main.c: 97: atualizatela(states);
  2099  0023DC  0EF0               	movlw	low _states
  2100  0023DE  0101               	movlb	1	; () banked
  2101  0023E0  6FF8               	movwf	atualizatela@estados& (0+255),b
  2102  0023E2  0E00               	movlw	high _states
  2103  0023E4  6FF9               	movwf	(atualizatela@estados+1)& (0+255),b
  2104  0023E6  ECE8  F020         	call	_atualizatela	;wreg free
  2105  0023EA                     l10286:
  2106                           
  2107                           ;main.c: 98: };main.c: 99: if ((tecla == '2')|(dado == '2'))
  2108  0023EA  0E32               	movlw	50
  2109  0023EC  0100               	movlb	0	; () banked
  2110  0023EE  19EF               	xorwf	_tecla& (0+255),w,b
  2111  0023F0  B4D8               	btfsc	status,2,c
  2112  0023F2  EFFD  F011         	goto	u13871
  2113  0023F6  EFFF  F011         	goto	u13870
  2114  0023FA                     u13871:
  2115  0023FA  EF0A  F012         	goto	l10290
  2116  0023FE                     u13870:
  2117  0023FE                     
  2118                           ; BSR set to: 0
  2119  0023FE  0E32               	movlw	50
  2120  002400  0102               	movlb	2	; () banked
  2121  002402  1938               	xorwf	main@dado& (0+255),w,b
  2122  002404  1139               	iorwf	(main@dado+1)& (0+255),w,b
  2123  002406  A4D8               	btfss	status,2,c
  2124  002408  EF08  F012         	goto	u13881
  2125  00240C  EF0A  F012         	goto	u13880
  2126  002410                     u13881:
  2127  002410  EF1E  F012         	goto	l10296
  2128  002414                     u13880:
  2129  002414                     l10290:
  2130                           
  2131                           ;main.c: 100: {;main.c: 101: states[0] = 2;
  2132  002414  0E00               	movlw	0
  2133  002416  0100               	movlb	0	; () banked
  2134  002418  6FF1               	movwf	(_states+1)& (0+255),b
  2135  00241A  0E02               	movlw	2
  2136  00241C  6FF0               	movwf	_states& (0+255),b
  2137  00241E                     l10292:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;main.c: 102: maketela(states[0]);
  2141  00241E  C0F0  F092         	movff	_states,maketela@estados0
  2142  002422  C0F1  F093         	movff	_states+1,maketela@estados0+1
  2143  002426  ECC1  F02E         	call	_maketela	;wreg free
  2144  00242A                     
  2145                           ;main.c: 103: atualizatela(states);
  2146  00242A  0EF0               	movlw	low _states
  2147  00242C  0101               	movlb	1	; () banked
  2148  00242E  6FF8               	movwf	atualizatela@estados& (0+255),b
  2149  002430  0E00               	movlw	high _states
  2150  002432  6FF9               	movwf	(atualizatela@estados+1)& (0+255),b
  2151  002434  ECE8  F020         	call	_atualizatela	;wreg free
  2152                           
  2153                           ;main.c: 104: }
  2154  002438  EFC9  F012         	goto	l10342
  2155  00243C                     l10296:
  2156                           
  2157                           ; BSR set to: 2
  2158                           ;main.c: 105: else if ((tecla == '3')|(dado == '3'))
  2159  00243C  0E33               	movlw	51
  2160  00243E  0100               	movlb	0	; () banked
  2161  002440  19EF               	xorwf	_tecla& (0+255),w,b
  2162  002442  B4D8               	btfsc	status,2,c
  2163  002444  EF26  F012         	goto	u13891
  2164  002448  EF28  F012         	goto	u13890
  2165  00244C                     u13891:
  2166  00244C  EF33  F012         	goto	l10300
  2167  002450                     u13890:
  2168  002450                     
  2169                           ; BSR set to: 0
  2170  002450  0E33               	movlw	51
  2171  002452  0102               	movlb	2	; () banked
  2172  002454  1938               	xorwf	main@dado& (0+255),w,b
  2173  002456  1139               	iorwf	(main@dado+1)& (0+255),w,b
  2174  002458  A4D8               	btfss	status,2,c
  2175  00245A  EF31  F012         	goto	u13901
  2176  00245E  EF33  F012         	goto	u13900
  2177  002462                     u13901:
  2178  002462  EF3A  F012         	goto	l10306
  2179  002466                     u13900:
  2180  002466                     l10300:
  2181                           
  2182                           ;main.c: 106: {;main.c: 107: states[0] = 3;
  2183  002466  0E00               	movlw	0
  2184  002468  0100               	movlb	0	; () banked
  2185  00246A  6FF1               	movwf	(_states+1)& (0+255),b
  2186  00246C  0E03               	movlw	3
  2187  00246E  6FF0               	movwf	_states& (0+255),b
  2188  002470  EF0F  F012         	goto	l10292
  2189  002474                     l10306:
  2190                           
  2191                           ; BSR set to: 2
  2192                           ;main.c: 111: else if ((tecla == '4')|(dado == '4'))
  2193  002474  0E34               	movlw	52
  2194  002476  0100               	movlb	0	; () banked
  2195  002478  19EF               	xorwf	_tecla& (0+255),w,b
  2196  00247A  B4D8               	btfsc	status,2,c
  2197  00247C  EF42  F012         	goto	u13911
  2198  002480  EF44  F012         	goto	u13910
  2199  002484                     u13911:
  2200  002484  EF4F  F012         	goto	l10310
  2201  002488                     u13910:
  2202  002488                     
  2203                           ; BSR set to: 0
  2204  002488  0E34               	movlw	52
  2205  00248A  0102               	movlb	2	; () banked
  2206  00248C  1938               	xorwf	main@dado& (0+255),w,b
  2207  00248E  1139               	iorwf	(main@dado+1)& (0+255),w,b
  2208  002490  A4D8               	btfss	status,2,c
  2209  002492  EF4D  F012         	goto	u13921
  2210  002496  EF4F  F012         	goto	u13920
  2211  00249A                     u13921:
  2212  00249A  EF6B  F012         	goto	l10318
  2213  00249E                     u13920:
  2214  00249E                     l10310:
  2215                           
  2216                           ;main.c: 112: {;main.c: 113: minCXI = minCXI + 10;
  2217  00249E  0E0A               	movlw	10
  2218  0024A0  0100               	movlb	0	; () banked
  2219  0024A2  25ED               	addwf	_minCXI& (0+255),w,b
  2220  0024A4  6FED               	movwf	_minCXI& (0+255),b
  2221  0024A6  0E00               	movlw	0
  2222  0024A8  21EE               	addwfc	(_minCXI+1)& (0+255),w,b
  2223  0024AA  6FEE               	movwf	(_minCXI+1)& (0+255),b
  2224                           
  2225                           ;main.c: 114: if (minCXI > 100)
  2226  0024AC  51EE               	movf	(_minCXI+1)& (0+255),w,b
  2227  0024AE  E109               	bnz	u13930
  2228  0024B0  0E65               	movlw	101
  2229  0024B2  5DED               	subwf	_minCXI& (0+255),w,b
  2230  0024B4  A0D8               	btfss	status,0,c
  2231  0024B6  EF5F  F012         	goto	u13931
  2232  0024BA  EF61  F012         	goto	u13930
  2233  0024BE                     u13931:
  2234  0024BE  EF65  F012         	goto	l374
  2235  0024C2                     u13930:
  2236  0024C2                     
  2237                           ; BSR set to: 0
  2238                           ;main.c: 115: {;main.c: 116: minCXI = 0;
  2239  0024C2  0E00               	movlw	0
  2240  0024C4  6FEE               	movwf	(_minCXI+1)& (0+255),b
  2241  0024C6  0E00               	movlw	0
  2242  0024C8  6FED               	movwf	_minCXI& (0+255),b
  2243  0024CA                     l374:
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;main.c: 117: };main.c: 118: states[0] = 1;
  2247  0024CA  0E00               	movlw	0
  2248  0024CC  6FF1               	movwf	(_states+1)& (0+255),b
  2249  0024CE  0E01               	movlw	1
  2250  0024D0  6FF0               	movwf	_states& (0+255),b
  2251  0024D2  EF0F  F012         	goto	l10292
  2252  0024D6                     l10318:
  2253                           
  2254                           ; BSR set to: 2
  2255                           ;main.c: 122: else if ((tecla == '5')|(dado == '5'))
  2256  0024D6  0E35               	movlw	53
  2257  0024D8  0100               	movlb	0	; () banked
  2258  0024DA  19EF               	xorwf	_tecla& (0+255),w,b
  2259  0024DC  B4D8               	btfsc	status,2,c
  2260  0024DE  EF73  F012         	goto	u13941
  2261  0024E2  EF75  F012         	goto	u13940
  2262  0024E6                     u13941:
  2263  0024E6  EF80  F012         	goto	l10322
  2264  0024EA                     u13940:
  2265  0024EA                     
  2266                           ; BSR set to: 0
  2267  0024EA  0E35               	movlw	53
  2268  0024EC  0102               	movlb	2	; () banked
  2269  0024EE  1938               	xorwf	main@dado& (0+255),w,b
  2270  0024F0  1139               	iorwf	(main@dado+1)& (0+255),w,b
  2271  0024F2  A4D8               	btfss	status,2,c
  2272  0024F4  EF7E  F012         	goto	u13951
  2273  0024F8  EF80  F012         	goto	u13950
  2274  0024FC                     u13951:
  2275  0024FC  EF98  F012         	goto	l10330
  2276  002500                     u13950:
  2277  002500                     l10322:
  2278                           
  2279                           ;main.c: 123: {;main.c: 124: minCXS = minCXS + 10;
  2280  002500  0E0A               	movlw	10
  2281  002502  0100               	movlb	0	; () banked
  2282  002504  25EB               	addwf	_minCXS& (0+255),w,b
  2283  002506  6FEB               	movwf	_minCXS& (0+255),b
  2284  002508  0E00               	movlw	0
  2285  00250A  21EC               	addwfc	(_minCXS+1)& (0+255),w,b
  2286  00250C  6FEC               	movwf	(_minCXS+1)& (0+255),b
  2287                           
  2288                           ;main.c: 125: if (minCXS > 100)
  2289  00250E  51EC               	movf	(_minCXS+1)& (0+255),w,b
  2290  002510  E109               	bnz	u13960
  2291  002512  0E65               	movlw	101
  2292  002514  5DEB               	subwf	_minCXS& (0+255),w,b
  2293  002516  A0D8               	btfss	status,0,c
  2294  002518  EF90  F012         	goto	u13961
  2295  00251C  EF92  F012         	goto	u13960
  2296  002520                     u13961:
  2297  002520  EF65  F012         	goto	l374
  2298  002524                     u13960:
  2299  002524                     
  2300                           ; BSR set to: 0
  2301                           ;main.c: 126: {;main.c: 127: minCXS = 0;
  2302  002524  0E00               	movlw	0
  2303  002526  6FEC               	movwf	(_minCXS+1)& (0+255),b
  2304  002528  0E00               	movlw	0
  2305  00252A  6FEB               	movwf	_minCXS& (0+255),b
  2306  00252C  EF65  F012         	goto	l374
  2307  002530                     l10330:
  2308                           
  2309                           ; BSR set to: 2
  2310                           ;main.c: 133: else if ((tecla == '9')|(dado == '9'))
  2311  002530  0E39               	movlw	57
  2312  002532  0100               	movlb	0	; () banked
  2313  002534  19EF               	xorwf	_tecla& (0+255),w,b
  2314  002536  B4D8               	btfsc	status,2,c
  2315  002538  EFA0  F012         	goto	u13971
  2316  00253C  EFA2  F012         	goto	u13970
  2317  002540                     u13971:
  2318  002540  EFAD  F012         	goto	l10334
  2319  002544                     u13970:
  2320  002544                     
  2321                           ; BSR set to: 0
  2322  002544  0E39               	movlw	57
  2323  002546  0102               	movlb	2	; () banked
  2324  002548  1938               	xorwf	main@dado& (0+255),w,b
  2325  00254A  1139               	iorwf	(main@dado+1)& (0+255),w,b
  2326  00254C  A4D8               	btfss	status,2,c
  2327  00254E  EFAB  F012         	goto	u13981
  2328  002552  EFAD  F012         	goto	u13980
  2329  002556                     u13981:
  2330  002556  EFC9  F012         	goto	l10342
  2331  00255A                     u13980:
  2332  00255A                     l10334:
  2333                           
  2334                           ;main.c: 134: {;main.c: 135: states[1] = states[1] + 1;
  2335  00255A  0E01               	movlw	1
  2336  00255C  0100               	movlb	0	; () banked
  2337  00255E  25F2               	addwf	(_states+2)& (0+255),w,b
  2338  002560  6FF2               	movwf	(_states+2)& (0+255),b
  2339  002562  0E00               	movlw	0
  2340  002564  21F3               	addwfc	(_states+3)& (0+255),w,b
  2341  002566  6FF3               	movwf	(_states+3)& (0+255),b
  2342                           
  2343                           ;main.c: 136: if (states[1] > 1)
  2344  002568  51F3               	movf	(_states+3)& (0+255),w,b
  2345  00256A  E109               	bnz	u13990
  2346  00256C  0E02               	movlw	2
  2347  00256E  5DF2               	subwf	(_states+2)& (0+255),w,b
  2348  002570  A0D8               	btfss	status,0,c
  2349  002572  EFBD  F012         	goto	u13991
  2350  002576  EFBF  F012         	goto	u13990
  2351  00257A                     u13991:
  2352  00257A  EFC9  F012         	goto	l375
  2353  00257E                     u13990:
  2354  00257E                     
  2355                           ; BSR set to: 0
  2356                           ;main.c: 137: {;main.c: 138: states[1] = 0;
  2357  00257E  0E00               	movlw	0
  2358  002580  6FF3               	movwf	(_states+3)& (0+255),b
  2359  002582  0E00               	movlw	0
  2360  002584  6FF2               	movwf	(_states+2)& (0+255),b
  2361                           
  2362                           ;main.c: 139: states[0] = 2;
  2363  002586  0E00               	movlw	0
  2364  002588  6FF1               	movwf	(_states+1)& (0+255),b
  2365  00258A  0E02               	movlw	2
  2366  00258C  6FF0               	movwf	_states& (0+255),b
  2367  00258E  EF0F  F012         	goto	l10292
  2368  002592                     l375:
  2369  002592                     l10342:
  2370                           
  2371                           ;main.c: 142: };main.c: 143: };main.c: 145: if (states[1] == 0)
  2372  002592  0100               	movlb	0	; () banked
  2373  002594  51F2               	movf	(_states+2)& (0+255),w,b
  2374  002596  11F3               	iorwf	(_states+3)& (0+255),w,b
  2375  002598  A4D8               	btfss	status,2,c
  2376  00259A  EFD1  F012         	goto	u14001
  2377  00259E  EFD3  F012         	goto	u14000
  2378  0025A2                     u14001:
  2379  0025A2  EF5C  F013         	goto	l10364
  2380  0025A6                     u14000:
  2381  0025A6                     
  2382                           ; BSR set to: 0
  2383                           ;main.c: 146: {;main.c: 147: if ((tensaoCXI >= 1.4 && tensaoCXS <= 3.0) && (states[2]==0
      +                          ))
  2384  0025A6  C0E7  F08A         	movff	_tensaoCXI,___flge@ff1
  2385  0025AA  C0E8  F08B         	movff	_tensaoCXI+1,___flge@ff1+1
  2386  0025AE  C0E9  F08C         	movff	_tensaoCXI+2,___flge@ff1+2
  2387  0025B2  C0EA  F08D         	movff	_tensaoCXI+3,___flge@ff1+3
  2388  0025B6  0E33               	movlw	51
  2389  0025B8  6F8E               	movwf	___flge@ff2& (0+255),b
  2390  0025BA  0E33               	movlw	51
  2391  0025BC  6F8F               	movwf	(___flge@ff2+1)& (0+255),b
  2392  0025BE  0EB3               	movlw	179
  2393  0025C0  6F90               	movwf	(___flge@ff2+2)& (0+255),b
  2394  0025C2  0E3F               	movlw	63
  2395  0025C4  6F91               	movwf	(___flge@ff2+3)& (0+255),b
  2396  0025C6  ECC4  F034         	call	___flge	;wreg free
  2397  0025CA  0100               	movlb	0	; () banked
  2398  0025CC  A0D8               	btfss	status,0,c
  2399  0025CE  EFEB  F012         	goto	u14011
  2400  0025D2  EFED  F012         	goto	u14010
  2401  0025D6                     u14011:
  2402  0025D6  EF17  F013         	goto	l10354
  2403  0025DA                     u14010:
  2404  0025DA                     
  2405                           ; BSR set to: 0
  2406  0025DA  0E00               	movlw	0
  2407  0025DC  6F8A               	movwf	___flge@ff1& (0+255),b
  2408  0025DE  0E00               	movlw	0
  2409  0025E0  6F8B               	movwf	(___flge@ff1+1)& (0+255),b
  2410  0025E2  0E40               	movlw	64
  2411  0025E4  6F8C               	movwf	(___flge@ff1+2)& (0+255),b
  2412  0025E6  0E40               	movlw	64
  2413  0025E8  6F8D               	movwf	(___flge@ff1+3)& (0+255),b
  2414  0025EA  C0E3  F08E         	movff	_tensaoCXS,___flge@ff2
  2415  0025EE  C0E4  F08F         	movff	_tensaoCXS+1,___flge@ff2+1
  2416  0025F2  C0E5  F090         	movff	_tensaoCXS+2,___flge@ff2+2
  2417  0025F6  C0E6  F091         	movff	_tensaoCXS+3,___flge@ff2+3
  2418  0025FA  ECC4  F034         	call	___flge	;wreg free
  2419  0025FE  0100               	movlb	0	; () banked
  2420  002600  A0D8               	btfss	status,0,c
  2421  002602  EF05  F013         	goto	u14021
  2422  002606  EF07  F013         	goto	u14020
  2423  00260A                     u14021:
  2424  00260A  EF17  F013         	goto	l10354
  2425  00260E                     u14020:
  2426  00260E                     
  2427                           ; BSR set to: 0
  2428  00260E  51F4               	movf	(_states+4)& (0+255),w,b
  2429  002610  11F5               	iorwf	(_states+5)& (0+255),w,b
  2430  002612  A4D8               	btfss	status,2,c
  2431  002614  EF0E  F013         	goto	u14031
  2432  002618  EF10  F013         	goto	u14030
  2433  00261C                     u14031:
  2434  00261C  EF17  F013         	goto	l10354
  2435  002620                     u14030:
  2436  002620                     
  2437                           ; BSR set to: 0
  2438                           ;main.c: 148: {;main.c: 149: PORTCbits.RC0 = 0x01;
  2439  002620  8082               	bsf	130,0,c	;volatile
  2440  002622                     
  2441                           ; BSR set to: 0
  2442                           ;main.c: 150: states[2] = 1;
  2443  002622  0E00               	movlw	0
  2444  002624  6FF5               	movwf	(_states+5)& (0+255),b
  2445  002626  0E01               	movlw	1
  2446  002628  6FF4               	movwf	(_states+4)& (0+255),b
  2447                           
  2448                           ;main.c: 151: }
  2449  00262A  EF5C  F013         	goto	l10364
  2450  00262E                     l10354:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 152: else if ((tensaoCXI <= 1.0 || tensaoCXS <= 4.6) && (states[2]==1))
  2454  00262E  0E00               	movlw	0
  2455  002630  6F8A               	movwf	___flge@ff1& (0+255),b
  2456  002632  0E00               	movlw	0
  2457  002634  6F8B               	movwf	(___flge@ff1+1)& (0+255),b
  2458  002636  0E80               	movlw	128
  2459  002638  6F8C               	movwf	(___flge@ff1+2)& (0+255),b
  2460  00263A  0E3F               	movlw	63
  2461  00263C  6F8D               	movwf	(___flge@ff1+3)& (0+255),b
  2462  00263E  C0E7  F08E         	movff	_tensaoCXI,___flge@ff2
  2463  002642  C0E8  F08F         	movff	_tensaoCXI+1,___flge@ff2+1
  2464  002646  C0E9  F090         	movff	_tensaoCXI+2,___flge@ff2+2
  2465  00264A  C0EA  F091         	movff	_tensaoCXI+3,___flge@ff2+3
  2466  00264E  ECC4  F034         	call	___flge	;wreg free
  2467  002652  0100               	movlb	0	; () banked
  2468  002654  B0D8               	btfsc	status,0,c
  2469  002656  EF2F  F013         	goto	u14041
  2470  00265A  EF31  F013         	goto	u14040
  2471  00265E                     u14041:
  2472  00265E  EF4B  F013         	goto	l10358
  2473  002662                     u14040:
  2474  002662                     
  2475                           ; BSR set to: 0
  2476  002662  0E33               	movlw	51
  2477  002664  6F8A               	movwf	___flge@ff1& (0+255),b
  2478  002666  0E33               	movlw	51
  2479  002668  6F8B               	movwf	(___flge@ff1+1)& (0+255),b
  2480  00266A  0E93               	movlw	147
  2481  00266C  6F8C               	movwf	(___flge@ff1+2)& (0+255),b
  2482  00266E  0E40               	movlw	64
  2483  002670  6F8D               	movwf	(___flge@ff1+3)& (0+255),b
  2484  002672  C0E3  F08E         	movff	_tensaoCXS,___flge@ff2
  2485  002676  C0E4  F08F         	movff	_tensaoCXS+1,___flge@ff2+1
  2486  00267A  C0E5  F090         	movff	_tensaoCXS+2,___flge@ff2+2
  2487  00267E  C0E6  F091         	movff	_tensaoCXS+3,___flge@ff2+3
  2488  002682  ECC4  F034         	call	___flge	;wreg free
  2489  002686  0100               	movlb	0	; () banked
  2490  002688  A0D8               	btfss	status,0,c
  2491  00268A  EF49  F013         	goto	u14051
  2492  00268E  EF4B  F013         	goto	u14050
  2493  002692                     u14051:
  2494  002692  EF57  F013         	goto	l388
  2495  002696                     u14050:
  2496  002696                     l10358:
  2497                           
  2498                           ; BSR set to: 0
  2499  002696  05F4               	decf	(_states+4)& (0+255),w,b
  2500  002698  11F5               	iorwf	(_states+5)& (0+255),w,b
  2501  00269A  A4D8               	btfss	status,2,c
  2502  00269C  EF52  F013         	goto	u14061
  2503  0026A0  EF54  F013         	goto	u14060
  2504  0026A4                     u14061:
  2505  0026A4  EF57  F013         	goto	l388
  2506  0026A8                     u14060:
  2507  0026A8                     
  2508                           ; BSR set to: 0
  2509                           ;main.c: 153: {;main.c: 154: PORTCbits.RC0 = 0x01;
  2510  0026A8  8082               	bsf	130,0,c	;volatile
  2511                           
  2512                           ;main.c: 155: }
  2513  0026AA  EF5C  F013         	goto	l10364
  2514  0026AE                     l388:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;main.c: 156: else;main.c: 157: {;main.c: 158: PORTCbits.RC0 = 0x00;
  2518  0026AE  9082               	bcf	130,0,c	;volatile
  2519  0026B0                     
  2520                           ; BSR set to: 0
  2521                           ;main.c: 159: states[2] = 0;
  2522  0026B0  0E00               	movlw	0
  2523  0026B2  6FF5               	movwf	(_states+5)& (0+255),b
  2524  0026B4  0E00               	movlw	0
  2525  0026B6  6FF4               	movwf	(_states+4)& (0+255),b
  2526  0026B8                     l10364:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;main.c: 160: };main.c: 161: };main.c: 162: if (states[1] == 1)
  2530  0026B8  05F2               	decf	(_states+2)& (0+255),w,b
  2531  0026BA  11F3               	iorwf	(_states+3)& (0+255),w,b
  2532  0026BC  A4D8               	btfss	status,2,c
  2533  0026BE  EF63  F013         	goto	u14071
  2534  0026C2  EF65  F013         	goto	u14070
  2535  0026C6                     u14071:
  2536  0026C6  EFAD  F013         	goto	l10380
  2537  0026CA                     u14070:
  2538  0026CA                     
  2539                           ; BSR set to: 0
  2540                           ;main.c: 163: {;main.c: 164: tecla = tc_tecla(1500)+0x30;
  2541  0026CA  0E05               	movlw	5
  2542  0026CC  6F90               	movwf	(tc_tecla@timeout+1)& (0+255),b
  2543  0026CE  0EDC               	movlw	220
  2544  0026D0  6F8F               	movwf	tc_tecla@timeout& (0+255),b
  2545  0026D2  ECC5  F02A         	call	_tc_tecla	;wreg free
  2546  0026D6  0F30               	addlw	48
  2547  0026D8  0100               	movlb	0	; () banked
  2548  0026DA  6FEF               	movwf	_tecla& (0+255),b
  2549  0026DC                     
  2550                           ; BSR set to: 0
  2551                           ;main.c: 165: if ((tecla == '6')|(dado == '6'))
  2552  0026DC  0E36               	movlw	54
  2553  0026DE  19EF               	xorwf	_tecla& (0+255),w,b
  2554  0026E0  B4D8               	btfsc	status,2,c
  2555  0026E2  EF75  F013         	goto	u14081
  2556  0026E6  EF77  F013         	goto	u14080
  2557  0026EA                     u14081:
  2558  0026EA  EF82  F013         	goto	l10372
  2559  0026EE                     u14080:
  2560  0026EE                     
  2561                           ; BSR set to: 0
  2562  0026EE  0E36               	movlw	54
  2563  0026F0  0102               	movlb	2	; () banked
  2564  0026F2  1938               	xorwf	main@dado& (0+255),w,b
  2565  0026F4  1139               	iorwf	(main@dado+1)& (0+255),w,b
  2566  0026F6  A4D8               	btfss	status,2,c
  2567  0026F8  EF80  F013         	goto	u14091
  2568  0026FC  EF82  F013         	goto	u14090
  2569  002700                     u14091:
  2570  002700  EFAD  F013         	goto	l10380
  2571  002704                     u14090:
  2572  002704                     l10372:
  2573                           
  2574                           ;main.c: 166: {;main.c: 167: PORTCbits.RC0 =! PORTCbits.RC0;
  2575  002704  A082               	btfss	130,0,c	;volatile
  2576  002706  EF87  F013         	goto	u14101
  2577  00270A  EF8C  F013         	goto	u14100
  2578  00270E                     u14101:
  2579  00270E  0100               	movlb	0	; () banked
  2580  002710  6BE2               	clrf	??_main& (0+255),b
  2581  002712  2BE2               	incf	??_main& (0+255),f,b
  2582  002714  EF8E  F013         	goto	u14118
  2583  002718                     u14100:
  2584  002718  0100               	movlb	0	; () banked
  2585  00271A  6BE2               	clrf	??_main& (0+255),b
  2586  00271C                     u14118:
  2587  00271C  5082               	movf	130,w,c	;volatile
  2588  00271E  19E2               	xorwf	??_main& (0+255),w,b
  2589  002720  0BFE               	andlw	-2
  2590  002722  19E2               	xorwf	??_main& (0+255),w,b
  2591  002724  6E82               	movwf	130,c	;volatile
  2592  002726                     
  2593                           ; BSR set to: 0
  2594                           ;main.c: 168: if (PORTCbits.RC0 == 0)
  2595  002726  B082               	btfsc	130,0,c	;volatile
  2596  002728  EF98  F013         	goto	u14121
  2597  00272C  EF9A  F013         	goto	u14120
  2598  002730                     u14121:
  2599  002730  EFA0  F013         	goto	l396
  2600  002734                     u14120:
  2601  002734                     
  2602                           ; BSR set to: 0
  2603                           ;main.c: 169: {;main.c: 170: states[2]=0;
  2604  002734  0E00               	movlw	0
  2605  002736  6FF5               	movwf	(_states+5)& (0+255),b
  2606  002738  0E00               	movlw	0
  2607  00273A  6FF4               	movwf	(_states+4)& (0+255),b
  2608                           
  2609                           ;main.c: 171: }
  2610  00273C  EFAD  F013         	goto	l10380
  2611  002740                     l396:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;main.c: 172: else if (PORTCbits.RC0 == 1)
  2615  002740  A082               	btfss	130,0,c	;volatile
  2616  002742  EFA5  F013         	goto	u14131
  2617  002746  EFA7  F013         	goto	u14130
  2618  00274A                     u14131:
  2619  00274A  EFAD  F013         	goto	l393
  2620  00274E                     u14130:
  2621  00274E                     
  2622                           ; BSR set to: 0
  2623                           ;main.c: 173: {;main.c: 174: states[2]=1;
  2624  00274E  0E00               	movlw	0
  2625  002750  6FF5               	movwf	(_states+5)& (0+255),b
  2626  002752  0E01               	movlw	1
  2627  002754  6FF4               	movwf	(_states+4)& (0+255),b
  2628  002756  EFAD  F013         	goto	l10380
  2629  00275A                     l393:
  2630  00275A                     l10380:
  2631                           
  2632                           ;main.c: 175: };main.c: 176: };main.c: 177: };main.c: 179: if (states[1] == 2)
  2633  00275A  0E02               	movlw	2
  2634  00275C  0100               	movlb	0	; () banked
  2635  00275E  19F2               	xorwf	(_states+2)& (0+255),w,b
  2636  002760  11F3               	iorwf	(_states+3)& (0+255),w,b
  2637  002762  A4D8               	btfss	status,2,c
  2638  002764  EFB6  F013         	goto	u14141
  2639  002768  EFB8  F013         	goto	u14140
  2640  00276C                     u14141:
  2641  00276C  EFA2  F011         	goto	l359
  2642  002770                     u14140:
  2643  002770                     
  2644                           ; BSR set to: 0
  2645                           ;main.c: 180: {;main.c: 181: leituraCXI();
  2646  002770  EC58  F03D         	call	_leituraCXI	;wreg free
  2647                           
  2648                           ;main.c: 182: leituraCXS();
  2649  002774  EC19  F03D         	call	_leituraCXS	;wreg free
  2650  002778                     
  2651                           ;main.c: 183: testeMin();
  2652  002778  EC97  F03C         	call	_testeMin	;wreg free
  2653  00277C                     
  2654                           ;main.c: 184: PORTCbits.RC0 = 0;
  2655  00277C  9082               	bcf	130,0,c	;volatile
  2656  00277E                     
  2657                           ;main.c: 185: if (flag_safe == 1)
  2658  00277E  0101               	movlb	1	; () banked
  2659  002780  05BD               	decf	_flag_safe& (0+255),w,b
  2660  002782  11BE               	iorwf	(_flag_safe+1)& (0+255),w,b
  2661  002784  A4D8               	btfss	status,2,c
  2662  002786  EFC7  F013         	goto	u14151
  2663  00278A  EFC9  F013         	goto	u14150
  2664  00278E                     u14151:
  2665  00278E  EFA2  F011         	goto	l359
  2666  002792                     u14150:
  2667  002792                     
  2668                           ; BSR set to: 1
  2669                           ;main.c: 186: {;main.c: 187: states[1] = 1;
  2670  002792  0E00               	movlw	0
  2671  002794  0100               	movlb	0	; () banked
  2672  002796  6FF3               	movwf	(_states+3)& (0+255),b
  2673  002798  0E01               	movlw	1
  2674  00279A  6FF2               	movwf	(_states+2)& (0+255),b
  2675                           
  2676                           ;main.c: 188: states[2] = 0;
  2677  00279C  0E00               	movlw	0
  2678  00279E  6FF5               	movwf	(_states+5)& (0+255),b
  2679  0027A0  0E00               	movlw	0
  2680  0027A2  6FF4               	movwf	(_states+4)& (0+255),b
  2681                           
  2682                           ;main.c: 189: flag_safe = 0;
  2683  0027A4  0E00               	movlw	0
  2684  0027A6  0101               	movlb	1	; () banked
  2685  0027A8  6FBE               	movwf	(_flag_safe+1)& (0+255),b
  2686  0027AA  0E00               	movlw	0
  2687  0027AC  6FBD               	movwf	_flag_safe& (0+255),b
  2688  0027AE                     
  2689                           ; BSR set to: 1
  2690                           ;main.c: 190: maketela(2);
  2691  0027AE  0E00               	movlw	0
  2692  0027B0  0100               	movlb	0	; () banked
  2693  0027B2  6F93               	movwf	(maketela@estados0+1)& (0+255),b
  2694  0027B4  0E02               	movlw	2
  2695  0027B6  6F92               	movwf	maketela@estados0& (0+255),b
  2696  0027B8  ECC1  F02E         	call	_maketela	;wreg free
  2697  0027BC  EFA2  F011         	goto	l359
  2698  0027C0  EF07  F000         	goto	start
  2699  0027C4                     __end_of_main:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _testeMin *****************
  2703 ;; Defined at:
  2704 ;;		line 207 in file "main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2718 ;;      Params:         0       0       0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0
  2721 ;;      Totals:         0       0       0       0       0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    6
  2725 ;; This function calls:
  2726 ;;		___flge
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text1
  2733  00792E                     __ptext1:
  2734                           	callstack 0
  2735  00792E                     _testeMin:
  2736                           	callstack 24
  2737  00792E                     
  2738                           ;main.c: 209: if (tensaoCXI < 1.0 | tensaoCXS < 1.0)
  2739  00792E  C0E7  F08A         	movff	_tensaoCXI,___flge@ff1
  2740  007932  C0E8  F08B         	movff	_tensaoCXI+1,___flge@ff1+1
  2741  007936  C0E9  F08C         	movff	_tensaoCXI+2,___flge@ff1+2
  2742  00793A  C0EA  F08D         	movff	_tensaoCXI+3,___flge@ff1+3
  2743  00793E  0E00               	movlw	0
  2744  007940  0100               	movlb	0	; () banked
  2745  007942  6F8E               	movwf	___flge@ff2& (0+255),b
  2746  007944  0E00               	movlw	0
  2747  007946  6F8F               	movwf	(___flge@ff2+1)& (0+255),b
  2748  007948  0E80               	movlw	128
  2749  00794A  6F90               	movwf	(___flge@ff2+2)& (0+255),b
  2750  00794C  0E3F               	movlw	63
  2751  00794E  6F91               	movwf	(___flge@ff2+3)& (0+255),b
  2752  007950  ECC4  F034         	call	___flge	;wreg free
  2753  007954  0100               	movlb	0	; () banked
  2754  007956  A0D8               	btfss	status,0,c
  2755  007958  EFB0  F03C         	goto	u13641
  2756  00795C  EFB2  F03C         	goto	u13640
  2757  007960                     u13641:
  2758  007960  EFCC  F03C         	goto	l10088
  2759  007964                     u13640:
  2760  007964                     
  2761                           ; BSR set to: 0
  2762  007964  C0E3  F08A         	movff	_tensaoCXS,___flge@ff1
  2763  007968  C0E4  F08B         	movff	_tensaoCXS+1,___flge@ff1+1
  2764  00796C  C0E5  F08C         	movff	_tensaoCXS+2,___flge@ff1+2
  2765  007970  C0E6  F08D         	movff	_tensaoCXS+3,___flge@ff1+3
  2766  007974  0E00               	movlw	0
  2767  007976  6F8E               	movwf	___flge@ff2& (0+255),b
  2768  007978  0E00               	movlw	0
  2769  00797A  6F8F               	movwf	(___flge@ff2+1)& (0+255),b
  2770  00797C  0E80               	movlw	128
  2771  00797E  6F90               	movwf	(___flge@ff2+2)& (0+255),b
  2772  007980  0E3F               	movlw	63
  2773  007982  6F91               	movwf	(___flge@ff2+3)& (0+255),b
  2774  007984  ECC4  F034         	call	___flge	;wreg free
  2775  007988  0100               	movlb	0	; () banked
  2776  00798A  B0D8               	btfsc	status,0,c
  2777  00798C  EFCA  F03C         	goto	u13651
  2778  007990  EFCC  F03C         	goto	u13650
  2779  007994                     u13651:
  2780  007994  EFD2  F03C         	goto	l10090
  2781  007998                     u13650:
  2782  007998                     l10088:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;main.c: 210: {;main.c: 211: states[1] = 2;
  2786  007998  0E00               	movlw	0
  2787  00799A  6FF3               	movwf	(_states+3)& (0+255),b
  2788  00799C  0E02               	movlw	2
  2789  00799E  6FF2               	movwf	(_states+2)& (0+255),b
  2790                           
  2791                           ;main.c: 212: }
  2792  0079A0  EFD7  F03C         	goto	l416
  2793  0079A4                     l10090:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;main.c: 213: else;main.c: 214: {;main.c: 215: flag_safe = 1;
  2797  0079A4  0E00               	movlw	0
  2798  0079A6  0101               	movlb	1	; () banked
  2799  0079A8  6FBE               	movwf	(_flag_safe+1)& (0+255),b
  2800  0079AA  0E01               	movlw	1
  2801  0079AC  6FBD               	movwf	_flag_safe& (0+255),b
  2802  0079AE                     l416:
  2803  0079AE  0012               	return		;funcret
  2804  0079B0                     __end_of_testeMin:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _tc_tecla *****************
  2808 ;; Defined at:
  2809 ;;		line 32 in file "teclado.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  timeout         2   15[BANK0 ] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  to              2   18[BANK0 ] unsigned int 
  2814 ;;  i               1   21[BANK0 ] unsigned char 
  2815 ;;  ret             1   20[BANK0 ] unsigned char 
  2816 ;;  tmp             1   17[BANK0 ] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      unsigned char 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2826 ;;      Params:         0       2       0       0       0       0       0
  2827 ;;      Locals:         0       5       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0
  2829 ;;      Totals:         0       7       0       0       0       0       0
  2830 ;;Total ram usage:        7 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    6
  2833 ;; This function calls:
  2834 ;;		_atraso_ms
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text2
  2841  00558A                     __ptext2:
  2842                           	callstack 0
  2843  00558A                     _tc_tecla:
  2844                           	callstack 24
  2845  00558A                     
  2846                           ;teclado.c: 34: unsigned int to=0;
  2847  00558A  0E00               	movlw	0
  2848  00558C  0100               	movlb	0	; () banked
  2849  00558E  6F93               	movwf	(tc_tecla@to+1)& (0+255),b
  2850  005590  0E00               	movlw	0
  2851  005592  6F92               	movwf	tc_tecla@to& (0+255),b
  2852                           
  2853                           ;teclado.c: 35: unsigned char i;;teclado.c: 36: unsigned char ret=0;
  2854  005594  0E00               	movlw	0
  2855  005596  6F94               	movwf	tc_tecla@ret& (0+255),b
  2856  005598                     
  2857                           ; BSR set to: 0
  2858                           ;teclado.c: 37: unsigned char tmp=PORTB;
  2859  005598  CF81 F091          	movff	3969,tc_tecla@tmp	;volatile
  2860                           
  2861                           ;teclado.c: 40: while(((to < timeout)||(!timeout))&&(!ret))
  2862  00559C  EF80  F02B         	goto	l10148
  2863  0055A0                     l10096:
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;teclado.c: 41: {;teclado.c: 42: for(i=0;i<3;i++)
  2867  0055A0  0E00               	movlw	0
  2868  0055A2  6F95               	movwf	tc_tecla@i& (0+255),b
  2869  0055A4                     l10102:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;teclado.c: 43: {;teclado.c: 44: PORTB|=~linha[i];
  2873  0055A4  0E69               	movlw	low _linha
  2874  0055A6  2595               	addwf	tc_tecla@i& (0+255),w,b
  2875  0055A8  6EF6               	movwf	tblptrl,c
  2876  0055AA  6AF7               	clrf	tblptrh,c
  2877  0055AC  0E06               	movlw	high _linha
  2878  0055AE  22F7               	addwfc	tblptrh,f,c
  2879  0055B0                     	if	0	;There are less than 3 active tblptr bytes
  2880  0055B0                     	endif
  2881  0055B0  0008               	tblrd		*
  2882  0055B2  50F5               	movf	tablat,w,c
  2883  0055B4  0AFF               	xorlw	255
  2884  0055B6  1281               	iorwf	129,f,c	;volatile
  2885  0055B8                     
  2886                           ; BSR set to: 0
  2887                           ;teclado.c: 45: if(!PORTDbits.RD3){atraso_ms(20);if(!PORTDbits.RD3){while(!PORTDbits.RD3
      +                          );ret= 1+i;break;}};
  2888  0055B8  B683               	btfsc	131,3,c	;volatile
  2889  0055BA  EFE1  F02A         	goto	u13661
  2890  0055BE  EFE3  F02A         	goto	u13660
  2891  0055C2                     u13661:
  2892  0055C2  EFFC  F02A         	goto	l465
  2893  0055C6                     u13660:
  2894  0055C6                     
  2895                           ; BSR set to: 0
  2896  0055C6  0E00               	movlw	0
  2897  0055C8  6F8B               	movwf	(atraso_ms@valor+1)& (0+255),b
  2898  0055CA  0E14               	movlw	20
  2899  0055CC  6F8A               	movwf	atraso_ms@valor& (0+255),b
  2900  0055CE  EC29  F03F         	call	_atraso_ms	;wreg free
  2901  0055D2  B683               	btfsc	131,3,c	;volatile
  2902  0055D4  EFEE  F02A         	goto	u13671
  2903  0055D8  EFF0  F02A         	goto	u13670
  2904  0055DC                     u13671:
  2905  0055DC  EFFC  F02A         	goto	l465
  2906  0055E0                     u13670:
  2907  0055E0                     l467:
  2908  0055E0  A683               	btfss	131,3,c	;volatile
  2909  0055E2  EFF5  F02A         	goto	u13681
  2910  0055E6  EFF7  F02A         	goto	u13680
  2911  0055EA                     u13681:
  2912  0055EA  EFF0  F02A         	goto	l467
  2913  0055EE                     u13680:
  2914  0055EE  0100               	movlb	0	; () banked
  2915  0055F0  2995               	incf	tc_tecla@i& (0+255),w,b
  2916  0055F2  6F94               	movwf	tc_tecla@ret& (0+255),b
  2917  0055F4  EF75  F02B         	goto	l10144
  2918  0055F8                     l465:
  2919                           
  2920                           ;teclado.c: 46: if(!PORTDbits.RD2){atraso_ms(20);if(!PORTDbits.RD2){while(!PORTDbits.RD2
      +                          );ret= 4+i;break;}};
  2921  0055F8  B483               	btfsc	131,2,c	;volatile
  2922  0055FA  EF01  F02B         	goto	u13691
  2923  0055FE  EF03  F02B         	goto	u13690
  2924  005602                     u13691:
  2925  005602  EF1E  F02B         	goto	l470
  2926  005606                     u13690:
  2927  005606  0E00               	movlw	0
  2928  005608  0100               	movlb	0	; () banked
  2929  00560A  6F8B               	movwf	(atraso_ms@valor+1)& (0+255),b
  2930  00560C  0E14               	movlw	20
  2931  00560E  6F8A               	movwf	atraso_ms@valor& (0+255),b
  2932  005610  EC29  F03F         	call	_atraso_ms	;wreg free
  2933  005614  B483               	btfsc	131,2,c	;volatile
  2934  005616  EF0F  F02B         	goto	u13701
  2935  00561A  EF11  F02B         	goto	u13700
  2936  00561E                     u13701:
  2937  00561E  EF1E  F02B         	goto	l470
  2938  005622                     u13700:
  2939  005622                     l472:
  2940  005622  A483               	btfss	131,2,c	;volatile
  2941  005624  EF16  F02B         	goto	u13711
  2942  005628  EF18  F02B         	goto	u13710
  2943  00562C                     u13711:
  2944  00562C  EF11  F02B         	goto	l472
  2945  005630                     u13710:
  2946  005630  0100               	movlb	0	; () banked
  2947  005632  5195               	movf	tc_tecla@i& (0+255),w,b
  2948  005634  0F04               	addlw	4
  2949  005636  6F94               	movwf	tc_tecla@ret& (0+255),b
  2950  005638  EF75  F02B         	goto	l10144
  2951  00563C                     l470:
  2952                           
  2953                           ;teclado.c: 47: if(!PORTDbits.RD1){atraso_ms(20);if(!PORTDbits.RD1){while(!PORTDbits.RD1
      +                          );ret= 7+i;break;}};
  2954  00563C  B283               	btfsc	131,1,c	;volatile
  2955  00563E  EF23  F02B         	goto	u13721
  2956  005642  EF25  F02B         	goto	u13720
  2957  005646                     u13721:
  2958  005646  EF40  F02B         	goto	l475
  2959  00564A                     u13720:
  2960  00564A  0E00               	movlw	0
  2961  00564C  0100               	movlb	0	; () banked
  2962  00564E  6F8B               	movwf	(atraso_ms@valor+1)& (0+255),b
  2963  005650  0E14               	movlw	20
  2964  005652  6F8A               	movwf	atraso_ms@valor& (0+255),b
  2965  005654  EC29  F03F         	call	_atraso_ms	;wreg free
  2966  005658  B283               	btfsc	131,1,c	;volatile
  2967  00565A  EF31  F02B         	goto	u13731
  2968  00565E  EF33  F02B         	goto	u13730
  2969  005662                     u13731:
  2970  005662  EF40  F02B         	goto	l475
  2971  005666                     u13730:
  2972  005666                     l477:
  2973  005666  A283               	btfss	131,1,c	;volatile
  2974  005668  EF38  F02B         	goto	u13741
  2975  00566C  EF3A  F02B         	goto	u13740
  2976  005670                     u13741:
  2977  005670  EF33  F02B         	goto	l477
  2978  005674                     u13740:
  2979  005674  0100               	movlb	0	; () banked
  2980  005676  5195               	movf	tc_tecla@i& (0+255),w,b
  2981  005678  0F07               	addlw	7
  2982  00567A  6F94               	movwf	tc_tecla@ret& (0+255),b
  2983  00567C  EF75  F02B         	goto	l10144
  2984  005680                     l475:
  2985                           
  2986                           ;teclado.c: 48: if(!PORTDbits.RD0){atraso_ms(20);if(!PORTDbits.RD0){while(!PORTDbits.RD0
      +                          );ret= 10+i;break;}};
  2987  005680  B083               	btfsc	131,0,c	;volatile
  2988  005682  EF45  F02B         	goto	u13751
  2989  005686  EF47  F02B         	goto	u13750
  2990  00568A                     u13751:
  2991  00568A  EF62  F02B         	goto	l10138
  2992  00568E                     u13750:
  2993  00568E  0E00               	movlw	0
  2994  005690  0100               	movlb	0	; () banked
  2995  005692  6F8B               	movwf	(atraso_ms@valor+1)& (0+255),b
  2996  005694  0E14               	movlw	20
  2997  005696  6F8A               	movwf	atraso_ms@valor& (0+255),b
  2998  005698  EC29  F03F         	call	_atraso_ms	;wreg free
  2999  00569C  B083               	btfsc	131,0,c	;volatile
  3000  00569E  EF53  F02B         	goto	u13761
  3001  0056A2  EF55  F02B         	goto	u13760
  3002  0056A6                     u13761:
  3003  0056A6  EF62  F02B         	goto	l10138
  3004  0056AA                     u13760:
  3005  0056AA                     l482:
  3006  0056AA  A083               	btfss	131,0,c	;volatile
  3007  0056AC  EF5A  F02B         	goto	u13771
  3008  0056B0  EF5C  F02B         	goto	u13770
  3009  0056B4                     u13771:
  3010  0056B4  EF55  F02B         	goto	l482
  3011  0056B8                     u13770:
  3012  0056B8  0100               	movlb	0	; () banked
  3013  0056BA  5195               	movf	tc_tecla@i& (0+255),w,b
  3014  0056BC  0F0A               	addlw	10
  3015  0056BE  6F94               	movwf	tc_tecla@ret& (0+255),b
  3016  0056C0  EF75  F02B         	goto	l10144
  3017  0056C4                     l10138:
  3018                           
  3019                           ;teclado.c: 49: PORTB &=linha[i];
  3020  0056C4  0E69               	movlw	low _linha
  3021  0056C6  0100               	movlb	0	; () banked
  3022  0056C8  2595               	addwf	tc_tecla@i& (0+255),w,b
  3023  0056CA  6EF6               	movwf	tblptrl,c
  3024  0056CC  6AF7               	clrf	tblptrh,c
  3025  0056CE  0E06               	movlw	high _linha
  3026  0056D0  22F7               	addwfc	tblptrh,f,c
  3027  0056D2                     	if	0	;There are less than 3 active tblptr bytes
  3028  0056D2                     	endif
  3029  0056D2  0008               	tblrd		*
  3030  0056D4  50F5               	movf	tablat,w,c
  3031  0056D6  1681               	andwf	129,f,c	;volatile
  3032  0056D8                     
  3033                           ; BSR set to: 0
  3034  0056D8  2B95               	incf	tc_tecla@i& (0+255),f,b
  3035  0056DA                     
  3036                           ; BSR set to: 0
  3037  0056DA  0E02               	movlw	2
  3038  0056DC  6595               	cpfsgt	tc_tecla@i& (0+255),b
  3039  0056DE  EF73  F02B         	goto	u13781
  3040  0056E2  EF75  F02B         	goto	u13780
  3041  0056E6                     u13781:
  3042  0056E6  EFD2  F02A         	goto	l10102
  3043  0056EA                     u13780:
  3044  0056EA                     l10144:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;teclado.c: 50: };;teclado.c: 51: atraso_ms(5);
  3048  0056EA  0E00               	movlw	0
  3049  0056EC  6F8B               	movwf	(atraso_ms@valor+1)& (0+255),b
  3050  0056EE  0E05               	movlw	5
  3051  0056F0  6F8A               	movwf	atraso_ms@valor& (0+255),b
  3052  0056F2  EC29  F03F         	call	_atraso_ms	;wreg free
  3053  0056F6                     
  3054                           ;teclado.c: 52: to+=5;
  3055  0056F6  0E05               	movlw	5
  3056  0056F8  0100               	movlb	0	; () banked
  3057  0056FA  2792               	addwf	tc_tecla@to& (0+255),f,b
  3058  0056FC  0E00               	movlw	0
  3059  0056FE  2393               	addwfc	(tc_tecla@to+1)& (0+255),f,b
  3060  005700                     l10148:
  3061                           
  3062                           ; BSR set to: 0
  3063  005700  518F               	movf	tc_tecla@timeout& (0+255),w,b
  3064  005702  5D92               	subwf	tc_tecla@to& (0+255),w,b
  3065  005704  5190               	movf	(tc_tecla@timeout+1)& (0+255),w,b
  3066  005706  5993               	subwfb	(tc_tecla@to+1)& (0+255),w,b
  3067  005708  A0D8               	btfss	status,0,c
  3068  00570A  EF89  F02B         	goto	u13791
  3069  00570E  EF8B  F02B         	goto	u13790
  3070  005712                     u13791:
  3071  005712  EF94  F02B         	goto	l10152
  3072  005716                     u13790:
  3073  005716                     
  3074                           ; BSR set to: 0
  3075  005716  518F               	movf	tc_tecla@timeout& (0+255),w,b
  3076  005718  1190               	iorwf	(tc_tecla@timeout+1)& (0+255),w,b
  3077  00571A  A4D8               	btfss	status,2,c
  3078  00571C  EF92  F02B         	goto	u13801
  3079  005720  EF94  F02B         	goto	u13800
  3080  005724                     u13801:
  3081  005724  EF9C  F02B         	goto	l10154
  3082  005728                     u13800:
  3083  005728                     l10152:
  3084                           
  3085                           ; BSR set to: 0
  3086  005728  5194               	movf	tc_tecla@ret& (0+255),w,b
  3087  00572A  B4D8               	btfsc	status,2,c
  3088  00572C  EF9A  F02B         	goto	u13811
  3089  005730  EF9C  F02B         	goto	u13810
  3090  005734                     u13811:
  3091  005734  EFD0  F02A         	goto	l10096
  3092  005738                     u13810:
  3093  005738                     l10154:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;teclado.c: 53: };teclado.c: 55: if(!ret)ret=255;
  3097  005738  5194               	movf	tc_tecla@ret& (0+255),w,b
  3098  00573A  A4D8               	btfss	status,2,c
  3099  00573C  EFA2  F02B         	goto	u13821
  3100  005740  EFA4  F02B         	goto	u13820
  3101  005744                     u13821:
  3102  005744  EFA5  F02B         	goto	l10158
  3103  005748                     u13820:
  3104  005748                     
  3105                           ; BSR set to: 0
  3106  005748  6994               	setf	tc_tecla@ret& (0+255),b
  3107  00574A                     l10158:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;teclado.c: 56: if(ret == 11)ret=0;
  3111  00574A  0E0B               	movlw	11
  3112  00574C  1994               	xorwf	tc_tecla@ret& (0+255),w,b
  3113  00574E  A4D8               	btfss	status,2,c
  3114  005750  EFAC  F02B         	goto	u13831
  3115  005754  EFAE  F02B         	goto	u13830
  3116  005758                     u13831:
  3117  005758  EFB0  F02B         	goto	l10162
  3118  00575C                     u13830:
  3119  00575C                     
  3120                           ; BSR set to: 0
  3121  00575C  0E00               	movlw	0
  3122  00575E  6F94               	movwf	tc_tecla@ret& (0+255),b
  3123  005760                     l10162:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;teclado.c: 57: PORTB=tmp;
  3127  005760  C091  FF81         	movff	tc_tecla@tmp,3969	;volatile
  3128                           
  3129                           ;teclado.c: 58: return ret;
  3130  005764  5194               	movf	tc_tecla@ret& (0+255),w,b
  3131  005766                     
  3132                           ; BSR set to: 0
  3133  005766  0012               	return		;funcret
  3134  005768                     __end_of_tc_tecla:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function _atraso_ms *****************
  3138 ;; Defined at:
  3139 ;;		line 26 in file "atraso.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  valor           2   10[BANK0 ] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  i               2   12[BANK0 ] unsigned int 
  3144 ;;  j               1   14[BANK0 ] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3154 ;;      Params:         0       2       0       0       0       0       0
  3155 ;;      Locals:         0       3       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0
  3157 ;;      Totals:         0       5       0       0       0       0       0
  3158 ;;Total ram usage:        5 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    5
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_tc_tecla
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text3
  3169  007E52                     __ptext3:
  3170                           	callstack 0
  3171  007E52                     _atraso_ms:
  3172                           	callstack 24
  3173  007E52                     
  3174                           ;atraso.c: 28: unsigned int i;;atraso.c: 29: unsigned char j;;atraso.c: 31: for (i =0; i
      +                          < valor; i++)
  3175  007E52  0E00               	movlw	0
  3176  007E54  0100               	movlb	0	; () banked
  3177  007E56  6F8D               	movwf	(atraso_ms@i+1)& (0+255),b
  3178  007E58  0E00               	movlw	0
  3179  007E5A  6F8C               	movwf	atraso_ms@i& (0+255),b
  3180  007E5C  EF43  F03F         	goto	l9468
  3181  007E60                     l9456:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;atraso.c: 32: {;atraso.c: 34: for (j =0 ; j < 200; j++)
  3185  007E60  0E00               	movlw	0
  3186  007E62  6F8E               	movwf	atraso_ms@j& (0+255),b
  3187  007E64                     l156:
  3188                           
  3189                           ; BSR set to: 0
  3190  007E64  F000               	nop		;# 
  3191  007E66  F000               	nop		;# 
  3192  007E68  F000               	nop		;# 
  3193  007E6A  F000               	nop		;# 
  3194  007E6C  F000               	nop		;# 
  3195  007E6E  0100               	movlb	0	; () banked
  3196  007E70  2B8E               	incf	atraso_ms@j& (0+255),f,b
  3197  007E72                     
  3198                           ; BSR set to: 0
  3199  007E72  0EC7               	movlw	199
  3200  007E74  658E               	cpfsgt	atraso_ms@j& (0+255),b
  3201  007E76  EF3F  F03F         	goto	u12721
  3202  007E7A  EF41  F03F         	goto	u12720
  3203  007E7E                     u12721:
  3204  007E7E  EF32  F03F         	goto	l156
  3205  007E82                     u12720:
  3206  007E82                     
  3207                           ; BSR set to: 0
  3208  007E82  4B8C               	infsnz	atraso_ms@i& (0+255),f,b
  3209  007E84  2B8D               	incf	(atraso_ms@i+1)& (0+255),f,b
  3210  007E86                     l9468:
  3211                           
  3212                           ; BSR set to: 0
  3213  007E86  518A               	movf	atraso_ms@valor& (0+255),w,b
  3214  007E88  5D8C               	subwf	atraso_ms@i& (0+255),w,b
  3215  007E8A  518B               	movf	(atraso_ms@valor+1)& (0+255),w,b
  3216  007E8C  598D               	subwfb	(atraso_ms@i+1)& (0+255),w,b
  3217  007E8E  A0D8               	btfss	status,0,c
  3218  007E90  EF4C  F03F         	goto	u12731
  3219  007E94  EF4E  F03F         	goto	u12730
  3220  007E98                     u12731:
  3221  007E98  EF30  F03F         	goto	l9456
  3222  007E9C                     u12730:
  3223  007E9C                     
  3224                           ; BSR set to: 0
  3225  007E9C  0012               	return		;funcret
  3226  007E9E                     __end_of_atraso_ms:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _serial_rx *****************
  3230 ;; Defined at:
  3231 ;;		line 64 in file "serial.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  timeout         2   10[BANK0 ] unsigned int 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  to              2   13[BANK0 ] unsigned int 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      unsigned char 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3245 ;;      Params:         0       2       0       0       0       0       0
  3246 ;;      Locals:         0       2       0       0       0       0       0
  3247 ;;      Temps:          0       1       0       0       0       0       0
  3248 ;;      Totals:         0       5       0       0       0       0       0
  3249 ;;Total ram usage:        5 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    5
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text4
  3260  0076F8                     __ptext4:
  3261                           	callstack 0
  3262  0076F8                     _serial_rx:
  3263                           	callstack 25
  3264  0076F8                     
  3265                           ;serial.c: 66: unsigned int to=0;
  3266  0076F8  0E00               	movlw	0
  3267  0076FA  0100               	movlb	0	; () banked
  3268  0076FC  6F8E               	movwf	(serial_rx@to+1)& (0+255),b
  3269  0076FE  0E00               	movlw	0
  3270  007700  6F8D               	movwf	serial_rx@to& (0+255),b
  3271  007702                     
  3272                           ; BSR set to: 0
  3273                           ;serial.c: 68: if(RCSTAbits.FERR || RCSTAbits.OERR)
  3274  007702  B4AB               	btfsc	171,2,c	;volatile
  3275  007704  EF86  F03B         	goto	u13431
  3276  007708  EF88  F03B         	goto	u13430
  3277  00770C                     u13431:
  3278  00770C  EF8F  F03B         	goto	l102
  3279  007710                     u13430:
  3280  007710                     
  3281                           ; BSR set to: 0
  3282  007710  A2AB               	btfss	171,1,c	;volatile
  3283  007712  EF8D  F03B         	goto	u13441
  3284  007716  EF8F  F03B         	goto	u13440
  3285  00771A                     u13441:
  3286  00771A  EFA4  F03B         	goto	l9948
  3287  00771E                     u13440:
  3288  00771E                     l102:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;serial.c: 69: {;serial.c: 70: RCSTAbits.CREN=0;
  3292  00771E  98AB               	bcf	171,4,c	;volatile
  3293                           
  3294                           ;serial.c: 71: RCSTAbits.CREN=1;
  3295  007720  88AB               	bsf	171,4,c	;volatile
  3296  007722  EFA4  F03B         	goto	l9948
  3297  007726                     l9944:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;serial.c: 75: {;serial.c: 76: _delaywdt((unsigned long)((20)*(8000000/4000.0)));
  3301  007726  0E27               	movlw	39
  3302  007728  0100               	movlb	0	; () banked
  3303  00772A  6F8C               	movwf	??_serial_rx& (0+255),b
  3304  00772C  0EFB               	movlw	251
  3305  00772E                     u14167:
  3306  00772E  0004               	clrwdt	
  3307  007730  2EE8               	decfsz	wreg,f,c
  3308  007732  D7FD               	bra	u14167
  3309  007734  2F8C               	decfsz	??_serial_rx& (0+255),f,b
  3310  007736  D7FB               	bra	u14167
  3311  007738  0004               	clrwdt	
  3312  00773A  F000               	nop	
  3313  00773C  0004               	clrwdt	
  3314  00773E                     
  3315                           ;serial.c: 77: to+=20;
  3316  00773E  0E14               	movlw	20
  3317  007740  0100               	movlb	0	; () banked
  3318  007742  278D               	addwf	serial_rx@to& (0+255),f,b
  3319  007744  0E00               	movlw	0
  3320  007746  238E               	addwfc	(serial_rx@to+1)& (0+255),f,b
  3321  007748                     l9948:
  3322                           
  3323                           ; BSR set to: 0
  3324  007748  518A               	movf	serial_rx@timeout& (0+255),w,b
  3325  00774A  5D8D               	subwf	serial_rx@to& (0+255),w,b
  3326  00774C  518B               	movf	(serial_rx@timeout+1)& (0+255),w,b
  3327  00774E  598E               	subwfb	(serial_rx@to+1)& (0+255),w,b
  3328  007750  A0D8               	btfss	status,0,c
  3329  007752  EFAD  F03B         	goto	u13451
  3330  007756  EFAF  F03B         	goto	u13450
  3331  00775A                     u13451:
  3332  00775A  EFB8  F03B         	goto	l108
  3333  00775E                     u13450:
  3334  00775E                     
  3335                           ; BSR set to: 0
  3336  00775E  518A               	movf	serial_rx@timeout& (0+255),w,b
  3337  007760  118B               	iorwf	(serial_rx@timeout+1)& (0+255),w,b
  3338  007762  A4D8               	btfss	status,2,c
  3339  007764  EFB6  F03B         	goto	u13461
  3340  007768  EFB8  F03B         	goto	u13460
  3341  00776C                     u13461:
  3342  00776C  EFBF  F03B         	goto	l109
  3343  007770                     u13460:
  3344  007770                     l108:
  3345                           
  3346                           ; BSR set to: 0
  3347  007770  AA9E               	btfss	158,5,c	;volatile
  3348  007772  EFBD  F03B         	goto	u13471
  3349  007776  EFBF  F03B         	goto	u13470
  3350  00777A                     u13471:
  3351  00777A  EF93  F03B         	goto	l9944
  3352  00777E                     u13470:
  3353  00777E                     l109:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;serial.c: 78: };serial.c: 79: if(PIR1bits.RCIF)
  3357  00777E  AA9E               	btfss	158,5,c	;volatile
  3358  007780  EFC4  F03B         	goto	u13481
  3359  007784  EFC6  F03B         	goto	u13480
  3360  007788                     u13481:
  3361  007788  EFC9  F03B         	goto	l9958
  3362  00778C                     u13480:
  3363  00778C                     
  3364                           ; BSR set to: 0
  3365                           ;serial.c: 80: return RCREG;
  3366  00778C  50AE               	movf	174,w,c	;volatile
  3367  00778E  EFCA  F03B         	goto	l111
  3368  007792                     l9958:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;serial.c: 81: else;serial.c: 82: return 0xA5;
  3372  007792  0EA5               	movlw	165
  3373  007794                     l111:
  3374                           
  3375                           ; BSR set to: 0
  3376  007794  0012               	return		;funcret
  3377  007796                     __end_of_serial_rx:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _serial_init *****************
  3381 ;; Defined at:
  3382 ;;		line 30 in file "serial.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3396 ;;      Params:         0       0       0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    5
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text5
  3411  0000EE                     __ptext5:
  3412                           	callstack 0
  3413  0000EE                     _serial_init:
  3414                           	callstack 25
  3415  0000EE                     
  3416                           ;serial.c: 32: BAUDCONbits.BRG16 = 0;
  3417  0000EE  96B8               	bcf	184,3,c	;volatile
  3418  0000F0                     
  3419                           ;serial.c: 33: SPBRG = 51;
  3420  0000F0  0E33               	movlw	51
  3421  0000F2  6EAF               	movwf	175,c	;volatile
  3422  0000F4                     
  3423                           ;serial.c: 36: TXSTAbits.TX9=0;
  3424  0000F4  9CAC               	bcf	172,6,c	;volatile
  3425  0000F6                     
  3426                           ;serial.c: 37: TXSTAbits.TXEN=1;
  3427  0000F6  8AAC               	bsf	172,5,c	;volatile
  3428  0000F8                     
  3429                           ;serial.c: 38: TXSTAbits.SYNC=0;
  3430  0000F8  98AC               	bcf	172,4,c	;volatile
  3431  0000FA                     
  3432                           ;serial.c: 39: TXSTAbits.BRGH=1;
  3433  0000FA  84AC               	bsf	172,2,c	;volatile
  3434  0000FC                     
  3435                           ;serial.c: 40: RCSTAbits.SPEN=1;
  3436  0000FC  8EAB               	bsf	171,7,c	;volatile
  3437  0000FE                     
  3438                           ;serial.c: 41: RCSTAbits.RX9=0;
  3439  0000FE  9CAB               	bcf	171,6,c	;volatile
  3440  000100                     
  3441                           ;serial.c: 42: RCSTAbits.CREN=1;
  3442  000100  88AB               	bsf	171,4,c	;volatile
  3443  000102  0012               	return		;funcret
  3444  000104                     __end_of_serial_init:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _maketela *****************
  3448 ;; Defined at:
  3449 ;;		line 219 in file "main.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  estados0        2   18[BANK0 ] unsigned int 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3463 ;;      Params:         0       2       0       0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0
  3465 ;;      Temps:          0       1       0       0       0       0       0
  3466 ;;      Totals:         0       3       0       0       0       0       0
  3467 ;;Total ram usage:        3 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    7
  3470 ;; This function calls:
  3471 ;;		_Lcd_Cmd
  3472 ;;		_Lcd_Out
  3473 ;; This function is called by:
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text6
  3479  005D82                     __ptext6:
  3480                           	callstack 0
  3481  005D82                     _maketela:
  3482                           	callstack 23
  3483  005D82                     
  3484                           ;main.c: 221: Lcd_Cmd(1);
  3485  005D82  0E01               	movlw	1
  3486  005D84  EC54  F031         	call	_Lcd_Cmd
  3487                           
  3488                           ;main.c: 222: Lcd_Cmd(12);
  3489  005D88  0E0C               	movlw	12
  3490  005D8A  EC54  F031         	call	_Lcd_Cmd
  3491  005D8E                     
  3492                           ;main.c: 223: if (estados0 == 2)
  3493  005D8E  0E02               	movlw	2
  3494  005D90  0100               	movlb	0	; () banked
  3495  005D92  1992               	xorwf	maketela@estados0& (0+255),w,b
  3496  005D94  1193               	iorwf	(maketela@estados0+1)& (0+255),w,b
  3497  005D96  A4D8               	btfss	status,2,c
  3498  005D98  EFD0  F02E         	goto	u13501
  3499  005D9C  EFD2  F02E         	goto	u13500
  3500  005DA0                     u13501:
  3501  005DA0  EFFB  F02E         	goto	l10024
  3502  005DA4                     u13500:
  3503  005DA4                     
  3504                           ; BSR set to: 0
  3505                           ;main.c: 224: {;main.c: 225: Lcd_Out(1, 0, txt11);
  3506  005DA4  0E00               	movlw	0
  3507  005DA6  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3508  005DA8  0E66               	movlw	low _txt11
  3509  005DAA  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3510  005DAC  0E01               	movlw	high _txt11
  3511  005DAE  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3512  005DB0  0E01               	movlw	1
  3513  005DB2  EC0B  F038         	call	_Lcd_Out
  3514                           
  3515                           ;main.c: 226: Lcd_Out(2, 0, txt21);
  3516  005DB6  0E00               	movlw	0
  3517  005DB8  0100               	movlb	0	; () banked
  3518  005DBA  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3519  005DBC  0EB2               	movlw	low _txt21
  3520  005DBE  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3521  005DC0  0E01               	movlw	high _txt21
  3522  005DC2  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3523  005DC4  0E02               	movlw	2
  3524  005DC6  EC0B  F038         	call	_Lcd_Out
  3525                           
  3526                           ;main.c: 227: Lcd_Out(3, 0, txt31);
  3527  005DCA  0E00               	movlw	0
  3528  005DCC  0100               	movlb	0	; () banked
  3529  005DCE  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3530  005DD0  0EA9               	movlw	low _txt31
  3531  005DD2  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3532  005DD4  0E01               	movlw	high _txt31
  3533  005DD6  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3534  005DD8  0E03               	movlw	3
  3535  005DDA  EC0B  F038         	call	_Lcd_Out
  3536                           
  3537                           ;main.c: 228: Lcd_Out(4, 0, txt41);
  3538  005DDE  0E00               	movlw	0
  3539  005DE0  0100               	movlb	0	; () banked
  3540  005DE2  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3541  005DE4  0E55               	movlw	low _txt41
  3542  005DE6  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3543  005DE8  0E01               	movlw	high _txt41
  3544  005DEA  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3545  005DEC  0E04               	movlw	4
  3546  005DEE  EC0B  F038         	call	_Lcd_Out
  3547                           
  3548                           ;main.c: 229: }
  3549  005DF2  EF5E  F02F         	goto	l10032
  3550  005DF6                     l10024:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;main.c: 230: else if (estados0 == 1)
  3554  005DF6  0592               	decf	maketela@estados0& (0+255),w,b
  3555  005DF8  1193               	iorwf	(maketela@estados0+1)& (0+255),w,b
  3556  005DFA  A4D8               	btfss	status,2,c
  3557  005DFC  EF02  F02F         	goto	u13511
  3558  005E00  EF04  F02F         	goto	u13510
  3559  005E04                     u13511:
  3560  005E04  EF2D  F02F         	goto	l10028
  3561  005E08                     u13510:
  3562  005E08                     
  3563                           ; BSR set to: 0
  3564                           ;main.c: 231: {;main.c: 232: Lcd_Out(1, 0, txt12);
  3565  005E08  0E00               	movlw	0
  3566  005E0A  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3567  005E0C  0E44               	movlw	low _txt12
  3568  005E0E  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3569  005E10  0E01               	movlw	high _txt12
  3570  005E12  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3571  005E14  0E01               	movlw	1
  3572  005E16  EC0B  F038         	call	_Lcd_Out
  3573                           
  3574                           ;main.c: 233: Lcd_Out(2, 0, txt22);
  3575  005E1A  0E00               	movlw	0
  3576  005E1C  0100               	movlb	0	; () banked
  3577  005E1E  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3578  005E20  0E84               	movlw	low _txt22
  3579  005E22  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3580  005E24  0E01               	movlw	high _txt22
  3581  005E26  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3582  005E28  0E02               	movlw	2
  3583  005E2A  EC0B  F038         	call	_Lcd_Out
  3584                           
  3585                           ;main.c: 234: Lcd_Out(3, 0, txt32);
  3586  005E2E  0E00               	movlw	0
  3587  005E30  0100               	movlb	0	; () banked
  3588  005E32  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3589  005E34  0E77               	movlw	low _txt32
  3590  005E36  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3591  005E38  0E01               	movlw	high _txt32
  3592  005E3A  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3593  005E3C  0E03               	movlw	3
  3594  005E3E  EC0B  F038         	call	_Lcd_Out
  3595                           
  3596                           ;main.c: 235: Lcd_Out(4, 0, txt42);
  3597  005E42  0E00               	movlw	0
  3598  005E44  0100               	movlb	0	; () banked
  3599  005E46  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3600  005E48  0E33               	movlw	low _txt42
  3601  005E4A  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3602  005E4C  0E01               	movlw	high _txt42
  3603  005E4E  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3604  005E50  0E04               	movlw	4
  3605  005E52  EC0B  F038         	call	_Lcd_Out
  3606                           
  3607                           ;main.c: 236: }
  3608  005E56  EF5E  F02F         	goto	l10032
  3609  005E5A                     l10028:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;main.c: 237: else if (estados0 == 3)
  3613  005E5A  0E03               	movlw	3
  3614  005E5C  1992               	xorwf	maketela@estados0& (0+255),w,b
  3615  005E5E  1193               	iorwf	(maketela@estados0+1)& (0+255),w,b
  3616  005E60  A4D8               	btfss	status,2,c
  3617  005E62  EF35  F02F         	goto	u13521
  3618  005E66  EF37  F02F         	goto	u13520
  3619  005E6A                     u13521:
  3620  005E6A  EF5E  F02F         	goto	l10032
  3621  005E6E                     u13520:
  3622  005E6E                     
  3623                           ; BSR set to: 0
  3624                           ;main.c: 238: {;main.c: 239: Lcd_Out(1, 0, txt13);
  3625  005E6E  0E00               	movlw	0
  3626  005E70  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3627  005E72  0E11               	movlw	low _txt13
  3628  005E74  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3629  005E76  0E02               	movlw	high _txt13
  3630  005E78  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3631  005E7A  0E01               	movlw	1
  3632  005E7C  EC0B  F038         	call	_Lcd_Out
  3633                           
  3634                           ;main.c: 240: Lcd_Out(2, 0, txt23);
  3635  005E80  0E00               	movlw	0
  3636  005E82  0100               	movlb	0	; () banked
  3637  005E84  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3638  005E86  0E9D               	movlw	low _txt23
  3639  005E88  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3640  005E8A  0E01               	movlw	high _txt23
  3641  005E8C  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3642  005E8E  0E02               	movlw	2
  3643  005E90  EC0B  F038         	call	_Lcd_Out
  3644                           
  3645                           ;main.c: 241: Lcd_Out(3, 0, txt33);
  3646  005E94  0E00               	movlw	0
  3647  005E96  0100               	movlb	0	; () banked
  3648  005E98  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3649  005E9A  0E91               	movlw	low _txt33
  3650  005E9C  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3651  005E9E  0E01               	movlw	high _txt33
  3652  005EA0  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3653  005EA2  0E03               	movlw	3
  3654  005EA4  EC0B  F038         	call	_Lcd_Out
  3655                           
  3656                           ;main.c: 242: Lcd_Out(4, 0, txt43);
  3657  005EA8  0E00               	movlw	0
  3658  005EAA  0100               	movlb	0	; () banked
  3659  005EAC  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3660  005EAE  0E00               	movlw	low _txt43
  3661  005EB0  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3662  005EB2  0E02               	movlw	high _txt43
  3663  005EB4  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3664  005EB6  0E04               	movlw	4
  3665  005EB8  EC0B  F038         	call	_Lcd_Out
  3666  005EBC                     l10032:
  3667                           
  3668                           ;main.c: 243: };main.c: 244: _delay((unsigned long)((25)*(8000000/4000.0)));
  3669  005EBC  0E41               	movlw	65
  3670  005EBE  0100               	movlb	0	; () banked
  3671  005EC0  6F94               	movwf	??_maketela& (0+255),b
  3672  005EC2  0EEE               	movlw	238
  3673  005EC4                     u14177:
  3674  005EC4  2EE8               	decfsz	wreg,f,c
  3675  005EC6  D7FE               	bra	u14177
  3676  005EC8  2F94               	decfsz	??_maketela& (0+255),f,b
  3677  005ECA  D7FC               	bra	u14177
  3678  005ECC  F000               	nop	
  3679  005ECE  0012               	return		;funcret
  3680  005ED0                     __end_of_maketela:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _atualizatela *****************
  3684 ;; Defined at:
  3685 ;;		line 247 in file "main.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  estados         2   27[BANK1 ] PTR unsigned int 
  3688 ;;		 -> states(6), 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3700 ;;      Params:         0       0       2       0       0       0       0
  3701 ;;      Locals:         0       0       4       0       0       0       0
  3702 ;;      Temps:          0       0       2       0       0       0       0
  3703 ;;      Totals:         0       0       8       0       0       0       0
  3704 ;;Total ram usage:        8 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    8
  3707 ;; This function calls:
  3708 ;;		_Lcd_Out
  3709 ;;		___fldiv
  3710 ;;		___flmul
  3711 ;;		_leituraCXI
  3712 ;;		_leituraCXS
  3713 ;;		_sprintf
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text7
  3720  0041D0                     __ptext7:
  3721                           	callstack 0
  3722  0041D0                     _atualizatela:
  3723                           	callstack 22
  3724  0041D0                     
  3725                           ;main.c: 249: if (estados[1] == 2)
  3726  0041D0  0101               	movlb	1	; () banked
  3727  0041D2  EE20 F002          	lfsr	2,2
  3728  0041D6  51F8               	movf	atualizatela@estados& (0+255),w,b
  3729  0041D8  26D9               	addwf	fsr2l,f,c
  3730  0041DA  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  3731  0041DC  22DA               	addwfc	fsr2h,f,c
  3732  0041DE  0E02               	movlw	2
  3733  0041E0  18DE               	xorwf	postinc2,w,c
  3734  0041E2  10DE               	iorwf	postinc2,w,c
  3735  0041E4  A4D8               	btfss	status,2,c
  3736  0041E6  EFF7  F020         	goto	u13531
  3737  0041EA  EFF9  F020         	goto	u13530
  3738  0041EE                     u13531:
  3739  0041EE  EF21  F021         	goto	l10038
  3740  0041F2                     u13530:
  3741  0041F2                     
  3742                           ; BSR set to: 1
  3743                           ;main.c: 250: {;main.c: 251: Lcd_Out(1, 0, txt0);
  3744  0041F2  0E00               	movlw	0
  3745  0041F4  0100               	movlb	0	; () banked
  3746  0041F6  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3747  0041F8  0E00               	movlw	low _txt0
  3748  0041FA  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3749  0041FC  0E01               	movlw	high _txt0
  3750  0041FE  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3751  004200  0E01               	movlw	1
  3752  004202  EC0B  F038         	call	_Lcd_Out
  3753                           
  3754                           ;main.c: 252: Lcd_Out(2, 0, txt2e);
  3755  004206  0E00               	movlw	0
  3756  004208  0100               	movlb	0	; () banked
  3757  00420A  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3758  00420C  0E22               	movlw	low _txt2e
  3759  00420E  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3760  004210  0E01               	movlw	high _txt2e
  3761  004212  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3762  004214  0E02               	movlw	2
  3763  004216  EC0B  F038         	call	_Lcd_Out
  3764                           
  3765                           ;main.c: 253: Lcd_Out(3, 0, txt3e);
  3766  00421A  0E00               	movlw	0
  3767  00421C  0100               	movlb	0	; () banked
  3768  00421E  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3769  004220  0E11               	movlw	low _txt3e
  3770  004222  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3771  004224  0E01               	movlw	high _txt3e
  3772  004226  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3773  004228  0E03               	movlw	3
  3774  00422A  EC0B  F038         	call	_Lcd_Out
  3775                           
  3776                           ;main.c: 254: Lcd_Out(4, 0, txt0);
  3777  00422E  0E00               	movlw	0
  3778  004230  0100               	movlb	0	; () banked
  3779  004232  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3780  004234  0E00               	movlw	low _txt0
  3781  004236  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3782  004238  0E01               	movlw	high _txt0
  3783  00423A  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3784  00423C  0E04               	movlw	4
  3785  00423E  EC0B  F038         	call	_Lcd_Out
  3786  004242                     l10038:
  3787                           
  3788                           ;main.c: 255: };main.c: 256: if ((estados[0] == 2) && (estados[1] != 2))
  3789  004242  C1F8  FFD9         	movff	atualizatela@estados,fsr2l
  3790  004246  C1F9  FFDA         	movff	atualizatela@estados+1,fsr2h
  3791  00424A  0E02               	movlw	2
  3792  00424C  18DE               	xorwf	postinc2,w,c
  3793  00424E  10DE               	iorwf	postinc2,w,c
  3794  004250  A4D8               	btfss	status,2,c
  3795  004252  EF2D  F021         	goto	u13541
  3796  004256  EF2F  F021         	goto	u13540
  3797  00425A                     u13541:
  3798  00425A  EFAB  F021         	goto	l10058
  3799  00425E                     u13540:
  3800  00425E  0101               	movlb	1	; () banked
  3801  004260  EE20 F002          	lfsr	2,2
  3802  004264  51F8               	movf	atualizatela@estados& (0+255),w,b
  3803  004266  26D9               	addwf	fsr2l,f,c
  3804  004268  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  3805  00426A  22DA               	addwfc	fsr2h,f,c
  3806  00426C  0E02               	movlw	2
  3807  00426E  18DE               	xorwf	postinc2,w,c
  3808  004270  10DE               	iorwf	postinc2,w,c
  3809  004272  B4D8               	btfsc	status,2,c
  3810  004274  EF3E  F021         	goto	u13551
  3811  004278  EF40  F021         	goto	u13550
  3812  00427C                     u13551:
  3813  00427C  EFAB  F021         	goto	l10058
  3814  004280                     u13550:
  3815  004280                     
  3816                           ; BSR set to: 1
  3817                           ;main.c: 257: {;main.c: 258: if (estados[1] == 0)
  3818  004280  EE20 F002          	lfsr	2,2
  3819  004284  51F8               	movf	atualizatela@estados& (0+255),w,b
  3820  004286  26D9               	addwf	fsr2l,f,c
  3821  004288  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  3822  00428A  22DA               	addwfc	fsr2h,f,c
  3823  00428C  50DE               	movf	postinc2,w,c
  3824  00428E  10DE               	iorwf	postinc2,w,c
  3825  004290  A4D8               	btfss	status,2,c
  3826  004292  EF4D  F021         	goto	u13561
  3827  004296  EF4F  F021         	goto	u13560
  3828  00429A                     u13561:
  3829  00429A  EF5B  F021         	goto	l10046
  3830  00429E                     u13560:
  3831  00429E                     
  3832                           ; BSR set to: 1
  3833                           ;main.c: 259: {;main.c: 260: Lcd_Out(2, 6, "AUTO  ");
  3834  00429E  0E06               	movlw	6
  3835  0042A0  0100               	movlb	0	; () banked
  3836  0042A2  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3837  0042A4  0EB2               	movlw	low STR_2
  3838  0042A6  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3839  0042A8  0E06               	movlw	high STR_2
  3840  0042AA  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3841  0042AC  0E02               	movlw	2
  3842  0042AE  EC0B  F038         	call	_Lcd_Out
  3843                           
  3844                           ;main.c: 261: }
  3845  0042B2  EF74  F021         	goto	l10050
  3846  0042B6                     l10046:
  3847                           
  3848                           ; BSR set to: 1
  3849                           ;main.c: 262: else if (estados[1] == 1)
  3850  0042B6  EE20 F002          	lfsr	2,2
  3851  0042BA  51F8               	movf	atualizatela@estados& (0+255),w,b
  3852  0042BC  26D9               	addwf	fsr2l,f,c
  3853  0042BE  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  3854  0042C0  22DA               	addwfc	fsr2h,f,c
  3855  0042C2  04DE               	decf	postinc2,w,c
  3856  0042C4  10DE               	iorwf	postinc2,w,c
  3857  0042C6  A4D8               	btfss	status,2,c
  3858  0042C8  EF68  F021         	goto	u13571
  3859  0042CC  EF6A  F021         	goto	u13570
  3860  0042D0                     u13571:
  3861  0042D0  EF74  F021         	goto	l10050
  3862  0042D4                     u13570:
  3863  0042D4                     
  3864                           ; BSR set to: 1
  3865                           ;main.c: 263: {;main.c: 264: Lcd_Out(2, 6, "MANUAL    ");
  3866  0042D4  0E06               	movlw	6
  3867  0042D6  0100               	movlb	0	; () banked
  3868  0042D8  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3869  0042DA  0E95               	movlw	low STR_3
  3870  0042DC  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3871  0042DE  0E06               	movlw	high STR_3
  3872  0042E0  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3873  0042E2  0E02               	movlw	2
  3874  0042E4  EC0B  F038         	call	_Lcd_Out
  3875  0042E8                     l10050:
  3876                           
  3877                           ;main.c: 265: };main.c: 266: if (estados[2] == 0)
  3878  0042E8  0101               	movlb	1	; () banked
  3879  0042EA  EE20 F004          	lfsr	2,4
  3880  0042EE  51F8               	movf	atualizatela@estados& (0+255),w,b
  3881  0042F0  26D9               	addwf	fsr2l,f,c
  3882  0042F2  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  3883  0042F4  22DA               	addwfc	fsr2h,f,c
  3884  0042F6  50DE               	movf	postinc2,w,c
  3885  0042F8  10DE               	iorwf	postinc2,w,c
  3886  0042FA  A4D8               	btfss	status,2,c
  3887  0042FC  EF82  F021         	goto	u13581
  3888  004300  EF84  F021         	goto	u13580
  3889  004304                     u13581:
  3890  004304  EF90  F021         	goto	l10054
  3891  004308                     u13580:
  3892  004308                     
  3893                           ; BSR set to: 1
  3894                           ;main.c: 267: {;main.c: 268: Lcd_Out(3, 8, "DESL    ");
  3895  004308  0E08               	movlw	8
  3896  00430A  0100               	movlb	0	; () banked
  3897  00430C  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3898  00430E  0EA9               	movlw	low STR_4
  3899  004310  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3900  004312  0E06               	movlw	high STR_4
  3901  004314  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3902  004316  0E03               	movlw	3
  3903  004318  EC0B  F038         	call	_Lcd_Out
  3904                           
  3905                           ;main.c: 269: }
  3906  00431C  EFB6  F022         	goto	l10082
  3907  004320                     l10054:
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;main.c: 270: else if (estados[2] == 1)
  3911  004320  EE20 F004          	lfsr	2,4
  3912  004324  51F8               	movf	atualizatela@estados& (0+255),w,b
  3913  004326  26D9               	addwf	fsr2l,f,c
  3914  004328  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  3915  00432A  22DA               	addwfc	fsr2h,f,c
  3916  00432C  04DE               	decf	postinc2,w,c
  3917  00432E  10DE               	iorwf	postinc2,w,c
  3918  004330  A4D8               	btfss	status,2,c
  3919  004332  EF9D  F021         	goto	u13591
  3920  004336  EF9F  F021         	goto	u13590
  3921  00433A                     u13591:
  3922  00433A  EFB6  F022         	goto	l10082
  3923  00433E                     u13590:
  3924  00433E                     
  3925                           ; BSR set to: 1
  3926                           ;main.c: 271: {;main.c: 272: Lcd_Out(3, 8, "LIG     ");
  3927  00433E  0E08               	movlw	8
  3928  004340  0100               	movlb	0	; () banked
  3929  004342  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3930  004344  0EA0               	movlw	low STR_5
  3931  004346  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3932  004348  0E06               	movlw	high STR_5
  3933  00434A  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3934  00434C  0E03               	movlw	3
  3935  00434E  EC0B  F038         	call	_Lcd_Out
  3936  004352  EFB6  F022         	goto	l10082
  3937  004356                     l10058:
  3938                           
  3939                           ;main.c: 275: else if (estados[0] == 1 && (estados[1] != 2))
  3940  004356  C1F8  FFD9         	movff	atualizatela@estados,fsr2l
  3941  00435A  C1F9  FFDA         	movff	atualizatela@estados+1,fsr2h
  3942  00435E  04DE               	decf	postinc2,w,c
  3943  004360  10DE               	iorwf	postinc2,w,c
  3944  004362  A4D8               	btfss	status,2,c
  3945  004364  EFB6  F021         	goto	u13601
  3946  004368  EFB8  F021         	goto	u13600
  3947  00436C                     u13601:
  3948  00436C  EFFD  F021         	goto	l10068
  3949  004370                     u13600:
  3950  004370  0101               	movlb	1	; () banked
  3951  004372  EE20 F002          	lfsr	2,2
  3952  004376  51F8               	movf	atualizatela@estados& (0+255),w,b
  3953  004378  26D9               	addwf	fsr2l,f,c
  3954  00437A  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  3955  00437C  22DA               	addwfc	fsr2h,f,c
  3956  00437E  0E02               	movlw	2
  3957  004380  18DE               	xorwf	postinc2,w,c
  3958  004382  10DE               	iorwf	postinc2,w,c
  3959  004384  B4D8               	btfsc	status,2,c
  3960  004386  EFC7  F021         	goto	u13611
  3961  00438A  EFC9  F021         	goto	u13610
  3962  00438E                     u13611:
  3963  00438E  EFFD  F021         	goto	l10068
  3964  004392                     u13610:
  3965  004392                     
  3966                           ; BSR set to: 1
  3967                           ;main.c: 276: {;main.c: 277: sprintf(str, "%02d", minCXI);
  3968  004392  0ED9               	movlw	low _str
  3969  004394  0100               	movlb	0	; () banked
  3970  004396  6FD6               	movwf	sprintf@sp& (0+255),b
  3971  004398  0E01               	movlw	high _str
  3972  00439A  6FD7               	movwf	(sprintf@sp+1)& (0+255),b
  3973  00439C  0ED4               	movlw	low (STR_12+1)
  3974  00439E  6FD8               	movwf	sprintf@f& (0+255),b
  3975  0043A0  0E06               	movlw	high (STR_12+1)
  3976  0043A2  6FD9               	movwf	(sprintf@f+1)& (0+255),b
  3977  0043A4  C0ED  F0DA         	movff	_minCXI,?_sprintf+4
  3978  0043A8  C0EE  F0DB         	movff	_minCXI+1,?_sprintf+5
  3979  0043AC  EC70  F003         	call	_sprintf	;wreg free
  3980  0043B0                     
  3981                           ;main.c: 278: Lcd_Out(2, 12, str);
  3982  0043B0  0E0C               	movlw	12
  3983  0043B2  0100               	movlb	0	; () banked
  3984  0043B4  6F8D               	movwf	Lcd_Out@x& (0+255),b
  3985  0043B6  0ED9               	movlw	low _str
  3986  0043B8  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  3987  0043BA  0E01               	movlw	high _str
  3988  0043BC  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  3989  0043BE  0E02               	movlw	2
  3990  0043C0  EC0B  F038         	call	_Lcd_Out
  3991  0043C4                     
  3992                           ;main.c: 279: sprintf(str, "%02d", minCXS);
  3993  0043C4  0ED9               	movlw	low _str
  3994  0043C6  0100               	movlb	0	; () banked
  3995  0043C8  6FD6               	movwf	sprintf@sp& (0+255),b
  3996  0043CA  0E01               	movlw	high _str
  3997  0043CC  6FD7               	movwf	(sprintf@sp+1)& (0+255),b
  3998  0043CE  0ED4               	movlw	low (STR_12+1)
  3999  0043D0  6FD8               	movwf	sprintf@f& (0+255),b
  4000  0043D2  0E06               	movlw	high (STR_12+1)
  4001  0043D4  6FD9               	movwf	(sprintf@f+1)& (0+255),b
  4002  0043D6  C0EB  F0DA         	movff	_minCXS,?_sprintf+4
  4003  0043DA  C0EC  F0DB         	movff	_minCXS+1,?_sprintf+5
  4004  0043DE  EC70  F003         	call	_sprintf	;wreg free
  4005                           
  4006                           ;main.c: 280: Lcd_Out(3, 12, str);
  4007  0043E2  0E0C               	movlw	12
  4008  0043E4  0100               	movlb	0	; () banked
  4009  0043E6  6F8D               	movwf	Lcd_Out@x& (0+255),b
  4010  0043E8  0ED9               	movlw	low _str
  4011  0043EA  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  4012  0043EC  0E01               	movlw	high _str
  4013  0043EE  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  4014  0043F0  0E03               	movlw	3
  4015  0043F2  EC0B  F038         	call	_Lcd_Out
  4016                           
  4017                           ;main.c: 281: }
  4018  0043F6  EFB6  F022         	goto	l10082
  4019  0043FA                     l10068:
  4020                           
  4021                           ;main.c: 282: else if (estados[0] == 3 && (estados[1] != 2))
  4022  0043FA  C1F8  FFD9         	movff	atualizatela@estados,fsr2l
  4023  0043FE  C1F9  FFDA         	movff	atualizatela@estados+1,fsr2h
  4024  004402  0E03               	movlw	3
  4025  004404  18DE               	xorwf	postinc2,w,c
  4026  004406  10DE               	iorwf	postinc2,w,c
  4027  004408  A4D8               	btfss	status,2,c
  4028  00440A  EF09  F022         	goto	u13621
  4029  00440E  EF0B  F022         	goto	u13620
  4030  004412                     u13621:
  4031  004412  EFB6  F022         	goto	l10082
  4032  004416                     u13620:
  4033  004416  0101               	movlb	1	; () banked
  4034  004418  EE20 F002          	lfsr	2,2
  4035  00441C  51F8               	movf	atualizatela@estados& (0+255),w,b
  4036  00441E  26D9               	addwf	fsr2l,f,c
  4037  004420  51F9               	movf	(atualizatela@estados+1)& (0+255),w,b
  4038  004422  22DA               	addwfc	fsr2h,f,c
  4039  004424  0E02               	movlw	2
  4040  004426  18DE               	xorwf	postinc2,w,c
  4041  004428  10DE               	iorwf	postinc2,w,c
  4042  00442A  B4D8               	btfsc	status,2,c
  4043  00442C  EF1A  F022         	goto	u13631
  4044  004430  EF1C  F022         	goto	u13630
  4045  004434                     u13631:
  4046  004434  EFB6  F022         	goto	l10082
  4047  004438                     u13630:
  4048  004438                     
  4049                           ; BSR set to: 1
  4050                           ;main.c: 283: {;main.c: 284: leituraCXI();
  4051  004438  EC58  F03D         	call	_leituraCXI	;wreg free
  4052                           
  4053                           ;main.c: 285: leituraCXS();
  4054  00443C  EC19  F03D         	call	_leituraCXS	;wreg free
  4055                           
  4056                           ;main.c: 286: sprintf(str, "%04.2f", (tensaoCXI*100.0)/5.0);
  4057  004440  0E00               	movlw	0
  4058  004442  0100               	movlb	0	; () banked
  4059  004444  6F9C               	movwf	___flmul@a& (0+255),b
  4060  004446  0E00               	movlw	0
  4061  004448  6F9D               	movwf	(___flmul@a+1)& (0+255),b
  4062  00444A  0EC8               	movlw	200
  4063  00444C  6F9E               	movwf	(___flmul@a+2)& (0+255),b
  4064  00444E  0E42               	movlw	66
  4065  004450  6F9F               	movwf	(___flmul@a+3)& (0+255),b
  4066  004452  C0E7  F098         	movff	_tensaoCXI,___flmul@b
  4067  004456  C0E8  F099         	movff	_tensaoCXI+1,___flmul@b+1
  4068  00445A  C0E9  F09A         	movff	_tensaoCXI+2,___flmul@b+2
  4069  00445E  C0EA  F09B         	movff	_tensaoCXI+3,___flmul@b+3
  4070  004462  ECA3  F018         	call	___flmul	;wreg free
  4071  004466  C098  F0B1         	movff	?___flmul,___fldiv@b
  4072  00446A  C099  F0B2         	movff	?___flmul+1,___fldiv@b+1
  4073  00446E  C09A  F0B3         	movff	?___flmul+2,___fldiv@b+2
  4074  004472  C09B  F0B4         	movff	?___flmul+3,___fldiv@b+3
  4075  004476  0E00               	movlw	0
  4076  004478  0100               	movlb	0	; () banked
  4077  00447A  6FB5               	movwf	___fldiv@a& (0+255),b
  4078  00447C  0E00               	movlw	0
  4079  00447E  6FB6               	movwf	(___fldiv@a+1)& (0+255),b
  4080  004480  0EA0               	movlw	160
  4081  004482  6FB7               	movwf	(___fldiv@a+2)& (0+255),b
  4082  004484  0E40               	movlw	64
  4083  004486  6FB8               	movwf	(___fldiv@a+3)& (0+255),b
  4084  004488  ECC0  F022         	call	___fldiv	;wreg free
  4085  00448C  C0B1  F1FC         	movff	?___fldiv,_atualizatela$1957
  4086  004490  C0B2  F1FD         	movff	?___fldiv+1,_atualizatela$1957+1
  4087  004494  C0B3  F1FE         	movff	?___fldiv+2,_atualizatela$1957+2
  4088  004498  C0B4  F1FF         	movff	?___fldiv+3,_atualizatela$1957+3
  4089  00449C                     
  4090                           ;main.c: 286: sprintf(str, "%04.2f", (tensaoCXI*100.0)/5.0);
  4091  00449C  0ED9               	movlw	low _str
  4092  00449E  0100               	movlb	0	; () banked
  4093  0044A0  6FD6               	movwf	sprintf@sp& (0+255),b
  4094  0044A2  0E01               	movlw	high _str
  4095  0044A4  6FD7               	movwf	(sprintf@sp+1)& (0+255),b
  4096  0044A6  0EC0               	movlw	low STR_8
  4097  0044A8  6FD8               	movwf	sprintf@f& (0+255),b
  4098  0044AA  0E06               	movlw	high STR_8
  4099  0044AC  6FD9               	movwf	(sprintf@f+1)& (0+255),b
  4100  0044AE  C1FC  F0DA         	movff	_atualizatela$1957,?_sprintf+4
  4101  0044B2  C1FD  F0DB         	movff	_atualizatela$1957+1,?_sprintf+5
  4102  0044B6  C1FE  F0DC         	movff	_atualizatela$1957+2,?_sprintf+6
  4103  0044BA  C1FF  F0DD         	movff	_atualizatela$1957+3,?_sprintf+7
  4104  0044BE  EC70  F003         	call	_sprintf	;wreg free
  4105  0044C2                     
  4106                           ;main.c: 287: Lcd_Out(2, 11, str);
  4107  0044C2  0E0B               	movlw	11
  4108  0044C4  0100               	movlb	0	; () banked
  4109  0044C6  6F8D               	movwf	Lcd_Out@x& (0+255),b
  4110  0044C8  0ED9               	movlw	low _str
  4111  0044CA  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  4112  0044CC  0E01               	movlw	high _str
  4113  0044CE  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  4114  0044D0  0E02               	movlw	2
  4115  0044D2  EC0B  F038         	call	_Lcd_Out
  4116  0044D6                     
  4117                           ;main.c: 288: sprintf(str, "%04.2f", (tensaoCXS*100.0)/5.0);
  4118  0044D6  0E00               	movlw	0
  4119  0044D8  0100               	movlb	0	; () banked
  4120  0044DA  6F9C               	movwf	___flmul@a& (0+255),b
  4121  0044DC  0E00               	movlw	0
  4122  0044DE  6F9D               	movwf	(___flmul@a+1)& (0+255),b
  4123  0044E0  0EC8               	movlw	200
  4124  0044E2  6F9E               	movwf	(___flmul@a+2)& (0+255),b
  4125  0044E4  0E42               	movlw	66
  4126  0044E6  6F9F               	movwf	(___flmul@a+3)& (0+255),b
  4127  0044E8  C0E3  F098         	movff	_tensaoCXS,___flmul@b
  4128  0044EC  C0E4  F099         	movff	_tensaoCXS+1,___flmul@b+1
  4129  0044F0  C0E5  F09A         	movff	_tensaoCXS+2,___flmul@b+2
  4130  0044F4  C0E6  F09B         	movff	_tensaoCXS+3,___flmul@b+3
  4131  0044F8  ECA3  F018         	call	___flmul	;wreg free
  4132  0044FC  C098  F0B1         	movff	?___flmul,___fldiv@b
  4133  004500  C099  F0B2         	movff	?___flmul+1,___fldiv@b+1
  4134  004504  C09A  F0B3         	movff	?___flmul+2,___fldiv@b+2
  4135  004508  C09B  F0B4         	movff	?___flmul+3,___fldiv@b+3
  4136  00450C  0E00               	movlw	0
  4137  00450E  0100               	movlb	0	; () banked
  4138  004510  6FB5               	movwf	___fldiv@a& (0+255),b
  4139  004512  0E00               	movlw	0
  4140  004514  6FB6               	movwf	(___fldiv@a+1)& (0+255),b
  4141  004516  0EA0               	movlw	160
  4142  004518  6FB7               	movwf	(___fldiv@a+2)& (0+255),b
  4143  00451A  0E40               	movlw	64
  4144  00451C  6FB8               	movwf	(___fldiv@a+3)& (0+255),b
  4145  00451E  ECC0  F022         	call	___fldiv	;wreg free
  4146  004522  C0B1  F1FC         	movff	?___fldiv,_atualizatela$1957
  4147  004526  C0B2  F1FD         	movff	?___fldiv+1,_atualizatela$1957+1
  4148  00452A  C0B3  F1FE         	movff	?___fldiv+2,_atualizatela$1957+2
  4149  00452E  C0B4  F1FF         	movff	?___fldiv+3,_atualizatela$1957+3
  4150  004532                     
  4151                           ;main.c: 288: sprintf(str, "%04.2f", (tensaoCXS*100.0)/5.0);
  4152  004532  0ED9               	movlw	low _str
  4153  004534  0100               	movlb	0	; () banked
  4154  004536  6FD6               	movwf	sprintf@sp& (0+255),b
  4155  004538  0E01               	movlw	high _str
  4156  00453A  6FD7               	movwf	(sprintf@sp+1)& (0+255),b
  4157  00453C  0EC0               	movlw	low STR_8
  4158  00453E  6FD8               	movwf	sprintf@f& (0+255),b
  4159  004540  0E06               	movlw	high STR_8
  4160  004542  6FD9               	movwf	(sprintf@f+1)& (0+255),b
  4161  004544  C1FC  F0DA         	movff	_atualizatela$1957,?_sprintf+4
  4162  004548  C1FD  F0DB         	movff	_atualizatela$1957+1,?_sprintf+5
  4163  00454C  C1FE  F0DC         	movff	_atualizatela$1957+2,?_sprintf+6
  4164  004550  C1FF  F0DD         	movff	_atualizatela$1957+3,?_sprintf+7
  4165  004554  EC70  F003         	call	_sprintf	;wreg free
  4166                           
  4167                           ;main.c: 289: Lcd_Out(3, 11, str);
  4168  004558  0E0B               	movlw	11
  4169  00455A  0100               	movlb	0	; () banked
  4170  00455C  6F8D               	movwf	Lcd_Out@x& (0+255),b
  4171  00455E  0ED9               	movlw	low _str
  4172  004560  6F8E               	movwf	Lcd_Out@buffer& (0+255),b
  4173  004562  0E01               	movlw	high _str
  4174  004564  6F8F               	movwf	(Lcd_Out@buffer+1)& (0+255),b
  4175  004566  0E03               	movlw	3
  4176  004568  EC0B  F038         	call	_Lcd_Out
  4177  00456C                     l10082:
  4178                           
  4179                           ;main.c: 290: };main.c: 291: _delay((unsigned long)((25)*(8000000/4000.0)));
  4180  00456C  0E41               	movlw	65
  4181  00456E  0101               	movlb	1	; () banked
  4182  004570  6FFA               	movwf	??_atualizatela& (0+255),b
  4183  004572  0EEE               	movlw	238
  4184  004574                     u14187:
  4185  004574  2EE8               	decfsz	wreg,f,c
  4186  004576  D7FE               	bra	u14187
  4187  004578  2FFA               	decfsz	??_atualizatela& (0+255),f,b
  4188  00457A  D7FC               	bra	u14187
  4189  00457C  F000               	nop	
  4190  00457E  0012               	return		;funcret
  4191  004580                     __end_of_atualizatela:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _sprintf *****************
  4195 ;; Defined at:
  4196 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  sp              2   86[BANK0 ] PTR unsigned char 
  4199 ;;		 -> buffer_tx(22), str(4), 
  4200 ;;  f               2   88[BANK0 ] PTR const unsigned char 
  4201 ;;		 -> STR_15(6), STR_14(6), STR_13(5), STR_12(6), 
  4202 ;;		 -> STR_11(6), STR_10(7), STR_9(7), STR_8(7), 
  4203 ;;		 -> STR_7(5), STR_6(5), STR_1(6), 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  4206 ;;  val             4   10[BANK1 ] unsigned long 
  4207 ;;  tmpval          4    6[BANK1 ] struct .
  4208 ;;  cp              3    0        PTR const unsigned char 
  4209 ;;  prec            2   24[BANK1 ] int 
  4210 ;;  width           2   18[BANK1 ] int 
  4211 ;;  flag            2   16[BANK1 ] unsigned short 
  4212 ;;  eexp            2   14[BANK1 ] int 
  4213 ;;  ap              2    4[BANK1 ] PTR void [1]
  4214 ;;		 -> ?_sprintf(2), 
  4215 ;;  len             2    0        unsigned int 
  4216 ;;  c               1   26[BANK1 ] unsigned char 
  4217 ;;  d               1    0        unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  2   86[BANK0 ] int 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4227 ;;      Params:         0       8       0       0       0       0       0
  4228 ;;      Locals:         0       0      27       0       0       0       0
  4229 ;;      Temps:          0       4       0       0       0       0       0
  4230 ;;      Totals:         0      12      27       0       0       0       0
  4231 ;;Total ram usage:       39 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    7
  4234 ;; This function calls:
  4235 ;;		___awdiv
  4236 ;;		___fladd
  4237 ;;		___fleq
  4238 ;;		___flge
  4239 ;;		___flmul
  4240 ;;		___flneg
  4241 ;;		___flsub
  4242 ;;		___fltol
  4243 ;;		___lldiv
  4244 ;;		___llmod
  4245 ;;		___wmul
  4246 ;;		___xxtofl
  4247 ;;		__div_to_l_
  4248 ;;		__tdiv_to_l_
  4249 ;;		_fround
  4250 ;;		_isdigit
  4251 ;;		_scale
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;;		_atualizatela
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text8
  4259  0006E0                     __ptext8:
  4260                           	callstack 0
  4261  0006E0                     _sprintf:
  4262                           	callstack 23
  4263  0006E0                     
  4264                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  4265  0006E0  0EDA               	movlw	low (?_sprintf+4)
  4266  0006E2  0101               	movlb	1	; () banked
  4267  0006E4  6FE1               	movwf	sprintf@ap& (0+255),b
  4268  0006E6  0E00               	movlw	high (?_sprintf+4)
  4269  0006E8  6FE2               	movwf	(sprintf@ap+1)& (0+255),b
  4270                           
  4271                           ;doprnt.c: 553: while((c = *f++)) {
  4272  0006EA  EF87  F00A         	goto	l9820
  4273  0006EE                     l9494:
  4274                           
  4275                           ; BSR set to: 1
  4276                           ;doprnt.c: 555: if(c != '%')
  4277  0006EE  0E25               	movlw	37
  4278  0006F0  19F7               	xorwf	sprintf@c& (0+255),w,b
  4279  0006F2  B4D8               	btfsc	status,2,c
  4280  0006F4  EF7E  F003         	goto	u12771
  4281  0006F8  EF80  F003         	goto	u12770
  4282  0006FC                     u12771:
  4283  0006FC  EF8B  F003         	goto	l9500
  4284  000700                     u12770:
  4285  000700                     
  4286                           ; BSR set to: 1
  4287                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4288  000700  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  4289  000704  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  4290  000708  C1F7  FFDF         	movff	sprintf@c,indf2
  4291  00070C                     
  4292                           ; BSR set to: 1
  4293  00070C  0100               	movlb	0	; () banked
  4294  00070E  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  4295  000710  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  4296                           
  4297                           ;doprnt.c: 559: continue;
  4298  000712  EF87  F00A         	goto	l9820
  4299  000716                     l9500:
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  4303  000716  0E00               	movlw	0
  4304  000718  6FF0               	movwf	(sprintf@width+1)& (0+255),b
  4305  00071A  0E00               	movlw	0
  4306  00071C  6FEF               	movwf	sprintf@width& (0+255),b
  4307                           
  4308                           ;doprnt.c: 565: flag = 0;
  4309  00071E  0E00               	movlw	0
  4310  000720  6FEE               	movwf	(sprintf@flag+1)& (0+255),b
  4311  000722  0E00               	movlw	0
  4312  000724  6FED               	movwf	sprintf@flag& (0+255),b
  4313  000726  EF9A  F003         	goto	l9506
  4314  00072A                     l9502:
  4315                           
  4316                           ;doprnt.c: 597: flag |= 0x04;
  4317  00072A  0101               	movlb	1	; () banked
  4318  00072C  85ED               	bsf	sprintf@flag& (0+255),2,b
  4319                           
  4320                           ;doprnt.c: 598: f++;
  4321  00072E  0100               	movlb	0	; () banked
  4322  000730  4BD8               	infsnz	sprintf@f& (0+255),f,b
  4323  000732  2BD9               	incf	(sprintf@f+1)& (0+255),f,b
  4324  000734                     l9506:
  4325  000734  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4326  000738  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4327  00073C                     	if	0	;tblptru may be non-zero
  4328  00073C                     	endif
  4329  00073C                     	if	0	;tblptru may be non-zero
  4330  00073C                     	endif
  4331  00073C  0008               	tblrd		*
  4332  00073E  50F5               	movf	tablat,w,c
  4333                           
  4334                           ; Switch size 1, requested type "simple"
  4335                           ; Number of cases is 1, Range of values is 48 to 48
  4336                           ; switch strategies available:
  4337                           ; Name         Instructions Cycles
  4338                           ; simple_byte            4     3 (average)
  4339                           ;	Chosen strategy is simple_byte
  4340  000740  0A30               	xorlw	48	; case 48
  4341  000742  B4D8               	btfsc	status,2,c
  4342  000744  EF95  F003         	goto	l9502
  4343  000748  EFA6  F003         	goto	l9508
  4344  00074C                     l9508:
  4345                           
  4346                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  4347  00074C  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4348  000750  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4349  000754                     	if	0	;tblptru may be non-zero
  4350  000754                     	endif
  4351  000754                     	if	0	;tblptru may be non-zero
  4352  000754                     	endif
  4353  000754  0008               	tblrd		*
  4354  000756  50F5               	movf	tablat,w,c
  4355  000758  EC09  F000         	call	_isdigit
  4356  00075C  A0D8               	btfss	status,0,c
  4357  00075E  EFB3  F003         	goto	u12781
  4358  000762  EFB5  F003         	goto	u12780
  4359  000766                     u12781:
  4360  000766  EFF3  F003         	goto	l9520
  4361  00076A                     u12780:
  4362  00076A                     
  4363                           ;doprnt.c: 615: width = 0;
  4364  00076A  0E00               	movlw	0
  4365  00076C  0101               	movlb	1	; () banked
  4366  00076E  6FF0               	movwf	(sprintf@width+1)& (0+255),b
  4367  000770  0E00               	movlw	0
  4368  000772  6FEF               	movwf	sprintf@width& (0+255),b
  4369  000774                     l9512:
  4370                           
  4371                           ;doprnt.c: 617: width *= 10;
  4372  000774  C1EF  F08A         	movff	sprintf@width,___wmul@multiplier
  4373  000778  C1F0  F08B         	movff	sprintf@width+1,___wmul@multiplier+1
  4374  00077C  0E00               	movlw	0
  4375  00077E  0100               	movlb	0	; () banked
  4376  000780  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4377  000782  0E0A               	movlw	10
  4378  000784  6F8C               	movwf	___wmul@multiplicand& (0+255),b
  4379  000786  ECEC  F03F         	call	___wmul	;wreg free
  4380  00078A  C08A  F1EF         	movff	?___wmul,sprintf@width
  4381  00078E  C08B  F1F0         	movff	?___wmul+1,sprintf@width+1
  4382  000792                     
  4383                           ;doprnt.c: 618: width += *f++ - '0';
  4384  000792  0ED0               	movlw	208
  4385  000794  0100               	movlb	0	; () banked
  4386  000796  6FDE               	movwf	??_sprintf& (0+255),b
  4387  000798  0EFF               	movlw	255
  4388  00079A  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  4389  00079C  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4390  0007A0  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4391  0007A4                     	if	0	;tblptru may be non-zero
  4392  0007A4                     	endif
  4393  0007A4                     	if	0	;tblptru may be non-zero
  4394  0007A4                     	endif
  4395  0007A4  0008               	tblrd		*
  4396  0007A6  50F5               	movf	tablat,w,c
  4397  0007A8  6FE0               	movwf	(??_sprintf+2)& (0+255),b
  4398  0007AA  6BE1               	clrf	(??_sprintf+3)& (0+255),b
  4399  0007AC  51DE               	movf	??_sprintf& (0+255),w,b
  4400  0007AE  27E0               	addwf	(??_sprintf+2)& (0+255),f,b
  4401  0007B0  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  4402  0007B2  23E1               	addwfc	(??_sprintf+3)& (0+255),f,b
  4403  0007B4  51E0               	movf	(??_sprintf+2)& (0+255),w,b
  4404  0007B6  0101               	movlb	1	; () banked
  4405  0007B8  27EF               	addwf	sprintf@width& (0+255),f,b
  4406  0007BA  0100               	movlb	0	; () banked
  4407  0007BC  51E1               	movf	(??_sprintf+3)& (0+255),w,b
  4408  0007BE  0101               	movlb	1	; () banked
  4409  0007C0  23F0               	addwfc	(sprintf@width+1)& (0+255),f,b
  4410  0007C2                     
  4411                           ; BSR set to: 1
  4412  0007C2  0100               	movlb	0	; () banked
  4413  0007C4  4BD8               	infsnz	sprintf@f& (0+255),f,b
  4414  0007C6  2BD9               	incf	(sprintf@f+1)& (0+255),f,b
  4415  0007C8                     
  4416                           ; BSR set to: 0
  4417                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  4418  0007C8  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4419  0007CC  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4420  0007D0                     	if	0	;tblptru may be non-zero
  4421  0007D0                     	endif
  4422  0007D0                     	if	0	;tblptru may be non-zero
  4423  0007D0                     	endif
  4424  0007D0  0008               	tblrd		*
  4425  0007D2  50F5               	movf	tablat,w,c
  4426  0007D4  EC09  F000         	call	_isdigit
  4427  0007D8  B0D8               	btfsc	status,0,c
  4428  0007DA  EFF1  F003         	goto	u12791
  4429  0007DE  EFF3  F003         	goto	u12790
  4430  0007E2                     u12791:
  4431  0007E2  EFBA  F003         	goto	l9512
  4432  0007E6                     u12790:
  4433  0007E6                     l9520:
  4434                           
  4435                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  4436  0007E6  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4437  0007EA  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4438  0007EE                     	if	0	;tblptru may be non-zero
  4439  0007EE                     	endif
  4440  0007EE                     	if	0	;tblptru may be non-zero
  4441  0007EE                     	endif
  4442  0007EE  0008               	tblrd		*
  4443  0007F0  50F5               	movf	tablat,w,c
  4444  0007F2  0A2E               	xorlw	46
  4445  0007F4  A4D8               	btfss	status,2,c
  4446  0007F6  EFFF  F003         	goto	u12801
  4447  0007FA  EF01  F004         	goto	u12800
  4448  0007FE                     u12801:
  4449  0007FE  EF48  F004         	goto	l9534
  4450  000802                     u12800:
  4451  000802                     
  4452                           ;doprnt.c: 629: flag |= 0x4000;
  4453  000802  0101               	movlb	1	; () banked
  4454  000804  8DEE               	bsf	(sprintf@flag+1)& (0+255),6,b
  4455                           
  4456                           ;doprnt.c: 630: f++;
  4457  000806  0100               	movlb	0	; () banked
  4458  000808  4BD8               	infsnz	sprintf@f& (0+255),f,b
  4459  00080A  2BD9               	incf	(sprintf@f+1)& (0+255),f,b
  4460  00080C                     
  4461                           ; BSR set to: 0
  4462                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  4463  00080C  0E00               	movlw	0
  4464  00080E  0101               	movlb	1	; () banked
  4465  000810  6FF6               	movwf	(sprintf@prec+1)& (0+255),b
  4466  000812  0E00               	movlw	0
  4467  000814  6FF5               	movwf	sprintf@prec& (0+255),b
  4468                           
  4469                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  4470  000816  EF37  F004         	goto	l9532
  4471  00081A                     l9526:
  4472                           
  4473                           ;doprnt.c: 647: prec *= 10;
  4474  00081A  C1F5  F08A         	movff	sprintf@prec,___wmul@multiplier
  4475  00081E  C1F6  F08B         	movff	sprintf@prec+1,___wmul@multiplier+1
  4476  000822  0E00               	movlw	0
  4477  000824  0100               	movlb	0	; () banked
  4478  000826  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4479  000828  0E0A               	movlw	10
  4480  00082A  6F8C               	movwf	___wmul@multiplicand& (0+255),b
  4481  00082C  ECEC  F03F         	call	___wmul	;wreg free
  4482  000830  C08A  F1F5         	movff	?___wmul,sprintf@prec
  4483  000834  C08B  F1F6         	movff	?___wmul+1,sprintf@prec+1
  4484  000838                     
  4485                           ;doprnt.c: 648: prec += *f++ - '0';
  4486  000838  0ED0               	movlw	208
  4487  00083A  0100               	movlb	0	; () banked
  4488  00083C  6FDE               	movwf	??_sprintf& (0+255),b
  4489  00083E  0EFF               	movlw	255
  4490  000840  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  4491  000842  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4492  000846  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4493  00084A                     	if	0	;tblptru may be non-zero
  4494  00084A                     	endif
  4495  00084A                     	if	0	;tblptru may be non-zero
  4496  00084A                     	endif
  4497  00084A  0008               	tblrd		*
  4498  00084C  50F5               	movf	tablat,w,c
  4499  00084E  6FE0               	movwf	(??_sprintf+2)& (0+255),b
  4500  000850  6BE1               	clrf	(??_sprintf+3)& (0+255),b
  4501  000852  51DE               	movf	??_sprintf& (0+255),w,b
  4502  000854  27E0               	addwf	(??_sprintf+2)& (0+255),f,b
  4503  000856  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  4504  000858  23E1               	addwfc	(??_sprintf+3)& (0+255),f,b
  4505  00085A  51E0               	movf	(??_sprintf+2)& (0+255),w,b
  4506  00085C  0101               	movlb	1	; () banked
  4507  00085E  27F5               	addwf	sprintf@prec& (0+255),f,b
  4508  000860  0100               	movlb	0	; () banked
  4509  000862  51E1               	movf	(??_sprintf+3)& (0+255),w,b
  4510  000864  0101               	movlb	1	; () banked
  4511  000866  23F6               	addwfc	(sprintf@prec+1)& (0+255),f,b
  4512  000868                     
  4513                           ; BSR set to: 1
  4514  000868  0100               	movlb	0	; () banked
  4515  00086A  4BD8               	infsnz	sprintf@f& (0+255),f,b
  4516  00086C  2BD9               	incf	(sprintf@f+1)& (0+255),f,b
  4517  00086E                     l9532:
  4518  00086E  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4519  000872  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4520  000876                     	if	0	;tblptru may be non-zero
  4521  000876                     	endif
  4522  000876                     	if	0	;tblptru may be non-zero
  4523  000876                     	endif
  4524  000876  0008               	tblrd		*
  4525  000878  50F5               	movf	tablat,w,c
  4526  00087A  EC09  F000         	call	_isdigit
  4527  00087E  B0D8               	btfsc	status,0,c
  4528  000880  EF44  F004         	goto	u12811
  4529  000884  EF46  F004         	goto	u12810
  4530  000888                     u12811:
  4531  000888  EF0D  F004         	goto	l9526
  4532  00088C                     u12810:
  4533  00088C  EF53  F004         	goto	l9542
  4534  000890                     l9534:
  4535                           
  4536                           ;doprnt.c: 652: prec = 0;
  4537  000890  0E00               	movlw	0
  4538  000892  0101               	movlb	1	; () banked
  4539  000894  6FF6               	movwf	(sprintf@prec+1)& (0+255),b
  4540  000896  0E00               	movlw	0
  4541  000898  6FF5               	movwf	sprintf@prec& (0+255),b
  4542  00089A                     
  4543                           ; BSR set to: 1
  4544                           ;doprnt.c: 654: flag |= 0x1000;
  4545  00089A  89EE               	bsf	(sprintf@flag+1)& (0+255),4,b
  4546  00089C  EF53  F004         	goto	l9542
  4547  0008A0                     l9538:
  4548                           
  4549                           ; BSR set to: 1
  4550                           ;doprnt.c: 689: flag |= 0x400;
  4551  0008A0  85EE               	bsf	(sprintf@flag+1)& (0+255),2,b
  4552                           
  4553                           ;doprnt.c: 690: break;
  4554  0008A2  EF71  F004         	goto	l9544
  4555  0008A6                     l9542:
  4556  0008A6  C0D8  FFF6         	movff	sprintf@f,tblptrl
  4557  0008AA  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  4558  0008AE  0100               	movlb	0	; () banked
  4559  0008B0  4BD8               	infsnz	sprintf@f& (0+255),f,b
  4560  0008B2  2BD9               	incf	(sprintf@f+1)& (0+255),f,b
  4561  0008B4                     	if	0	;tblptru may be non-zero
  4562  0008B4                     	endif
  4563  0008B4                     	if	0	;tblptru may be non-zero
  4564  0008B4                     	endif
  4565  0008B4  0008               	tblrd		*
  4566  0008B6  CFF5 F1F7          	movff	tablat,sprintf@c
  4567  0008BA  0101               	movlb	1	; () banked
  4568  0008BC  51F7               	movf	sprintf@c& (0+255),w,b
  4569                           
  4570                           ; Switch size 1, requested type "simple"
  4571                           ; Number of cases is 4, Range of values is 0 to 105
  4572                           ; switch strategies available:
  4573                           ; Name         Instructions Cycles
  4574                           ; simple_byte           13     7 (average)
  4575                           ;	Chosen strategy is simple_byte
  4576  0008BE  0A00               	xorlw	0	; case 0
  4577  0008C0  B4D8               	btfsc	status,2,c
  4578  0008C2  EF9A  F00A         	goto	l9822
  4579  0008C6  0A64               	xorlw	100	; case 100
  4580  0008C8  B4D8               	btfsc	status,2,c
  4581  0008CA  EF71  F004         	goto	l9544
  4582  0008CE  0A02               	xorlw	2	; case 102
  4583  0008D0  B4D8               	btfsc	status,2,c
  4584  0008D2  EF50  F004         	goto	l9538
  4585  0008D6  0A0F               	xorlw	15	; case 105
  4586  0008D8  B4D8               	btfsc	status,2,c
  4587  0008DA  EF71  F004         	goto	l9544
  4588  0008DE  EF87  F00A         	goto	l9820
  4589  0008E2                     l9544:
  4590                           
  4591                           ; BSR set to: 1
  4592                           ;doprnt.c: 851: if(flag & (0x700)) {
  4593  0008E2  0E07               	movlw	7
  4594  0008E4  15EE               	andwf	(sprintf@flag+1)& (0+255),w,b
  4595  0008E6  B4D8               	btfsc	status,2,c
  4596  0008E8  EF78  F004         	goto	u12821
  4597  0008EC  EF7A  F004         	goto	u12820
  4598  0008F0                     u12821:
  4599  0008F0  EFB4  F008         	goto	l9724
  4600  0008F4                     u12820:
  4601  0008F4                     
  4602                           ; BSR set to: 1
  4603                           ;doprnt.c: 853: if(flag & 0x1000)
  4604  0008F4  A9EE               	btfss	(sprintf@flag+1)& (0+255),4,b
  4605  0008F6  EF7F  F004         	goto	u12831
  4606  0008FA  EF81  F004         	goto	u12830
  4607  0008FE                     u12831:
  4608  0008FE  EF85  F004         	goto	l9550
  4609  000902                     u12830:
  4610  000902                     
  4611                           ; BSR set to: 1
  4612                           ;doprnt.c: 855: prec = 6;
  4613  000902  0E00               	movlw	0
  4614  000904  6FF6               	movwf	(sprintf@prec+1)& (0+255),b
  4615  000906  0E06               	movlw	6
  4616  000908  6FF5               	movwf	sprintf@prec& (0+255),b
  4617  00090A                     l9550:
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4621  00090A  C1E1  FFD9         	movff	sprintf@ap,fsr2l
  4622  00090E  C1E2  FFDA         	movff	sprintf@ap+1,fsr2h
  4623  000912  CFDE F1F1          	movff	postinc2,sprintf@fval
  4624  000916  CFDE F1F2          	movff	postinc2,sprintf@fval+1
  4625  00091A  CFDE F1F3          	movff	postinc2,sprintf@fval+2
  4626  00091E  CFDE F1F4          	movff	postinc2,sprintf@fval+3
  4627  000922                     
  4628                           ; BSR set to: 1
  4629  000922  0E04               	movlw	4
  4630  000924  27E1               	addwf	sprintf@ap& (0+255),f,b
  4631  000926  0E00               	movlw	0
  4632  000928  23E2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4633  00092A                     
  4634                           ; BSR set to: 1
  4635                           ;doprnt.c: 857: if(fval < 0.0) {
  4636  00092A  BFF4               	btfsc	(sprintf@fval+3)& (0+255),7,b
  4637  00092C  EF9C  F004         	goto	u12840
  4638  000930  EF9A  F004         	goto	u12841
  4639  000934                     u12841:
  4640  000934  EFB1  F004         	goto	l9560
  4641  000938                     u12840:
  4642  000938                     
  4643                           ; BSR set to: 1
  4644                           ;doprnt.c: 858: fval = -fval;
  4645  000938  C1F1  F08A         	movff	sprintf@fval,___flneg@f1
  4646  00093C  C1F2  F08B         	movff	sprintf@fval+1,___flneg@f1+1
  4647  000940  C1F3  F08C         	movff	sprintf@fval+2,___flneg@f1+2
  4648  000944  C1F4  F08D         	movff	sprintf@fval+3,___flneg@f1+3
  4649  000948  EC96  F03F         	call	___flneg	;wreg free
  4650  00094C  C08A  F1F1         	movff	?___flneg,sprintf@fval
  4651  000950  C08B  F1F2         	movff	?___flneg+1,sprintf@fval+1
  4652  000954  C08C  F1F3         	movff	?___flneg+2,sprintf@fval+2
  4653  000958  C08D  F1F4         	movff	?___flneg+3,sprintf@fval+3
  4654  00095C                     
  4655                           ;doprnt.c: 859: flag |= 0x03;
  4656  00095C  0E03               	movlw	3
  4657  00095E  0101               	movlb	1	; () banked
  4658  000960  13ED               	iorwf	sprintf@flag& (0+255),f,b
  4659  000962                     l9560:
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4663  000962  0E00               	movlw	0
  4664  000964  6FEC               	movwf	(sprintf@eexp+1)& (0+255),b
  4665  000966  0E00               	movlw	0
  4666  000968  6FEB               	movwf	sprintf@eexp& (0+255),b
  4667  00096A                     
  4668                           ; BSR set to: 1
  4669                           ;doprnt.c: 862: if( fval!=0) {
  4670  00096A  C1F1  F08A         	movff	sprintf@fval,___fleq@ff1
  4671  00096E  C1F2  F08B         	movff	sprintf@fval+1,___fleq@ff1+1
  4672  000972  C1F3  F08C         	movff	sprintf@fval+2,___fleq@ff1+2
  4673  000976  C1F4  F08D         	movff	sprintf@fval+3,___fleq@ff1+3
  4674  00097A  0E00               	movlw	0
  4675  00097C  0100               	movlb	0	; () banked
  4676  00097E  6F8E               	movwf	___fleq@ff2& (0+255),b
  4677  000980  0E00               	movlw	0
  4678  000982  6F8F               	movwf	(___fleq@ff2+1)& (0+255),b
  4679  000984  0E00               	movlw	0
  4680  000986  6F90               	movwf	(___fleq@ff2+2)& (0+255),b
  4681  000988  0E00               	movlw	0
  4682  00098A  6F91               	movwf	(___fleq@ff2+3)& (0+255),b
  4683  00098C  EC2C  F03A         	call	___fleq	;wreg free
  4684  000990  0100               	movlb	0	; () banked
  4685  000992  B0D8               	btfsc	status,0,c
  4686  000994  EFCE  F004         	goto	u12851
  4687  000998  EFD0  F004         	goto	u12850
  4688  00099C                     u12851:
  4689  00099C  EF68  F005         	goto	l9588
  4690  0009A0                     u12850:
  4691  0009A0                     
  4692                           ; BSR set to: 0
  4693                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  4694  0009A0  0101               	movlb	1	; () banked
  4695  0009A2  35F3               	rlcf	(sprintf@fval+2)& (0+255),w,b
  4696  0009A4  35F4               	rlcf	(sprintf@fval+3)& (0+255),w,b
  4697  0009A6  0F82               	addlw	130
  4698  0009A8  6FEB               	movwf	sprintf@eexp& (0+255),b
  4699  0009AA  6BEC               	clrf	(sprintf@eexp+1)& (0+255),b
  4700  0009AC  0EFF               	movlw	255
  4701  0009AE  23EC               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  4702  0009B0                     
  4703                           ; BSR set to: 1
  4704                           ;doprnt.c: 864: eexp--;
  4705  0009B0  07EB               	decf	sprintf@eexp& (0+255),f,b
  4706  0009B2  A0D8               	btfss	status,0,c
  4707  0009B4  07EC               	decf	(sprintf@eexp+1)& (0+255),f,b
  4708  0009B6                     
  4709                           ; BSR set to: 1
  4710                           ;doprnt.c: 865: eexp *= 3;
  4711  0009B6  C1EB  F08A         	movff	sprintf@eexp,___wmul@multiplier
  4712  0009BA  C1EC  F08B         	movff	sprintf@eexp+1,___wmul@multiplier+1
  4713  0009BE  0E00               	movlw	0
  4714  0009C0  0100               	movlb	0	; () banked
  4715  0009C2  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4716  0009C4  0E03               	movlw	3
  4717  0009C6  6F8C               	movwf	___wmul@multiplicand& (0+255),b
  4718  0009C8  ECEC  F03F         	call	___wmul	;wreg free
  4719  0009CC  C08A  F1EB         	movff	?___wmul,sprintf@eexp
  4720  0009D0  C08B  F1EC         	movff	?___wmul+1,sprintf@eexp+1
  4721  0009D4                     
  4722                           ;doprnt.c: 866: eexp /= 10;
  4723  0009D4  C1EB  F090         	movff	sprintf@eexp,___awdiv@dividend
  4724  0009D8  C1EC  F091         	movff	sprintf@eexp+1,___awdiv@dividend+1
  4725  0009DC  0E00               	movlw	0
  4726  0009DE  0100               	movlb	0	; () banked
  4727  0009E0  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  4728  0009E2  0E0A               	movlw	10
  4729  0009E4  6F92               	movwf	___awdiv@divisor& (0+255),b
  4730  0009E6  EC46  F037         	call	___awdiv	;wreg free
  4731  0009EA  C090  F1EB         	movff	?___awdiv,sprintf@eexp
  4732  0009EE  C091  F1EC         	movff	?___awdiv+1,sprintf@eexp+1
  4733  0009F2                     
  4734                           ;doprnt.c: 867: if(eexp < 0)
  4735  0009F2  0101               	movlb	1	; () banked
  4736  0009F4  BFEC               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4737  0009F6  EF01  F005         	goto	u12860
  4738  0009FA  EFFF  F004         	goto	u12861
  4739  0009FE                     u12861:
  4740  0009FE  EF04  F005         	goto	l9576
  4741  000A02                     u12860:
  4742  000A02                     
  4743                           ; BSR set to: 1
  4744                           ;doprnt.c: 868: eexp--;
  4745  000A02  07EB               	decf	sprintf@eexp& (0+255),f,b
  4746  000A04  A0D8               	btfss	status,0,c
  4747  000A06  07EC               	decf	(sprintf@eexp+1)& (0+255),f,b
  4748  000A08                     l9576:
  4749                           
  4750                           ; BSR set to: 1
  4751                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4752  000A08  51EB               	movf	sprintf@eexp& (0+255),w,b
  4753  000A0A  0800               	sublw	0
  4754  000A0C  ECCE  F01C         	call	_scale
  4755  000A10  C0B1  F1E3         	movff	?_scale,sprintf@tmpval
  4756  000A14  C0B2  F1E4         	movff	?_scale+1,sprintf@tmpval+1
  4757  000A18  C0B3  F1E5         	movff	?_scale+2,sprintf@tmpval+2
  4758  000A1C  C0B4  F1E6         	movff	?_scale+3,sprintf@tmpval+3
  4759  000A20                     
  4760                           ;doprnt.c: 873: tmpval.integ *= fval;
  4761  000A20  C1E3  F098         	movff	sprintf@tmpval,___flmul@b
  4762  000A24  C1E4  F099         	movff	sprintf@tmpval+1,___flmul@b+1
  4763  000A28  C1E5  F09A         	movff	sprintf@tmpval+2,___flmul@b+2
  4764  000A2C  C1E6  F09B         	movff	sprintf@tmpval+3,___flmul@b+3
  4765  000A30  C1F1  F09C         	movff	sprintf@fval,___flmul@a
  4766  000A34  C1F2  F09D         	movff	sprintf@fval+1,___flmul@a+1
  4767  000A38  C1F3  F09E         	movff	sprintf@fval+2,___flmul@a+2
  4768  000A3C  C1F4  F09F         	movff	sprintf@fval+3,___flmul@a+3
  4769  000A40  ECA3  F018         	call	___flmul	;wreg free
  4770  000A44  C098  F1E3         	movff	?___flmul,sprintf@tmpval
  4771  000A48  C099  F1E4         	movff	?___flmul+1,sprintf@tmpval+1
  4772  000A4C  C09A  F1E5         	movff	?___flmul+2,sprintf@tmpval+2
  4773  000A50  C09B  F1E6         	movff	?___flmul+3,sprintf@tmpval+3
  4774  000A54                     
  4775                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4776  000A54  C1E3  F08A         	movff	sprintf@tmpval,___flge@ff1
  4777  000A58  C1E4  F08B         	movff	sprintf@tmpval+1,___flge@ff1+1
  4778  000A5C  C1E5  F08C         	movff	sprintf@tmpval+2,___flge@ff1+2
  4779  000A60  C1E6  F08D         	movff	sprintf@tmpval+3,___flge@ff1+3
  4780  000A64  0E00               	movlw	0
  4781  000A66  0100               	movlb	0	; () banked
  4782  000A68  6F8E               	movwf	___flge@ff2& (0+255),b
  4783  000A6A  0E00               	movlw	0
  4784  000A6C  6F8F               	movwf	(___flge@ff2+1)& (0+255),b
  4785  000A6E  0E80               	movlw	128
  4786  000A70  6F90               	movwf	(___flge@ff2+2)& (0+255),b
  4787  000A72  0E3F               	movlw	63
  4788  000A74  6F91               	movwf	(___flge@ff2+3)& (0+255),b
  4789  000A76  ECC4  F034         	call	___flge	;wreg free
  4790  000A7A  0100               	movlb	0	; () banked
  4791  000A7C  B0D8               	btfsc	status,0,c
  4792  000A7E  EF43  F005         	goto	u12871
  4793  000A82  EF45  F005         	goto	u12870
  4794  000A86                     u12871:
  4795  000A86  EF4B  F005         	goto	l9584
  4796  000A8A                     u12870:
  4797  000A8A                     
  4798                           ; BSR set to: 0
  4799                           ;doprnt.c: 875: eexp--;
  4800  000A8A  0101               	movlb	1	; () banked
  4801  000A8C  07EB               	decf	sprintf@eexp& (0+255),f,b
  4802  000A8E  A0D8               	btfss	status,0,c
  4803  000A90  07EC               	decf	(sprintf@eexp+1)& (0+255),f,b
  4804  000A92  EF68  F005         	goto	l9588
  4805  000A96                     l9584:
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4809  000A96  C1E3  F08A         	movff	sprintf@tmpval,___flge@ff1
  4810  000A9A  C1E4  F08B         	movff	sprintf@tmpval+1,___flge@ff1+1
  4811  000A9E  C1E5  F08C         	movff	sprintf@tmpval+2,___flge@ff1+2
  4812  000AA2  C1E6  F08D         	movff	sprintf@tmpval+3,___flge@ff1+3
  4813  000AA6  0E00               	movlw	0
  4814  000AA8  6F8E               	movwf	___flge@ff2& (0+255),b
  4815  000AAA  0E00               	movlw	0
  4816  000AAC  6F8F               	movwf	(___flge@ff2+1)& (0+255),b
  4817  000AAE  0E20               	movlw	32
  4818  000AB0  6F90               	movwf	(___flge@ff2+2)& (0+255),b
  4819  000AB2  0E41               	movlw	65
  4820  000AB4  6F91               	movwf	(___flge@ff2+3)& (0+255),b
  4821  000AB6  ECC4  F034         	call	___flge	;wreg free
  4822  000ABA  0100               	movlb	0	; () banked
  4823  000ABC  A0D8               	btfss	status,0,c
  4824  000ABE  EF63  F005         	goto	u12881
  4825  000AC2  EF65  F005         	goto	u12880
  4826  000AC6                     u12881:
  4827  000AC6  EF68  F005         	goto	l9588
  4828  000ACA                     u12880:
  4829  000ACA                     
  4830                           ; BSR set to: 0
  4831                           ;doprnt.c: 877: eexp++;
  4832  000ACA  0101               	movlb	1	; () banked
  4833  000ACC  4BEB               	infsnz	sprintf@eexp& (0+255),f,b
  4834  000ACE  2BEC               	incf	(sprintf@eexp+1)& (0+255),f,b
  4835  000AD0                     l9588:
  4836                           
  4837                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  4838  000AD0  0101               	movlb	1	; () banked
  4839  000AD2  BFF6               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4840  000AD4  EF77  F005         	goto	u12890
  4841  000AD8  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  4842  000ADA  E107               	bnz	u12891
  4843  000ADC  0E0D               	movlw	13
  4844  000ADE  5DF5               	subwf	sprintf@prec& (0+255),w,b
  4845  000AE0  B0D8               	btfsc	status,0,c
  4846  000AE2  EF75  F005         	goto	u12891
  4847  000AE6  EF77  F005         	goto	u12890
  4848  000AEA                     u12891:
  4849  000AEA  EF94  F005         	goto	l9592
  4850  000AEE                     u12890:
  4851  000AEE                     
  4852                           ; BSR set to: 1
  4853                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4854  000AEE  C1F1  F0BE         	movff	sprintf@fval,___fladd@b
  4855  000AF2  C1F2  F0BF         	movff	sprintf@fval+1,___fladd@b+1
  4856  000AF6  C1F3  F0C0         	movff	sprintf@fval+2,___fladd@b+2
  4857  000AFA  C1F4  F0C1         	movff	sprintf@fval+3,___fladd@b+3
  4858  000AFE  51F5               	movf	sprintf@prec& (0+255),w,b
  4859  000B00  EC19  F028         	call	_fround
  4860  000B04  C0B1  F0C2         	movff	?_fround,___fladd@a
  4861  000B08  C0B2  F0C3         	movff	?_fround+1,___fladd@a+1
  4862  000B0C  C0B3  F0C4         	movff	?_fround+2,___fladd@a+2
  4863  000B10  C0B4  F0C5         	movff	?_fround+3,___fladd@a+3
  4864  000B14  ECE2  F013         	call	___fladd	;wreg free
  4865  000B18  C0BE  F1F1         	movff	?___fladd,sprintf@fval
  4866  000B1C  C0BF  F1F2         	movff	?___fladd+1,sprintf@fval+1
  4867  000B20  C0C0  F1F3         	movff	?___fladd+2,sprintf@fval+2
  4868  000B24  C0C1  F1F4         	movff	?___fladd+3,sprintf@fval+3
  4869  000B28                     l9592:
  4870                           
  4871                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4872  000B28  0101               	movlb	1	; () banked
  4873  000B2A  BFEC               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4874  000B2C  EFA3  F005         	goto	u12900
  4875  000B30  51EC               	movf	(sprintf@eexp+1)& (0+255),w,b
  4876  000B32  E107               	bnz	u12901
  4877  000B34  0E0A               	movlw	10
  4878  000B36  5DEB               	subwf	sprintf@eexp& (0+255),w,b
  4879  000B38  B0D8               	btfsc	status,0,c
  4880  000B3A  EFA1  F005         	goto	u12901
  4881  000B3E  EFA3  F005         	goto	u12900
  4882  000B42                     u12901:
  4883  000B42  EFE3  F005         	goto	l9600
  4884  000B46                     u12900:
  4885  000B46                     
  4886                           ; BSR set to: 1
  4887  000B46  C1F1  F08A         	movff	sprintf@fval,___fleq@ff1
  4888  000B4A  C1F2  F08B         	movff	sprintf@fval+1,___fleq@ff1+1
  4889  000B4E  C1F3  F08C         	movff	sprintf@fval+2,___fleq@ff1+2
  4890  000B52  C1F4  F08D         	movff	sprintf@fval+3,___fleq@ff1+3
  4891  000B56  0E00               	movlw	0
  4892  000B58  0100               	movlb	0	; () banked
  4893  000B5A  6F8E               	movwf	___fleq@ff2& (0+255),b
  4894  000B5C  0E00               	movlw	0
  4895  000B5E  6F8F               	movwf	(___fleq@ff2+1)& (0+255),b
  4896  000B60  0E00               	movlw	0
  4897  000B62  6F90               	movwf	(___fleq@ff2+2)& (0+255),b
  4898  000B64  0E00               	movlw	0
  4899  000B66  6F91               	movwf	(___fleq@ff2+3)& (0+255),b
  4900  000B68  EC2C  F03A         	call	___fleq	;wreg free
  4901  000B6C  0100               	movlb	0	; () banked
  4902  000B6E  B0D8               	btfsc	status,0,c
  4903  000B70  EFBC  F005         	goto	u12911
  4904  000B74  EFBE  F005         	goto	u12910
  4905  000B78                     u12911:
  4906  000B78  EF3A  F006         	goto	l9614
  4907  000B7C                     u12910:
  4908  000B7C                     
  4909                           ; BSR set to: 0
  4910  000B7C  C1F1  F0BA         	movff	sprintf@fval,___fltol@f1
  4911  000B80  C1F2  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  4912  000B84  C1F3  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  4913  000B88  C1F4  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  4914  000B8C  EC40  F034         	call	___fltol	;wreg free
  4915  000B90  0100               	movlb	0	; () banked
  4916  000B92  51BA               	movf	?___fltol& (0+255),w,b
  4917  000B94  11BB               	iorwf	(?___fltol+1)& (0+255),w,b
  4918  000B96  11BC               	iorwf	(?___fltol+2)& (0+255),w,b
  4919  000B98  11BD               	iorwf	(?___fltol+3)& (0+255),w,b
  4920  000B9A  A4D8               	btfss	status,2,c
  4921  000B9C  EFD2  F005         	goto	u12921
  4922  000BA0  EFD4  F005         	goto	u12920
  4923  000BA4                     u12921:
  4924  000BA4  EF3A  F006         	goto	l9614
  4925  000BA8                     u12920:
  4926  000BA8                     
  4927                           ; BSR set to: 0
  4928  000BA8  0101               	movlb	1	; () banked
  4929  000BAA  BFEC               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4930  000BAC  EFE1  F005         	goto	u12931
  4931  000BB0  51EC               	movf	(sprintf@eexp+1)& (0+255),w,b
  4932  000BB2  E109               	bnz	u12930
  4933  000BB4  0E02               	movlw	2
  4934  000BB6  5DEB               	subwf	sprintf@eexp& (0+255),w,b
  4935  000BB8  A0D8               	btfss	status,0,c
  4936  000BBA  EFE1  F005         	goto	u12931
  4937  000BBE  EFE3  F005         	goto	u12930
  4938  000BC2                     u12931:
  4939  000BC2  EF3A  F006         	goto	l9614
  4940  000BC6                     u12930:
  4941  000BC6                     l9600:
  4942                           
  4943                           ; BSR set to: 1
  4944                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4945  000BC6  C1E3  F08A         	movff	sprintf@tmpval,___flge@ff1
  4946  000BCA  C1E4  F08B         	movff	sprintf@tmpval+1,___flge@ff1+1
  4947  000BCE  C1E5  F08C         	movff	sprintf@tmpval+2,___flge@ff1+2
  4948  000BD2  C1E6  F08D         	movff	sprintf@tmpval+3,___flge@ff1+3
  4949  000BD6  0E5F               	movlw	95
  4950  000BD8  0100               	movlb	0	; () banked
  4951  000BDA  6F8E               	movwf	___flge@ff2& (0+255),b
  4952  000BDC  0E70               	movlw	112
  4953  000BDE  6F8F               	movwf	(___flge@ff2+1)& (0+255),b
  4954  000BE0  0E89               	movlw	137
  4955  000BE2  6F90               	movwf	(___flge@ff2+2)& (0+255),b
  4956  000BE4  0E40               	movlw	64
  4957  000BE6  6F91               	movwf	(___flge@ff2+3)& (0+255),b
  4958  000BE8  ECC4  F034         	call	___flge	;wreg free
  4959  000BEC  0100               	movlb	0	; () banked
  4960  000BEE  B0D8               	btfsc	status,0,c
  4961  000BF0  EFFC  F005         	goto	u12941
  4962  000BF4  EFFE  F005         	goto	u12940
  4963  000BF8                     u12941:
  4964  000BF8  EF05  F006         	goto	l9604
  4965  000BFC                     u12940:
  4966  000BFC                     
  4967                           ; BSR set to: 0
  4968                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4969  000BFC  0101               	movlb	1	; () banked
  4970  000BFE  0EF7               	movlw	247
  4971  000C00  27EB               	addwf	sprintf@eexp& (0+255),f,b
  4972  000C02  0EFF               	movlw	255
  4973  000C04  23EC               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  4974                           
  4975                           ;doprnt.c: 1148: }else{
  4976  000C06  EF0A  F006         	goto	l9606
  4977  000C0A                     l9604:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4981  000C0A  0101               	movlb	1	; () banked
  4982  000C0C  0EF8               	movlw	248
  4983  000C0E  27EB               	addwf	sprintf@eexp& (0+255),f,b
  4984  000C10  0EFF               	movlw	255
  4985  000C12  23EC               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  4986  000C14                     l9606:
  4987                           
  4988                           ; BSR set to: 1
  4989                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4990  000C14  51EB               	movf	sprintf@eexp& (0+255),w,b
  4991  000C16  ECCE  F01C         	call	_scale
  4992  000C1A  C0B1  F1E3         	movff	?_scale,sprintf@tmpval
  4993  000C1E  C0B2  F1E4         	movff	?_scale+1,sprintf@tmpval+1
  4994  000C22  C0B3  F1E5         	movff	?_scale+2,sprintf@tmpval+2
  4995  000C26  C0B4  F1E6         	movff	?_scale+3,sprintf@tmpval+3
  4996  000C2A  C1F1  F08A         	movff	sprintf@fval,__div_to_l_@f1
  4997  000C2E  C1F2  F08B         	movff	sprintf@fval+1,__div_to_l_@f1+1
  4998  000C32  C1F3  F08C         	movff	sprintf@fval+2,__div_to_l_@f1+2
  4999  000C36  C1F4  F08D         	movff	sprintf@fval+3,__div_to_l_@f1+3
  5000  000C3A  C1E3  F08E         	movff	sprintf@tmpval,__div_to_l_@f2
  5001  000C3E  C1E4  F08F         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  5002  000C42  C1E5  F090         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  5003  000C46  C1E6  F091         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  5004  000C4A  EC68  F02F         	call	__div_to_l_	;wreg free
  5005  000C4E  C08A  F1E7         	movff	?__div_to_l_,sprintf@val
  5006  000C52  C08B  F1E8         	movff	?__div_to_l_+1,sprintf@val+1
  5007  000C56  C08C  F1E9         	movff	?__div_to_l_+2,sprintf@val+2
  5008  000C5A  C08D  F1EA         	movff	?__div_to_l_+3,sprintf@val+3
  5009  000C5E                     
  5010                           ;doprnt.c: 1155: fval = 0.0;
  5011  000C5E  0E00               	movlw	0
  5012  000C60  0101               	movlb	1	; () banked
  5013  000C62  6FF1               	movwf	sprintf@fval& (0+255),b
  5014  000C64  0E00               	movlw	0
  5015  000C66  6FF2               	movwf	(sprintf@fval+1)& (0+255),b
  5016  000C68  0E00               	movlw	0
  5017  000C6A  6FF3               	movwf	(sprintf@fval+2)& (0+255),b
  5018  000C6C  0E00               	movlw	0
  5019  000C6E  6FF4               	movwf	(sprintf@fval+3)& (0+255),b
  5020                           
  5021                           ;doprnt.c: 1156: } else {
  5022  000C70  EF76  F006         	goto	l9618
  5023  000C74                     l9614:
  5024                           
  5025                           ;doprnt.c: 1157: val = (unsigned long)fval;
  5026  000C74  C1F1  F0BA         	movff	sprintf@fval,___fltol@f1
  5027  000C78  C1F2  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  5028  000C7C  C1F3  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  5029  000C80  C1F4  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  5030  000C84  EC40  F034         	call	___fltol	;wreg free
  5031  000C88  C0BA  F1E7         	movff	?___fltol,sprintf@val
  5032  000C8C  C0BB  F1E8         	movff	?___fltol+1,sprintf@val+1
  5033  000C90  C0BC  F1E9         	movff	?___fltol+2,sprintf@val+2
  5034  000C94  C0BD  F1EA         	movff	?___fltol+3,sprintf@val+3
  5035                           
  5036                           ;doprnt.c: 1158: fval -= (double)val;
  5037  000C98  C1F1  F0CE         	movff	sprintf@fval,___flsub@b
  5038  000C9C  C1F2  F0CF         	movff	sprintf@fval+1,___flsub@b+1
  5039  000CA0  C1F3  F0D0         	movff	sprintf@fval+2,___flsub@b+2
  5040  000CA4  C1F4  F0D1         	movff	sprintf@fval+3,___flsub@b+3
  5041  000CA8  C1E7  F08A         	movff	sprintf@val,___xxtofl@val
  5042  000CAC  C1E8  F08B         	movff	sprintf@val+1,___xxtofl@val+1
  5043  000CB0  C1E9  F08C         	movff	sprintf@val+2,___xxtofl@val+2
  5044  000CB4  C1EA  F08D         	movff	sprintf@val+3,___xxtofl@val+3
  5045  000CB8  0E00               	movlw	0
  5046  000CBA  ECB4  F02B         	call	___xxtofl
  5047  000CBE  C08A  F0D2         	movff	?___xxtofl,___flsub@a
  5048  000CC2  C08B  F0D3         	movff	?___xxtofl+1,___flsub@a+1
  5049  000CC6  C08C  F0D4         	movff	?___xxtofl+2,___flsub@a+2
  5050  000CCA  C08D  F0D5         	movff	?___xxtofl+3,___flsub@a+3
  5051  000CCE  EC4F  F03F         	call	___flsub	;wreg free
  5052  000CD2  C0CE  F1F1         	movff	?___flsub,sprintf@fval
  5053  000CD6  C0CF  F1F2         	movff	?___flsub+1,sprintf@fval+1
  5054  000CDA  C0D0  F1F3         	movff	?___flsub+2,sprintf@fval+2
  5055  000CDE  C0D1  F1F4         	movff	?___flsub+3,sprintf@fval+3
  5056  000CE2                     
  5057                           ;doprnt.c: 1159: eexp = 0;
  5058  000CE2  0E00               	movlw	0
  5059  000CE4  0101               	movlb	1	; () banked
  5060  000CE6  6FEC               	movwf	(sprintf@eexp+1)& (0+255),b
  5061  000CE8  0E00               	movlw	0
  5062  000CEA  6FEB               	movwf	sprintf@eexp& (0+255),b
  5063  000CEC                     l9618:
  5064                           
  5065                           ; BSR set to: 1
  5066                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  5067  000CEC  0E01               	movlw	1
  5068  000CEE  6FF7               	movwf	sprintf@c& (0+255),b
  5069  000CF0                     l9624:
  5070                           
  5071                           ; BSR set to: 1
  5072                           ;doprnt.c: 1163: if(val < dpowers[c])
  5073  000CF0  51F7               	movf	sprintf@c& (0+255),w,b
  5074  000CF2  0D04               	mullw	4
  5075  000CF4  0E6D               	movlw	low _dpowers
  5076  000CF6  24F3               	addwf	243,w,c
  5077  000CF8  6EF6               	movwf	tblptrl,c
  5078  000CFA  0E06               	movlw	high _dpowers
  5079  000CFC  20F4               	addwfc	244,w,c
  5080  000CFE  6EF7               	movwf	tblptrh,c
  5081  000D00                     	if	0	;There are less than 3 active tblptr bytes
  5082  000D00                     	endif
  5083  000D00  0009               	tblrd		*+
  5084  000D02  50F5               	movf	tablat,w,c
  5085  000D04  5DE7               	subwf	sprintf@val& (0+255),w,b
  5086  000D06  0009               	tblrd		*+
  5087  000D08  50F5               	movf	tablat,w,c
  5088  000D0A  59E8               	subwfb	(sprintf@val+1)& (0+255),w,b
  5089  000D0C  0009               	tblrd		*+
  5090  000D0E  50F5               	movf	tablat,w,c
  5091  000D10  59E9               	subwfb	(sprintf@val+2)& (0+255),w,b
  5092  000D12  0009               	tblrd		*+
  5093  000D14  50F5               	movf	tablat,w,c
  5094  000D16  59EA               	subwfb	(sprintf@val+3)& (0+255),w,b
  5095  000D18  B0D8               	btfsc	status,0,c
  5096  000D1A  EF91  F006         	goto	u12951
  5097  000D1E  EF93  F006         	goto	u12950
  5098  000D22                     u12951:
  5099  000D22  EF95  F006         	goto	l9628
  5100  000D26                     u12950:
  5101  000D26  EF9F  F006         	goto	l9632
  5102  000D2A                     l9628:
  5103                           
  5104                           ; BSR set to: 1
  5105  000D2A  2BF7               	incf	sprintf@c& (0+255),f,b
  5106  000D2C                     
  5107                           ; BSR set to: 1
  5108  000D2C  0E0A               	movlw	10
  5109  000D2E  19F7               	xorwf	sprintf@c& (0+255),w,b
  5110  000D30  A4D8               	btfss	status,2,c
  5111  000D32  EF9D  F006         	goto	u12961
  5112  000D36  EF9F  F006         	goto	u12960
  5113  000D3A                     u12961:
  5114  000D3A  EF78  F006         	goto	l9624
  5115  000D3E                     u12960:
  5116  000D3E                     l9632:
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;doprnt.c: 1168: width -= prec + c + eexp;
  5120  000D3E  51F7               	movf	sprintf@c& (0+255),w,b
  5121  000D40  25F5               	addwf	sprintf@prec& (0+255),w,b
  5122  000D42  0100               	movlb	0	; () banked
  5123  000D44  6FDE               	movwf	??_sprintf& (0+255),b
  5124  000D46  0E00               	movlw	0
  5125  000D48  0101               	movlb	1	; () banked
  5126  000D4A  21F6               	addwfc	(sprintf@prec+1)& (0+255),w,b
  5127  000D4C  0100               	movlb	0	; () banked
  5128  000D4E  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  5129  000D50  0101               	movlb	1	; () banked
  5130  000D52  51EB               	movf	sprintf@eexp& (0+255),w,b
  5131  000D54  0100               	movlb	0	; () banked
  5132  000D56  27DE               	addwf	??_sprintf& (0+255),f,b
  5133  000D58  0101               	movlb	1	; () banked
  5134  000D5A  51EC               	movf	(sprintf@eexp+1)& (0+255),w,b
  5135  000D5C  0100               	movlb	0	; () banked
  5136  000D5E  23DF               	addwfc	(??_sprintf+1)& (0+255),f,b
  5137  000D60  51DE               	movf	??_sprintf& (0+255),w,b
  5138  000D62  0101               	movlb	1	; () banked
  5139  000D64  5FEF               	subwf	sprintf@width& (0+255),f,b
  5140  000D66  0100               	movlb	0	; () banked
  5141  000D68  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  5142  000D6A  0101               	movlb	1	; () banked
  5143  000D6C  5BF0               	subwfb	(sprintf@width+1)& (0+255),f,b
  5144                           
  5145                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  5146  000D6E  51F5               	movf	sprintf@prec& (0+255),w,b
  5147  000D70  11F6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5148  000D72  B4D8               	btfsc	status,2,c
  5149  000D74  EFBE  F006         	goto	u12971
  5150  000D78  EFC0  F006         	goto	u12970
  5151  000D7C                     u12971:
  5152  000D7C  EFC3  F006         	goto	l9636
  5153  000D80                     u12970:
  5154  000D80                     
  5155                           ; BSR set to: 1
  5156                           ;doprnt.c: 1174: width--;
  5157  000D80  07EF               	decf	sprintf@width& (0+255),f,b
  5158  000D82  A0D8               	btfss	status,0,c
  5159  000D84  07F0               	decf	(sprintf@width+1)& (0+255),f,b
  5160  000D86                     l9636:
  5161                           
  5162                           ; BSR set to: 1
  5163                           ;doprnt.c: 1175: if(flag & 0x03)
  5164  000D86  0E03               	movlw	3
  5165  000D88  15ED               	andwf	sprintf@flag& (0+255),w,b
  5166  000D8A  0100               	movlb	0	; () banked
  5167  000D8C  6FDE               	movwf	??_sprintf& (0+255),b
  5168  000D8E  0E00               	movlw	0
  5169  000D90  0101               	movlb	1	; () banked
  5170  000D92  15EE               	andwf	(sprintf@flag+1)& (0+255),w,b
  5171  000D94  0100               	movlb	0	; () banked
  5172  000D96  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  5173  000D98  51DE               	movf	??_sprintf& (0+255),w,b
  5174  000D9A  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  5175  000D9C  B4D8               	btfsc	status,2,c
  5176  000D9E  EFD3  F006         	goto	u12981
  5177  000DA2  EFD5  F006         	goto	u12980
  5178  000DA6                     u12981:
  5179  000DA6  EFD9  F006         	goto	l9640
  5180  000DAA                     u12980:
  5181  000DAA                     
  5182                           ; BSR set to: 0
  5183                           ;doprnt.c: 1176: width--;
  5184  000DAA  0101               	movlb	1	; () banked
  5185  000DAC  07EF               	decf	sprintf@width& (0+255),f,b
  5186  000DAE  A0D8               	btfss	status,0,c
  5187  000DB0  07F0               	decf	(sprintf@width+1)& (0+255),f,b
  5188  000DB2                     l9640:
  5189                           
  5190                           ;doprnt.c: 1179: if(flag & 0x04) {
  5191  000DB2  0101               	movlb	1	; () banked
  5192  000DB4  A5ED               	btfss	sprintf@flag& (0+255),2,b
  5193  000DB6  EFDF  F006         	goto	u12991
  5194  000DBA  EFE1  F006         	goto	u12990
  5195  000DBE                     u12991:
  5196  000DBE  EF27  F007         	goto	l9662
  5197  000DC2                     u12990:
  5198  000DC2                     
  5199                           ; BSR set to: 1
  5200                           ;doprnt.c: 1183: if(flag & 0x03)
  5201  000DC2  0E03               	movlw	3
  5202  000DC4  15ED               	andwf	sprintf@flag& (0+255),w,b
  5203  000DC6  0100               	movlb	0	; () banked
  5204  000DC8  6FDE               	movwf	??_sprintf& (0+255),b
  5205  000DCA  0E00               	movlw	0
  5206  000DCC  0101               	movlb	1	; () banked
  5207  000DCE  15EE               	andwf	(sprintf@flag+1)& (0+255),w,b
  5208  000DD0  0100               	movlb	0	; () banked
  5209  000DD2  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  5210  000DD4  51DE               	movf	??_sprintf& (0+255),w,b
  5211  000DD6  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  5212  000DD8  B4D8               	btfsc	status,2,c
  5213  000DDA  EFF1  F006         	goto	u13001
  5214  000DDE  EFF3  F006         	goto	u13000
  5215  000DE2                     u13001:
  5216  000DE2  EF0A  F007         	goto	l9654
  5217  000DE6                     u13000:
  5218  000DE6                     
  5219                           ; BSR set to: 0
  5220                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  5221  000DE6  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5222  000DEA  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5223  000DEE  0E2D               	movlw	45
  5224  000DF0  6EDF               	movwf	indf2,c
  5225  000DF2                     
  5226                           ; BSR set to: 0
  5227  000DF2  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5228  000DF4  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5229  000DF6  EF0A  F007         	goto	l9654
  5230  000DFA                     l9648:
  5231                           
  5232                           ; BSR set to: 1
  5233                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  5234  000DFA  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5235  000DFE  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5236  000E02  0E30               	movlw	48
  5237  000E04  6EDF               	movwf	indf2,c
  5238  000E06                     
  5239                           ; BSR set to: 1
  5240  000E06  0100               	movlb	0	; () banked
  5241  000E08  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5242  000E0A  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5243  000E0C                     
  5244                           ; BSR set to: 0
  5245                           ;doprnt.c: 1196: width--;
  5246  000E0C  0101               	movlb	1	; () banked
  5247  000E0E  07EF               	decf	sprintf@width& (0+255),f,b
  5248  000E10  A0D8               	btfss	status,0,c
  5249  000E12  07F0               	decf	(sprintf@width+1)& (0+255),f,b
  5250  000E14                     l9654:
  5251  000E14  0101               	movlb	1	; () banked
  5252  000E16  BFF0               	btfsc	(sprintf@width+1)& (0+255),7,b
  5253  000E18  EF18  F007         	goto	u13010
  5254  000E1C  51F0               	movf	(sprintf@width+1)& (0+255),w,b
  5255  000E1E  E106               	bnz	u13011
  5256  000E20  05EF               	decf	sprintf@width& (0+255),w,b
  5257  000E22  B0D8               	btfsc	status,0,c
  5258  000E24  EF16  F007         	goto	u13011
  5259  000E28  EF18  F007         	goto	u13010
  5260  000E2C                     u13011:
  5261  000E2C  EFFD  F006         	goto	l9648
  5262  000E30                     u13010:
  5263  000E30  EF9C  F007         	goto	l9678
  5264  000E34                     l9656:
  5265                           
  5266                           ; BSR set to: 1
  5267                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  5268  000E34  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5269  000E38  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5270  000E3C  0E20               	movlw	32
  5271  000E3E  6EDF               	movwf	indf2,c
  5272  000E40                     
  5273                           ; BSR set to: 1
  5274  000E40  0100               	movlb	0	; () banked
  5275  000E42  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5276  000E44  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5277  000E46                     
  5278                           ; BSR set to: 0
  5279                           ;doprnt.c: 1208: width--;
  5280  000E46  0101               	movlb	1	; () banked
  5281  000E48  07EF               	decf	sprintf@width& (0+255),f,b
  5282  000E4A  A0D8               	btfss	status,0,c
  5283  000E4C  07F0               	decf	(sprintf@width+1)& (0+255),f,b
  5284  000E4E                     l9662:
  5285                           
  5286                           ; BSR set to: 1
  5287  000E4E  BFF0               	btfsc	(sprintf@width+1)& (0+255),7,b
  5288  000E50  EF34  F007         	goto	u13020
  5289  000E54  51F0               	movf	(sprintf@width+1)& (0+255),w,b
  5290  000E56  E106               	bnz	u13021
  5291  000E58  05EF               	decf	sprintf@width& (0+255),w,b
  5292  000E5A  B0D8               	btfsc	status,0,c
  5293  000E5C  EF32  F007         	goto	u13021
  5294  000E60  EF34  F007         	goto	u13020
  5295  000E64                     u13021:
  5296  000E64  EF1A  F007         	goto	l9656
  5297  000E68                     u13020:
  5298  000E68                     
  5299                           ; BSR set to: 1
  5300                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  5301  000E68  0E03               	movlw	3
  5302  000E6A  15ED               	andwf	sprintf@flag& (0+255),w,b
  5303  000E6C  0100               	movlb	0	; () banked
  5304  000E6E  6FDE               	movwf	??_sprintf& (0+255),b
  5305  000E70  0E00               	movlw	0
  5306  000E72  0101               	movlb	1	; () banked
  5307  000E74  15EE               	andwf	(sprintf@flag+1)& (0+255),w,b
  5308  000E76  0100               	movlb	0	; () banked
  5309  000E78  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  5310  000E7A  51DE               	movf	??_sprintf& (0+255),w,b
  5311  000E7C  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  5312  000E7E  B4D8               	btfsc	status,2,c
  5313  000E80  EF44  F007         	goto	u13031
  5314  000E84  EF46  F007         	goto	u13030
  5315  000E88                     u13031:
  5316  000E88  EF9C  F007         	goto	l9678
  5317  000E8C                     u13030:
  5318  000E8C                     
  5319                           ; BSR set to: 0
  5320                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  5321  000E8C  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5322  000E90  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5323  000E94  0E2D               	movlw	45
  5324  000E96  6EDF               	movwf	indf2,c
  5325  000E98                     l9668:
  5326  000E98  0100               	movlb	0	; () banked
  5327  000E9A  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5328  000E9C  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5329  000E9E  EF9C  F007         	goto	l9678
  5330  000EA2                     l9670:
  5331                           
  5332                           ; BSR set to: 1
  5333                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  5334  000EA2  C1E7  F08A         	movff	sprintf@val,___lldiv@dividend
  5335  000EA6  C1E8  F08B         	movff	sprintf@val+1,___lldiv@dividend+1
  5336  000EAA  C1E9  F08C         	movff	sprintf@val+2,___lldiv@dividend+2
  5337  000EAE  C1EA  F08D         	movff	sprintf@val+3,___lldiv@dividend+3
  5338  000EB2  51F7               	movf	sprintf@c& (0+255),w,b
  5339  000EB4  0D04               	mullw	4
  5340  000EB6  0E6D               	movlw	low _dpowers
  5341  000EB8  24F3               	addwf	243,w,c
  5342  000EBA  6EF6               	movwf	tblptrl,c
  5343  000EBC  0E06               	movlw	high _dpowers
  5344  000EBE  20F4               	addwfc	244,w,c
  5345  000EC0  6EF7               	movwf	tblptrh,c
  5346  000EC2                     	if	0	;There are less than 3 active tblptr bytes
  5347  000EC2                     	endif
  5348  000EC2  0009               	tblrd		*+
  5349  000EC4  CFF5 F08E          	movff	tablat,___lldiv@divisor
  5350  000EC8  0009               	tblrd		*+
  5351  000ECA  CFF5 F08F          	movff	tablat,___lldiv@divisor+1
  5352  000ECE  0009               	tblrd		*+
  5353  000ED0  CFF5 F090          	movff	tablat,___lldiv@divisor+2
  5354  000ED4  000A               	tblrd		*-
  5355  000ED6  CFF5 F091          	movff	tablat,___lldiv@divisor+3
  5356  000EDA  ECD7  F03A         	call	___lldiv	;wreg free
  5357  000EDE  C08A  F1E3         	movff	?___lldiv,sprintf@tmpval
  5358  000EE2  C08B  F1E4         	movff	?___lldiv+1,sprintf@tmpval+1
  5359  000EE6  C08C  F1E5         	movff	?___lldiv+2,sprintf@tmpval+2
  5360  000EEA  C08D  F1E6         	movff	?___lldiv+3,sprintf@tmpval+3
  5361  000EEE                     
  5362                           ;doprnt.c: 1228: tmpval.vd %= 10;
  5363  000EEE  C1E3  F097         	movff	sprintf@tmpval,___llmod@dividend
  5364  000EF2  C1E4  F098         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5365  000EF6  C1E5  F099         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5366  000EFA  C1E6  F09A         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5367  000EFE  0E0A               	movlw	10
  5368  000F00  0100               	movlb	0	; () banked
  5369  000F02  6F9B               	movwf	___llmod@divisor& (0+255),b
  5370  000F04  0E00               	movlw	0
  5371  000F06  6F9C               	movwf	(___llmod@divisor+1)& (0+255),b
  5372  000F08  0E00               	movlw	0
  5373  000F0A  6F9D               	movwf	(___llmod@divisor+2)& (0+255),b
  5374  000F0C  0E00               	movlw	0
  5375  000F0E  6F9E               	movwf	(___llmod@divisor+3)& (0+255),b
  5376  000F10  ECCB  F03B         	call	___llmod	;wreg free
  5377  000F14  C097  F1E3         	movff	?___llmod,sprintf@tmpval
  5378  000F18  C098  F1E4         	movff	?___llmod+1,sprintf@tmpval+1
  5379  000F1C  C099  F1E5         	movff	?___llmod+2,sprintf@tmpval+2
  5380  000F20  C09A  F1E6         	movff	?___llmod+3,sprintf@tmpval+3
  5381  000F24                     
  5382                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  5383  000F24  0101               	movlb	1	; () banked
  5384  000F26  51E3               	movf	sprintf@tmpval& (0+255),w,b
  5385  000F28  0F30               	addlw	48
  5386  000F2A  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5387  000F2E  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5388  000F32  6EDF               	movwf	indf2,c
  5389  000F34  EF4C  F007         	goto	l9668
  5390  000F38                     l9678:
  5391  000F38  0101               	movlb	1	; () banked
  5392  000F3A  07F7               	decf	sprintf@c& (0+255),f,b
  5393  000F3C  29F7               	incf	sprintf@c& (0+255),w,b
  5394  000F3E  A4D8               	btfss	status,2,c
  5395  000F40  EFA4  F007         	goto	u13041
  5396  000F44  EFA6  F007         	goto	u13040
  5397  000F48                     u13041:
  5398  000F48  EF51  F007         	goto	l9670
  5399  000F4C                     u13040:
  5400  000F4C  EFB5  F007         	goto	l9686
  5401  000F50                     l9680:
  5402                           
  5403                           ; BSR set to: 1
  5404                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  5405  000F50  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5406  000F54  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5407  000F58  0E30               	movlw	48
  5408  000F5A  6EDF               	movwf	indf2,c
  5409  000F5C                     
  5410                           ; BSR set to: 1
  5411  000F5C  0100               	movlb	0	; () banked
  5412  000F5E  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5413  000F60  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5414  000F62                     
  5415                           ; BSR set to: 0
  5416                           ;doprnt.c: 1235: eexp--;
  5417  000F62  0101               	movlb	1	; () banked
  5418  000F64  07EB               	decf	sprintf@eexp& (0+255),f,b
  5419  000F66  A0D8               	btfss	status,0,c
  5420  000F68  07EC               	decf	(sprintf@eexp+1)& (0+255),f,b
  5421  000F6A                     l9686:
  5422                           
  5423                           ; BSR set to: 1
  5424  000F6A  BFEC               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5425  000F6C  EFC2  F007         	goto	u13050
  5426  000F70  51EC               	movf	(sprintf@eexp+1)& (0+255),w,b
  5427  000F72  E106               	bnz	u13051
  5428  000F74  05EB               	decf	sprintf@eexp& (0+255),w,b
  5429  000F76  B0D8               	btfsc	status,0,c
  5430  000F78  EFC0  F007         	goto	u13051
  5431  000F7C  EFC2  F007         	goto	u13050
  5432  000F80                     u13051:
  5433  000F80  EFA8  F007         	goto	l9680
  5434  000F84                     u13050:
  5435  000F84                     
  5436                           ; BSR set to: 1
  5437                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  5438  000F84  BFF6               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5439  000F86  EFCE  F007         	goto	u13061
  5440  000F8A  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  5441  000F8C  E109               	bnz	u13060
  5442  000F8E  0E09               	movlw	9
  5443  000F90  5DF5               	subwf	sprintf@prec& (0+255),w,b
  5444  000F92  A0D8               	btfss	status,0,c
  5445  000F94  EFCE  F007         	goto	u13061
  5446  000F98  EFD0  F007         	goto	u13060
  5447  000F9C                     u13061:
  5448  000F9C  EFD4  F007         	goto	l592
  5449  000FA0                     u13060:
  5450  000FA0                     
  5451                           ; BSR set to: 1
  5452                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5453  000FA0  0E08               	movlw	8
  5454  000FA2  6FF7               	movwf	sprintf@c& (0+255),b
  5455  000FA4  EFD6  F007         	goto	l9692
  5456  000FA8                     l592:
  5457                           
  5458                           ; BSR set to: 1
  5459                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  5460  000FA8  C1F5  F1F7         	movff	sprintf@prec,sprintf@c
  5461  000FAC                     l9692:
  5462                           
  5463                           ; BSR set to: 1
  5464                           ;doprnt.c: 1241: prec -= (int)c;
  5465  000FAC  51F7               	movf	sprintf@c& (0+255),w,b
  5466  000FAE  5FF5               	subwf	sprintf@prec& (0+255),f,b
  5467  000FB0  0E00               	movlw	0
  5468  000FB2  5BF6               	subwfb	(sprintf@prec+1)& (0+255),f,b
  5469  000FB4                     
  5470                           ; BSR set to: 1
  5471                           ;doprnt.c: 1245: if(c)
  5472  000FB4  51F7               	movf	sprintf@c& (0+255),w,b
  5473  000FB6  B4D8               	btfsc	status,2,c
  5474  000FB8  EFE0  F007         	goto	u13071
  5475  000FBC  EFE2  F007         	goto	u13070
  5476  000FC0                     u13071:
  5477  000FC0  EFEB  F007         	goto	l9700
  5478  000FC4                     u13070:
  5479  000FC4                     
  5480                           ; BSR set to: 1
  5481                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  5482  000FC4  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5483  000FC8  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5484  000FCC  0E2E               	movlw	46
  5485  000FCE  6EDF               	movwf	indf2,c
  5486  000FD0                     
  5487                           ; BSR set to: 1
  5488  000FD0  0100               	movlb	0	; () banked
  5489  000FD2  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5490  000FD4  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5491  000FD6                     l9700:
  5492                           
  5493                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5494  000FD6  0101               	movlb	1	; () banked
  5495  000FD8  51F7               	movf	sprintf@c& (0+255),w,b
  5496  000FDA  ECCE  F01C         	call	_scale
  5497  000FDE  C0B1  F1DD         	movff	?_scale,_sprintf$1961
  5498  000FE2  C0B2  F1DE         	movff	?_scale+1,_sprintf$1961+1
  5499  000FE6  C0B3  F1DF         	movff	?_scale+2,_sprintf$1961+2
  5500  000FEA  C0B4  F1E0         	movff	?_scale+3,_sprintf$1961+3
  5501  000FEE                     
  5502                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  5503  000FEE  C1F1  F09C         	movff	sprintf@fval,___flmul@a
  5504  000FF2  C1F2  F09D         	movff	sprintf@fval+1,___flmul@a+1
  5505  000FF6  C1F3  F09E         	movff	sprintf@fval+2,___flmul@a+2
  5506  000FFA  C1F4  F09F         	movff	sprintf@fval+3,___flmul@a+3
  5507  000FFE  C1DD  F098         	movff	_sprintf$1961,___flmul@b
  5508  001002  C1DE  F099         	movff	_sprintf$1961+1,___flmul@b+1
  5509  001006  C1DF  F09A         	movff	_sprintf$1961+2,___flmul@b+2
  5510  00100A  C1E0  F09B         	movff	_sprintf$1961+3,___flmul@b+3
  5511  00100E  ECA3  F018         	call	___flmul	;wreg free
  5512  001012  C098  F0BA         	movff	?___flmul,___fltol@f1
  5513  001016  C099  F0BB         	movff	?___flmul+1,___fltol@f1+1
  5514  00101A  C09A  F0BC         	movff	?___flmul+2,___fltol@f1+2
  5515  00101E  C09B  F0BD         	movff	?___flmul+3,___fltol@f1+3
  5516  001022  EC40  F034         	call	___fltol	;wreg free
  5517  001026  C0BA  F1E7         	movff	?___fltol,sprintf@val
  5518  00102A  C0BB  F1E8         	movff	?___fltol+1,sprintf@val+1
  5519  00102E  C0BC  F1E9         	movff	?___fltol+2,sprintf@val+2
  5520  001032  C0BD  F1EA         	movff	?___fltol+3,sprintf@val+3
  5521                           
  5522                           ;doprnt.c: 1254: while(c--) {
  5523  001036  EF90  F008         	goto	l9714
  5524  00103A                     l9704:
  5525                           
  5526                           ; BSR set to: 1
  5527                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  5528  00103A  C1E7  F08A         	movff	sprintf@val,___lldiv@dividend
  5529  00103E  C1E8  F08B         	movff	sprintf@val+1,___lldiv@dividend+1
  5530  001042  C1E9  F08C         	movff	sprintf@val+2,___lldiv@dividend+2
  5531  001046  C1EA  F08D         	movff	sprintf@val+3,___lldiv@dividend+3
  5532  00104A  51F7               	movf	sprintf@c& (0+255),w,b
  5533  00104C  0D04               	mullw	4
  5534  00104E  0E6D               	movlw	low _dpowers
  5535  001050  24F3               	addwf	243,w,c
  5536  001052  6EF6               	movwf	tblptrl,c
  5537  001054  0E06               	movlw	high _dpowers
  5538  001056  20F4               	addwfc	244,w,c
  5539  001058  6EF7               	movwf	tblptrh,c
  5540  00105A                     	if	0	;There are less than 3 active tblptr bytes
  5541  00105A                     	endif
  5542  00105A  0009               	tblrd		*+
  5543  00105C  CFF5 F08E          	movff	tablat,___lldiv@divisor
  5544  001060  0009               	tblrd		*+
  5545  001062  CFF5 F08F          	movff	tablat,___lldiv@divisor+1
  5546  001066  0009               	tblrd		*+
  5547  001068  CFF5 F090          	movff	tablat,___lldiv@divisor+2
  5548  00106C  000A               	tblrd		*-
  5549  00106E  CFF5 F091          	movff	tablat,___lldiv@divisor+3
  5550  001072  ECD7  F03A         	call	___lldiv	;wreg free
  5551  001076  C08A  F1E3         	movff	?___lldiv,sprintf@tmpval
  5552  00107A  C08B  F1E4         	movff	?___lldiv+1,sprintf@tmpval+1
  5553  00107E  C08C  F1E5         	movff	?___lldiv+2,sprintf@tmpval+2
  5554  001082  C08D  F1E6         	movff	?___lldiv+3,sprintf@tmpval+3
  5555  001086                     
  5556                           ;doprnt.c: 1256: tmpval.vd %= 10;
  5557  001086  C1E3  F097         	movff	sprintf@tmpval,___llmod@dividend
  5558  00108A  C1E4  F098         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5559  00108E  C1E5  F099         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5560  001092  C1E6  F09A         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5561  001096  0E0A               	movlw	10
  5562  001098  0100               	movlb	0	; () banked
  5563  00109A  6F9B               	movwf	___llmod@divisor& (0+255),b
  5564  00109C  0E00               	movlw	0
  5565  00109E  6F9C               	movwf	(___llmod@divisor+1)& (0+255),b
  5566  0010A0  0E00               	movlw	0
  5567  0010A2  6F9D               	movwf	(___llmod@divisor+2)& (0+255),b
  5568  0010A4  0E00               	movlw	0
  5569  0010A6  6F9E               	movwf	(___llmod@divisor+3)& (0+255),b
  5570  0010A8  ECCB  F03B         	call	___llmod	;wreg free
  5571  0010AC  C097  F1E3         	movff	?___llmod,sprintf@tmpval
  5572  0010B0  C098  F1E4         	movff	?___llmod+1,sprintf@tmpval+1
  5573  0010B4  C099  F1E5         	movff	?___llmod+2,sprintf@tmpval+2
  5574  0010B8  C09A  F1E6         	movff	?___llmod+3,sprintf@tmpval+3
  5575  0010BC                     
  5576                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  5577  0010BC  0101               	movlb	1	; () banked
  5578  0010BE  51E3               	movf	sprintf@tmpval& (0+255),w,b
  5579  0010C0  0F30               	addlw	48
  5580  0010C2  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5581  0010C6  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5582  0010CA  6EDF               	movwf	indf2,c
  5583  0010CC                     
  5584                           ; BSR set to: 1
  5585  0010CC  0100               	movlb	0	; () banked
  5586  0010CE  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5587  0010D0  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5588  0010D2                     
  5589                           ; BSR set to: 0
  5590                           ;doprnt.c: 1258: val %= dpowers[c];
  5591  0010D2  C1E7  F097         	movff	sprintf@val,___llmod@dividend
  5592  0010D6  C1E8  F098         	movff	sprintf@val+1,___llmod@dividend+1
  5593  0010DA  C1E9  F099         	movff	sprintf@val+2,___llmod@dividend+2
  5594  0010DE  C1EA  F09A         	movff	sprintf@val+3,___llmod@dividend+3
  5595  0010E2  0101               	movlb	1	; () banked
  5596  0010E4  51F7               	movf	sprintf@c& (0+255),w,b
  5597  0010E6  0D04               	mullw	4
  5598  0010E8  0E6D               	movlw	low _dpowers
  5599  0010EA  24F3               	addwf	243,w,c
  5600  0010EC  6EF6               	movwf	tblptrl,c
  5601  0010EE  0E06               	movlw	high _dpowers
  5602  0010F0  20F4               	addwfc	244,w,c
  5603  0010F2  6EF7               	movwf	tblptrh,c
  5604  0010F4                     	if	0	;There are less than 3 active tblptr bytes
  5605  0010F4                     	endif
  5606  0010F4  0009               	tblrd		*+
  5607  0010F6  CFF5 F09B          	movff	tablat,___llmod@divisor
  5608  0010FA  0009               	tblrd		*+
  5609  0010FC  CFF5 F09C          	movff	tablat,___llmod@divisor+1
  5610  001100  0009               	tblrd		*+
  5611  001102  CFF5 F09D          	movff	tablat,___llmod@divisor+2
  5612  001106  000A               	tblrd		*-
  5613  001108  CFF5 F09E          	movff	tablat,___llmod@divisor+3
  5614  00110C  ECCB  F03B         	call	___llmod	;wreg free
  5615  001110  C097  F1E7         	movff	?___llmod,sprintf@val
  5616  001114  C098  F1E8         	movff	?___llmod+1,sprintf@val+1
  5617  001118  C099  F1E9         	movff	?___llmod+2,sprintf@val+2
  5618  00111C  C09A  F1EA         	movff	?___llmod+3,sprintf@val+3
  5619  001120                     l9714:
  5620  001120  0101               	movlb	1	; () banked
  5621  001122  07F7               	decf	sprintf@c& (0+255),f,b
  5622  001124  29F7               	incf	sprintf@c& (0+255),w,b
  5623  001126  A4D8               	btfss	status,2,c
  5624  001128  EF98  F008         	goto	u13081
  5625  00112C  EF9A  F008         	goto	u13080
  5626  001130                     u13081:
  5627  001130  EF1D  F008         	goto	l9704
  5628  001134                     u13080:
  5629  001134  EFA9  F008         	goto	l9722
  5630  001138                     l9716:
  5631                           
  5632                           ; BSR set to: 1
  5633                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  5634  001138  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  5635  00113C  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  5636  001140  0E30               	movlw	48
  5637  001142  6EDF               	movwf	indf2,c
  5638  001144                     
  5639                           ; BSR set to: 1
  5640  001144  0100               	movlb	0	; () banked
  5641  001146  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  5642  001148  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  5643  00114A                     
  5644                           ; BSR set to: 0
  5645                           ;doprnt.c: 1263: prec--;
  5646  00114A  0101               	movlb	1	; () banked
  5647  00114C  07F5               	decf	sprintf@prec& (0+255),f,b
  5648  00114E  A0D8               	btfss	status,0,c
  5649  001150  07F6               	decf	(sprintf@prec+1)& (0+255),f,b
  5650  001152                     l9722:
  5651                           
  5652                           ; BSR set to: 1
  5653  001152  51F5               	movf	sprintf@prec& (0+255),w,b
  5654  001154  11F6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5655  001156  A4D8               	btfss	status,2,c
  5656  001158  EFB0  F008         	goto	u13091
  5657  00115C  EFB2  F008         	goto	u13090
  5658  001160                     u13091:
  5659  001160  EF9C  F008         	goto	l9716
  5660  001164                     u13090:
  5661  001164  EF87  F00A         	goto	l9820
  5662  001168                     l9724:
  5663                           
  5664                           ; BSR set to: 1
  5665                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  5666  001168  C1E1  FFD9         	movff	sprintf@ap,fsr2l
  5667  00116C  C1E2  FFDA         	movff	sprintf@ap+1,fsr2h
  5668  001170  CFDE F1E7          	movff	postinc2,sprintf@val
  5669  001174  CFDD F1E8          	movff	postdec2,sprintf@val+1
  5670  001178  0E00               	movlw	0
  5671  00117A  BFE8               	btfsc	(sprintf@val+1)& (0+255),7,b
  5672  00117C  0EFF               	movlw	-1
  5673  00117E  6FE9               	movwf	(sprintf@val+2)& (0+255),b
  5674  001180  6FEA               	movwf	(sprintf@val+3)& (0+255),b
  5675  001182                     
  5676                           ; BSR set to: 1
  5677  001182  0E02               	movlw	2
  5678  001184  27E1               	addwf	sprintf@ap& (0+255),f,b
  5679  001186  0E00               	movlw	0
  5680  001188  23E2               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5681  00118A                     
  5682                           ; BSR set to: 1
  5683                           ;doprnt.c: 1287: if((long)val < 0) {
  5684  00118A  BFEA               	btfsc	(sprintf@val+3)& (0+255),7,b
  5685  00118C  EFCC  F008         	goto	u13100
  5686  001190  EFCA  F008         	goto	u13101
  5687  001194                     u13101:
  5688  001194  EFD6  F008         	goto	l9734
  5689  001198                     u13100:
  5690  001198                     
  5691                           ; BSR set to: 1
  5692                           ;doprnt.c: 1288: flag |= 0x03;
  5693  001198  0E03               	movlw	3
  5694  00119A  13ED               	iorwf	sprintf@flag& (0+255),f,b
  5695  00119C                     
  5696                           ; BSR set to: 1
  5697                           ;doprnt.c: 1289: val = -val;
  5698  00119C  1FEA               	comf	(sprintf@val+3)& (0+255),f,b
  5699  00119E  1FE9               	comf	(sprintf@val+2)& (0+255),f,b
  5700  0011A0  1FE8               	comf	(sprintf@val+1)& (0+255),f,b
  5701  0011A2  6DE7               	negf	sprintf@val& (0+255),b
  5702  0011A4  0E00               	movlw	0
  5703  0011A6  23E8               	addwfc	(sprintf@val+1)& (0+255),f,b
  5704  0011A8  23E9               	addwfc	(sprintf@val+2)& (0+255),f,b
  5705  0011AA  23EA               	addwfc	(sprintf@val+3)& (0+255),f,b
  5706  0011AC                     l9734:
  5707                           
  5708                           ; BSR set to: 1
  5709                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  5710  0011AC  51F5               	movf	sprintf@prec& (0+255),w,b
  5711  0011AE  11F6               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5712  0011B0  A4D8               	btfss	status,2,c
  5713  0011B2  EFDD  F008         	goto	u13111
  5714  0011B6  EFDF  F008         	goto	u13110
  5715  0011BA                     u13111:
  5716  0011BA  EFEC  F008         	goto	l9740
  5717  0011BE                     u13110:
  5718  0011BE                     
  5719                           ; BSR set to: 1
  5720  0011BE  51E7               	movf	sprintf@val& (0+255),w,b
  5721  0011C0  11E8               	iorwf	(sprintf@val+1)& (0+255),w,b
  5722  0011C2  11E9               	iorwf	(sprintf@val+2)& (0+255),w,b
  5723  0011C4  11EA               	iorwf	(sprintf@val+3)& (0+255),w,b
  5724  0011C6  A4D8               	btfss	status,2,c
  5725  0011C8  EFE8  F008         	goto	u13121
  5726  0011CC  EFEA  F008         	goto	u13120
  5727  0011D0                     u13121:
  5728  0011D0  EFEC  F008         	goto	l9740
  5729  0011D4                     u13120:
  5730  0011D4                     
  5731                           ; BSR set to: 1
  5732                           ;doprnt.c: 1317: prec++;
  5733  0011D4  4BF5               	infsnz	sprintf@prec& (0+255),f,b
  5734  0011D6  2BF6               	incf	(sprintf@prec+1)& (0+255),f,b
  5735  0011D8                     l9740:
  5736                           
  5737                           ; BSR set to: 1
  5738                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5739  0011D8  0E01               	movlw	1
  5740  0011DA  6FF7               	movwf	sprintf@c& (0+255),b
  5741  0011DC                     l9746:
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;doprnt.c: 1332: if(val < dpowers[c])
  5745  0011DC  51F7               	movf	sprintf@c& (0+255),w,b
  5746  0011DE  0D04               	mullw	4
  5747  0011E0  0E6D               	movlw	low _dpowers
  5748  0011E2  24F3               	addwf	243,w,c
  5749  0011E4  6EF6               	movwf	tblptrl,c
  5750  0011E6  0E06               	movlw	high _dpowers
  5751  0011E8  20F4               	addwfc	244,w,c
  5752  0011EA  6EF7               	movwf	tblptrh,c
  5753  0011EC                     	if	0	;There are less than 3 active tblptr bytes
  5754  0011EC                     	endif
  5755  0011EC  0009               	tblrd		*+
  5756  0011EE  50F5               	movf	tablat,w,c
  5757  0011F0  5DE7               	subwf	sprintf@val& (0+255),w,b
  5758  0011F2  0009               	tblrd		*+
  5759  0011F4  50F5               	movf	tablat,w,c
  5760  0011F6  59E8               	subwfb	(sprintf@val+1)& (0+255),w,b
  5761  0011F8  0009               	tblrd		*+
  5762  0011FA  50F5               	movf	tablat,w,c
  5763  0011FC  59E9               	subwfb	(sprintf@val+2)& (0+255),w,b
  5764  0011FE  0009               	tblrd		*+
  5765  001200  50F5               	movf	tablat,w,c
  5766  001202  59EA               	subwfb	(sprintf@val+3)& (0+255),w,b
  5767  001204  B0D8               	btfsc	status,0,c
  5768  001206  EF07  F009         	goto	u13131
  5769  00120A  EF09  F009         	goto	u13130
  5770  00120E                     u13131:
  5771  00120E  EF0B  F009         	goto	l9750
  5772  001212                     u13130:
  5773  001212  EF15  F009         	goto	l9754
  5774  001216                     l9750:
  5775                           
  5776                           ; BSR set to: 1
  5777  001216  2BF7               	incf	sprintf@c& (0+255),f,b
  5778  001218                     
  5779                           ; BSR set to: 1
  5780  001218  0E0A               	movlw	10
  5781  00121A  19F7               	xorwf	sprintf@c& (0+255),w,b
  5782  00121C  A4D8               	btfss	status,2,c
  5783  00121E  EF13  F009         	goto	u13141
  5784  001222  EF15  F009         	goto	u13140
  5785  001226                     u13141:
  5786  001226  EFEE  F008         	goto	l9746
  5787  00122A                     u13140:
  5788  00122A                     l9754:
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;doprnt.c: 1365: if(c < prec)
  5792  00122A  51F7               	movf	sprintf@c& (0+255),w,b
  5793  00122C  0100               	movlb	0	; () banked
  5794  00122E  6FDE               	movwf	??_sprintf& (0+255),b
  5795  001230  6BDF               	clrf	(??_sprintf+1)& (0+255),b
  5796  001232  0101               	movlb	1	; () banked
  5797  001234  51F5               	movf	sprintf@prec& (0+255),w,b
  5798  001236  0100               	movlb	0	; () banked
  5799  001238  5DDE               	subwf	??_sprintf& (0+255),w,b
  5800  00123A  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  5801  00123C  0A80               	xorlw	128
  5802  00123E  6FE0               	movwf	(??_sprintf+2)& (0+255),b
  5803  001240  0101               	movlb	1	; () banked
  5804  001242  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  5805  001244  0A80               	xorlw	128
  5806  001246  0100               	movlb	0	; () banked
  5807  001248  59E0               	subwfb	(??_sprintf+2)& (0+255),w,b
  5808  00124A  B0D8               	btfsc	status,0,c
  5809  00124C  EF2A  F009         	goto	u13151
  5810  001250  EF2C  F009         	goto	u13150
  5811  001254                     u13151:
  5812  001254  EF30  F009         	goto	l9758
  5813  001258                     u13150:
  5814  001258                     
  5815                           ; BSR set to: 0
  5816                           ;doprnt.c: 1366: c = (char)prec;
  5817  001258  C1F5  F1F7         	movff	sprintf@prec,sprintf@c
  5818  00125C  EF4A  F009         	goto	l9762
  5819  001260                     l9758:
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;doprnt.c: 1367: else if(prec < c)
  5823  001260  0101               	movlb	1	; () banked
  5824  001262  51F7               	movf	sprintf@c& (0+255),w,b
  5825  001264  0100               	movlb	0	; () banked
  5826  001266  6FDE               	movwf	??_sprintf& (0+255),b
  5827  001268  6BDF               	clrf	(??_sprintf+1)& (0+255),b
  5828  00126A  51DE               	movf	??_sprintf& (0+255),w,b
  5829  00126C  0101               	movlb	1	; () banked
  5830  00126E  5DF5               	subwf	sprintf@prec& (0+255),w,b
  5831  001270  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  5832  001272  0A80               	xorlw	128
  5833  001274  0100               	movlb	0	; () banked
  5834  001276  6FE0               	movwf	(??_sprintf+2)& (0+255),b
  5835  001278  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  5836  00127A  0A80               	xorlw	128
  5837  00127C  59E0               	subwfb	(??_sprintf+2)& (0+255),w,b
  5838  00127E  B0D8               	btfsc	status,0,c
  5839  001280  EF44  F009         	goto	u13161
  5840  001284  EF46  F009         	goto	u13160
  5841  001288                     u13161:
  5842  001288  EF4A  F009         	goto	l9762
  5843  00128C                     u13160:
  5844  00128C                     
  5845                           ; BSR set to: 0
  5846                           ;doprnt.c: 1368: prec = c;
  5847  00128C  C1F7  F1F5         	movff	sprintf@c,sprintf@prec
  5848  001290  0101               	movlb	1	; () banked
  5849  001292  6BF6               	clrf	(sprintf@prec+1)& (0+255),b
  5850  001294                     l9762:
  5851                           
  5852                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5853  001294  0101               	movlb	1	; () banked
  5854  001296  51EF               	movf	sprintf@width& (0+255),w,b
  5855  001298  11F0               	iorwf	(sprintf@width+1)& (0+255),w,b
  5856  00129A  B4D8               	btfsc	status,2,c
  5857  00129C  EF52  F009         	goto	u13171
  5858  0012A0  EF54  F009         	goto	u13170
  5859  0012A4                     u13171:
  5860  0012A4  EF6A  F009         	goto	l9768
  5861  0012A8                     u13170:
  5862  0012A8                     
  5863                           ; BSR set to: 1
  5864  0012A8  0E03               	movlw	3
  5865  0012AA  15ED               	andwf	sprintf@flag& (0+255),w,b
  5866  0012AC  0100               	movlb	0	; () banked
  5867  0012AE  6FDE               	movwf	??_sprintf& (0+255),b
  5868  0012B0  0E00               	movlw	0
  5869  0012B2  0101               	movlb	1	; () banked
  5870  0012B4  15EE               	andwf	(sprintf@flag+1)& (0+255),w,b
  5871  0012B6  0100               	movlb	0	; () banked
  5872  0012B8  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  5873  0012BA  51DE               	movf	??_sprintf& (0+255),w,b
  5874  0012BC  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  5875  0012BE  B4D8               	btfsc	status,2,c
  5876  0012C0  EF64  F009         	goto	u13181
  5877  0012C4  EF66  F009         	goto	u13180
  5878  0012C8                     u13181:
  5879  0012C8  EF6A  F009         	goto	l9768
  5880  0012CC                     u13180:
  5881  0012CC                     
  5882                           ; BSR set to: 0
  5883                           ;doprnt.c: 1372: width--;
  5884  0012CC  0101               	movlb	1	; () banked
  5885  0012CE  07EF               	decf	sprintf@width& (0+255),f,b
  5886  0012D0  A0D8               	btfss	status,0,c
  5887  0012D2  07F0               	decf	(sprintf@width+1)& (0+255),f,b
  5888  0012D4                     l9768:
  5889                           
  5890                           ;doprnt.c: 1374: if(flag & 0x4000) {
  5891  0012D4  0101               	movlb	1	; () banked
  5892  0012D6  ADEE               	btfss	(sprintf@flag+1)& (0+255),6,b
  5893  0012D8  EF70  F009         	goto	u13191
  5894  0012DC  EF72  F009         	goto	u13190
  5895  0012E0                     u13191:
  5896  0012E0  EF90  F009         	goto	l9776
  5897  0012E4                     u13190:
  5898  0012E4                     
  5899                           ; BSR set to: 1
  5900                           ;doprnt.c: 1375: if(width > prec)
  5901  0012E4  51EF               	movf	sprintf@width& (0+255),w,b
  5902  0012E6  5DF5               	subwf	sprintf@prec& (0+255),w,b
  5903  0012E8  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  5904  0012EA  0A80               	xorlw	128
  5905  0012EC  0100               	movlb	0	; () banked
  5906  0012EE  6FDE               	movwf	??_sprintf& (0+255),b
  5907  0012F0  0101               	movlb	1	; () banked
  5908  0012F2  51F0               	movf	(sprintf@width+1)& (0+255),w,b
  5909  0012F4  0A80               	xorlw	128
  5910  0012F6  0100               	movlb	0	; () banked
  5911  0012F8  59DE               	subwfb	??_sprintf& (0+255),w,b
  5912  0012FA  B0D8               	btfsc	status,0,c
  5913  0012FC  EF82  F009         	goto	u13201
  5914  001300  EF84  F009         	goto	u13200
  5915  001304                     u13201:
  5916  001304  EF8B  F009         	goto	l9774
  5917  001308                     u13200:
  5918  001308                     
  5919                           ; BSR set to: 0
  5920                           ;doprnt.c: 1376: width -= prec;
  5921  001308  0101               	movlb	1	; () banked
  5922  00130A  51F5               	movf	sprintf@prec& (0+255),w,b
  5923  00130C  5FEF               	subwf	sprintf@width& (0+255),f,b
  5924  00130E  51F6               	movf	(sprintf@prec+1)& (0+255),w,b
  5925  001310  5BF0               	subwfb	(sprintf@width+1)& (0+255),f,b
  5926  001312  EF90  F009         	goto	l9776
  5927  001316                     l9774:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  5931  001316  0E00               	movlw	0
  5932  001318  0101               	movlb	1	; () banked
  5933  00131A  6FF0               	movwf	(sprintf@width+1)& (0+255),b
  5934  00131C  0E00               	movlw	0
  5935  00131E  6FEF               	movwf	sprintf@width& (0+255),b
  5936  001320                     l9776:
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  5940  001320  51F7               	movf	sprintf@c& (0+255),w,b
  5941  001322  0100               	movlb	0	; () banked
  5942  001324  6FDE               	movwf	??_sprintf& (0+255),b
  5943  001326  6BDF               	clrf	(??_sprintf+1)& (0+255),b
  5944  001328  0101               	movlb	1	; () banked
  5945  00132A  51EF               	movf	sprintf@width& (0+255),w,b
  5946  00132C  0100               	movlb	0	; () banked
  5947  00132E  5DDE               	subwf	??_sprintf& (0+255),w,b
  5948  001330  51DF               	movf	(??_sprintf+1)& (0+255),w,b
  5949  001332  0A80               	xorlw	128
  5950  001334  6FE0               	movwf	(??_sprintf+2)& (0+255),b
  5951  001336  0101               	movlb	1	; () banked
  5952  001338  51F0               	movf	(sprintf@width+1)& (0+255),w,b
  5953  00133A  0A80               	xorlw	128
  5954  00133C  0100               	movlb	0	; () banked
  5955  00133E  59E0               	subwfb	(??_sprintf+2)& (0+255),w,b
  5956  001340  B0D8               	btfsc	status,0,c
  5957  001342  EFA5  F009         	goto	u13211
  5958  001346  EFA7  F009         	goto	u13210
  5959  00134A                     u13211:
  5960  00134A  EFAE  F009         	goto	l9780
  5961  00134E                     u13210:
  5962  00134E                     
  5963                           ; BSR set to: 0
  5964                           ;doprnt.c: 1408: width -= c;
  5965  00134E  0101               	movlb	1	; () banked
  5966  001350  51F7               	movf	sprintf@c& (0+255),w,b
  5967  001352  5FEF               	subwf	sprintf@width& (0+255),f,b
  5968  001354  0E00               	movlw	0
  5969  001356  5BF0               	subwfb	(sprintf@width+1)& (0+255),f,b
  5970  001358  EFB3  F009         	goto	l9782
  5971  00135C                     l9780:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5975  00135C  0E00               	movlw	0
  5976  00135E  0101               	movlb	1	; () banked
  5977  001360  6FF0               	movwf	(sprintf@width+1)& (0+255),b
  5978  001362  0E00               	movlw	0
  5979  001364  6FEF               	movwf	sprintf@width& (0+255),b
  5980  001366                     l9782:
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;doprnt.c: 1413: if(flag & 0x04) {
  5984  001366  A5ED               	btfss	sprintf@flag& (0+255),2,b
  5985  001368  EFB8  F009         	goto	u13221
  5986  00136C  EFBA  F009         	goto	u13220
  5987  001370                     u13221:
  5988  001370  EFF6  F009         	goto	l9798
  5989  001374                     u13220:
  5990  001374                     
  5991                           ; BSR set to: 1
  5992                           ;doprnt.c: 1418: if(flag & 0x03)
  5993  001374  0E03               	movlw	3
  5994  001376  15ED               	andwf	sprintf@flag& (0+255),w,b
  5995  001378  0100               	movlb	0	; () banked
  5996  00137A  6FDE               	movwf	??_sprintf& (0+255),b
  5997  00137C  0E00               	movlw	0
  5998  00137E  0101               	movlb	1	; () banked
  5999  001380  15EE               	andwf	(sprintf@flag+1)& (0+255),w,b
  6000  001382  0100               	movlb	0	; () banked
  6001  001384  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  6002  001386  51DE               	movf	??_sprintf& (0+255),w,b
  6003  001388  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  6004  00138A  B4D8               	btfsc	status,2,c
  6005  00138C  EFCA  F009         	goto	u13231
  6006  001390  EFCC  F009         	goto	u13230
  6007  001394                     u13231:
  6008  001394  EFD4  F009         	goto	l9790
  6009  001398                     u13230:
  6010  001398                     
  6011                           ; BSR set to: 0
  6012                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  6013  001398  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  6014  00139C  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  6015  0013A0  0E2D               	movlw	45
  6016  0013A2  6EDF               	movwf	indf2,c
  6017  0013A4                     
  6018                           ; BSR set to: 0
  6019  0013A4  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  6020  0013A6  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  6021  0013A8                     l9790:
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;doprnt.c: 1441: if(width)
  6025  0013A8  0101               	movlb	1	; () banked
  6026  0013AA  51EF               	movf	sprintf@width& (0+255),w,b
  6027  0013AC  11F0               	iorwf	(sprintf@width+1)& (0+255),w,b
  6028  0013AE  B4D8               	btfsc	status,2,c
  6029  0013B0  EFDC  F009         	goto	u13241
  6030  0013B4  EFDE  F009         	goto	u13240
  6031  0013B8                     u13241:
  6032  0013B8  EF79  F00A         	goto	l9818
  6033  0013BC                     u13240:
  6034  0013BC                     l9792:
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  6038  0013BC  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  6039  0013C0  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  6040  0013C4  0E30               	movlw	48
  6041  0013C6  6EDF               	movwf	indf2,c
  6042  0013C8                     
  6043                           ; BSR set to: 1
  6044  0013C8  0100               	movlb	0	; () banked
  6045  0013CA  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  6046  0013CC  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  6047  0013CE                     
  6048                           ; BSR set to: 0
  6049                           ;doprnt.c: 1444: while(--width);
  6050  0013CE  0101               	movlb	1	; () banked
  6051  0013D0  07EF               	decf	sprintf@width& (0+255),f,b
  6052  0013D2  A0D8               	btfss	status,0,c
  6053  0013D4  07F0               	decf	(sprintf@width+1)& (0+255),f,b
  6054  0013D6  51EF               	movf	sprintf@width& (0+255),w,b
  6055  0013D8  11F0               	iorwf	(sprintf@width+1)& (0+255),w,b
  6056  0013DA  A4D8               	btfss	status,2,c
  6057  0013DC  EFF2  F009         	goto	u13251
  6058  0013E0  EFF4  F009         	goto	u13250
  6059  0013E4                     u13251:
  6060  0013E4  EFDE  F009         	goto	l9792
  6061  0013E8                     u13250:
  6062  0013E8  EF79  F00A         	goto	l9818
  6063  0013EC                     l9798:
  6064                           
  6065                           ; BSR set to: 1
  6066                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  6067  0013EC  51EF               	movf	sprintf@width& (0+255),w,b
  6068  0013EE  11F0               	iorwf	(sprintf@width+1)& (0+255),w,b
  6069  0013F0  B4D8               	btfsc	status,2,c
  6070  0013F2  EFFD  F009         	goto	u13261
  6071  0013F6  EFFF  F009         	goto	u13260
  6072  0013FA                     u13261:
  6073  0013FA  EF15  F00A         	goto	l9806
  6074  0013FE                     u13260:
  6075  0013FE                     l9800:
  6076                           
  6077                           ; BSR set to: 1
  6078                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  6079  0013FE  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  6080  001402  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  6081  001406  0E20               	movlw	32
  6082  001408  6EDF               	movwf	indf2,c
  6083  00140A                     
  6084                           ; BSR set to: 1
  6085  00140A  0100               	movlb	0	; () banked
  6086  00140C  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  6087  00140E  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  6088  001410                     
  6089                           ; BSR set to: 0
  6090                           ;doprnt.c: 1457: while(--width);
  6091  001410  0101               	movlb	1	; () banked
  6092  001412  07EF               	decf	sprintf@width& (0+255),f,b
  6093  001414  A0D8               	btfss	status,0,c
  6094  001416  07F0               	decf	(sprintf@width+1)& (0+255),f,b
  6095  001418  51EF               	movf	sprintf@width& (0+255),w,b
  6096  00141A  11F0               	iorwf	(sprintf@width+1)& (0+255),w,b
  6097  00141C  A4D8               	btfss	status,2,c
  6098  00141E  EF13  F00A         	goto	u13271
  6099  001422  EF15  F00A         	goto	u13270
  6100  001426                     u13271:
  6101  001426  EFFF  F009         	goto	l9800
  6102  00142A                     u13270:
  6103  00142A                     l9806:
  6104                           
  6105                           ; BSR set to: 1
  6106                           ;doprnt.c: 1464: if(flag & 0x03)
  6107  00142A  0E03               	movlw	3
  6108  00142C  15ED               	andwf	sprintf@flag& (0+255),w,b
  6109  00142E  0100               	movlb	0	; () banked
  6110  001430  6FDE               	movwf	??_sprintf& (0+255),b
  6111  001432  0E00               	movlw	0
  6112  001434  0101               	movlb	1	; () banked
  6113  001436  15EE               	andwf	(sprintf@flag+1)& (0+255),w,b
  6114  001438  0100               	movlb	0	; () banked
  6115  00143A  6FDF               	movwf	(??_sprintf+1)& (0+255),b
  6116  00143C  51DE               	movf	??_sprintf& (0+255),w,b
  6117  00143E  11DF               	iorwf	(??_sprintf+1)& (0+255),w,b
  6118  001440  B4D8               	btfsc	status,2,c
  6119  001442  EF25  F00A         	goto	u13281
  6120  001446  EF27  F00A         	goto	u13280
  6121  00144A                     u13281:
  6122  00144A  EF79  F00A         	goto	l9818
  6123  00144E                     u13280:
  6124  00144E                     
  6125                           ; BSR set to: 0
  6126                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  6127  00144E  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  6128  001452  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  6129  001456  0E2D               	movlw	45
  6130  001458  6EDF               	movwf	indf2,c
  6131  00145A                     l9810:
  6132  00145A  0100               	movlb	0	; () banked
  6133  00145C  4BD6               	infsnz	sprintf@sp& (0+255),f,b
  6134  00145E  2BD7               	incf	(sprintf@sp+1)& (0+255),f,b
  6135  001460  EF79  F00A         	goto	l9818
  6136  001464                     l9812:
  6137                           
  6138                           ; BSR set to: 1
  6139                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  6140  001464  C1F5  F0DE         	movff	sprintf@prec,??_sprintf
  6141  001468  C1F6  F0DF         	movff	sprintf@prec+1,??_sprintf+1
  6142  00146C  0100               	movlb	0	; () banked
  6143  00146E  90D8               	bcf	status,0,c
  6144  001470  37DE               	rlcf	??_sprintf& (0+255),f,b
  6145  001472  37DF               	rlcf	(??_sprintf+1)& (0+255),f,b
  6146  001474  90D8               	bcf	status,0,c
  6147  001476  37DE               	rlcf	??_sprintf& (0+255),f,b
  6148  001478  37DF               	rlcf	(??_sprintf+1)& (0+255),f,b
  6149  00147A  0E6D               	movlw	low _dpowers
  6150  00147C  25DE               	addwf	??_sprintf& (0+255),w,b
  6151  00147E  6EF6               	movwf	tblptrl,c
  6152  001480  0E06               	movlw	high _dpowers
  6153  001482  21DF               	addwfc	(??_sprintf+1)& (0+255),w,b
  6154  001484  6EF7               	movwf	tblptrh,c
  6155  001486                     	if	0	;There are less than 3 active tblptr bytes
  6156  001486                     	endif
  6157  001486  0009               	tblrd		*+
  6158  001488  CFF5 F08E          	movff	tablat,___lldiv@divisor
  6159  00148C  0009               	tblrd		*+
  6160  00148E  CFF5 F08F          	movff	tablat,___lldiv@divisor+1
  6161  001492  0009               	tblrd		*+
  6162  001494  CFF5 F090          	movff	tablat,___lldiv@divisor+2
  6163  001498  000A               	tblrd		*-
  6164  00149A  CFF5 F091          	movff	tablat,___lldiv@divisor+3
  6165  00149E  C1E7  F08A         	movff	sprintf@val,___lldiv@dividend
  6166  0014A2  C1E8  F08B         	movff	sprintf@val+1,___lldiv@dividend+1
  6167  0014A6  C1E9  F08C         	movff	sprintf@val+2,___lldiv@dividend+2
  6168  0014AA  C1EA  F08D         	movff	sprintf@val+3,___lldiv@dividend+3
  6169  0014AE  ECD7  F03A         	call	___lldiv	;wreg free
  6170  0014B2  C08A  F097         	movff	?___lldiv,___llmod@dividend
  6171  0014B6  C08B  F098         	movff	?___lldiv+1,___llmod@dividend+1
  6172  0014BA  C08C  F099         	movff	?___lldiv+2,___llmod@dividend+2
  6173  0014BE  C08D  F09A         	movff	?___lldiv+3,___llmod@dividend+3
  6174  0014C2  0E0A               	movlw	10
  6175  0014C4  0100               	movlb	0	; () banked
  6176  0014C6  6F9B               	movwf	___llmod@divisor& (0+255),b
  6177  0014C8  0E00               	movlw	0
  6178  0014CA  6F9C               	movwf	(___llmod@divisor+1)& (0+255),b
  6179  0014CC  0E00               	movlw	0
  6180  0014CE  6F9D               	movwf	(___llmod@divisor+2)& (0+255),b
  6181  0014D0  0E00               	movlw	0
  6182  0014D2  6F9E               	movwf	(___llmod@divisor+3)& (0+255),b
  6183  0014D4  ECCB  F03B         	call	___llmod	;wreg free
  6184  0014D8  0100               	movlb	0	; () banked
  6185  0014DA  5197               	movf	?___llmod& (0+255),w,b
  6186  0014DC  0F30               	addlw	48
  6187  0014DE  0101               	movlb	1	; () banked
  6188  0014E0  6FF7               	movwf	sprintf@c& (0+255),b
  6189  0014E2                     
  6190                           ; BSR set to: 1
  6191                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  6192  0014E2  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  6193  0014E6  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  6194  0014EA  C1F7  FFDF         	movff	sprintf@c,indf2
  6195  0014EE  EF2D  F00A         	goto	l9810
  6196  0014F2                     l9818:
  6197  0014F2  0101               	movlb	1	; () banked
  6198  0014F4  07F5               	decf	sprintf@prec& (0+255),f,b
  6199  0014F6  A0D8               	btfss	status,0,c
  6200  0014F8  07F6               	decf	(sprintf@prec+1)& (0+255),f,b
  6201  0014FA  29F5               	incf	sprintf@prec& (0+255),w,b
  6202  0014FC  E106               	bnz	u13291
  6203  0014FE  29F6               	incf	(sprintf@prec+1)& (0+255),w,b
  6204  001500  A4D8               	btfss	status,2,c
  6205  001502  EF85  F00A         	goto	u13291
  6206  001506  EF87  F00A         	goto	u13290
  6207  00150A                     u13291:
  6208  00150A  EF32  F00A         	goto	l9812
  6209  00150E                     u13290:
  6210  00150E                     l9820:
  6211  00150E  C0D8  FFF6         	movff	sprintf@f,tblptrl
  6212  001512  C0D9  FFF7         	movff	sprintf@f+1,tblptrh
  6213  001516  0100               	movlb	0	; () banked
  6214  001518  4BD8               	infsnz	sprintf@f& (0+255),f,b
  6215  00151A  2BD9               	incf	(sprintf@f+1)& (0+255),f,b
  6216  00151C                     	if	0	;tblptru may be non-zero
  6217  00151C                     	endif
  6218  00151C                     	if	0	;tblptru may be non-zero
  6219  00151C                     	endif
  6220  00151C  0008               	tblrd		*
  6221  00151E  CFF5 F1F7          	movff	tablat,sprintf@c
  6222  001522  0101               	movlb	1	; () banked
  6223  001524  51F7               	movf	sprintf@c& (0+255),w,b
  6224  001526  A4D8               	btfss	status,2,c
  6225  001528  EF98  F00A         	goto	u13301
  6226  00152C  EF9A  F00A         	goto	u13300
  6227  001530                     u13301:
  6228  001530  EF77  F003         	goto	l9494
  6229  001534                     u13300:
  6230  001534                     l9822:
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;doprnt.c: 1564: *sp = 0;
  6234  001534  C0D6  FFD9         	movff	sprintf@sp,fsr2l
  6235  001538  C0D7  FFDA         	movff	sprintf@sp+1,fsr2h
  6236  00153C  0E00               	movlw	0
  6237  00153E  6EDF               	movwf	indf2,c
  6238  001540                     
  6239                           ; BSR set to: 1
  6240  001540  0012               	return		;funcret
  6241  001542                     __end_of_sprintf:
  6242                           	callstack 0
  6243                           
  6244 ;; *************** function _scale *****************
  6245 ;; Defined at:
  6246 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  scl             1    wreg     char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  scl             1   57[BANK0 ] char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  4   49[BANK0 ] char 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6260 ;;      Params:         0       4       0       0       0       0       0
  6261 ;;      Locals:         0       5       0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0
  6263 ;;      Totals:         0       9       0       0       0       0       0
  6264 ;;Total ram usage:        9 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    6
  6267 ;; This function calls:
  6268 ;;		___awdiv
  6269 ;;		___awmod
  6270 ;;		___flmul
  6271 ;; This function is called by:
  6272 ;;		_sprintf
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text9
  6277  00399C                     __ptext9:
  6278                           	callstack 0
  6279  00399C                     _scale:
  6280                           	callstack 23
  6281                           
  6282                           ; BSR set to: 1
  6283                           ;incstack = 0
  6284                           ;scale@scl stored from wreg
  6285  00399C  0100               	movlb	0	; () banked
  6286  00399E  6FB9               	movwf	scale@scl& (0+255),b
  6287  0039A0                     
  6288                           ;doprnt.c: 436: if(scl < 0) {
  6289  0039A0  0100               	movlb	0	; () banked
  6290  0039A2  BFB9               	btfsc	scale@scl& (0+255),7,b
  6291  0039A4  EFD8  F01C         	goto	u11940
  6292  0039A8  EFD6  F01C         	goto	u11941
  6293  0039AC                     u11941:
  6294  0039AC  EFDE  F01D         	goto	l8984
  6295  0039B0                     u11940:
  6296  0039B0                     
  6297                           ; BSR set to: 0
  6298                           ;doprnt.c: 437: scl = -scl;
  6299  0039B0  6DB9               	negf	scale@scl& (0+255),b
  6300                           
  6301                           ;doprnt.c: 438: if(scl>=110)
  6302  0039B2  51B9               	movf	scale@scl& (0+255),w,b
  6303  0039B4  0A80               	xorlw	128
  6304  0039B6  0F12               	addlw	-238
  6305  0039B8  A0D8               	btfss	status,0,c
  6306  0039BA  EFE1  F01C         	goto	u11951
  6307  0039BE  EFE3  F01C         	goto	u11950
  6308  0039C2                     u11951:
  6309  0039C2  EF70  F01D         	goto	l8974
  6310  0039C6                     u11950:
  6311  0039C6                     
  6312                           ; BSR set to: 0
  6313                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6314  0039C6  0E00               	movlw	0
  6315  0039C8  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  6316  0039CA  0E0A               	movlw	10
  6317  0039CC  6F92               	movwf	___awdiv@divisor& (0+255),b
  6318  0039CE  0E00               	movlw	0
  6319  0039D0  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  6320  0039D2  0E64               	movlw	100
  6321  0039D4  6F8C               	movwf	___awmod@divisor& (0+255),b
  6322  0039D6  51B9               	movf	scale@scl& (0+255),w,b
  6323  0039D8  6F8A               	movwf	___awmod@dividend& (0+255),b
  6324  0039DA  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  6325  0039DC  BF8A               	btfsc	___awmod@dividend& (0+255),7,b
  6326  0039DE  078B               	decf	(___awmod@dividend+1)& (0+255),f,b
  6327  0039E0  EC23  F039         	call	___awmod	;wreg free
  6328  0039E4  C08A  F090         	movff	?___awmod,___awdiv@dividend
  6329  0039E8  C08B  F091         	movff	?___awmod+1,___awdiv@dividend+1
  6330  0039EC  EC46  F037         	call	___awdiv	;wreg free
  6331  0039F0  0E09               	movlw	9
  6332  0039F2  0100               	movlb	0	; () banked
  6333  0039F4  2790               	addwf	?___awdiv& (0+255),f,b
  6334  0039F6  5190               	movf	?___awdiv& (0+255),w,b
  6335  0039F8  0D04               	mullw	4
  6336  0039FA  0E35               	movlw	low __npowers_
  6337  0039FC  24F3               	addwf	243,w,c
  6338  0039FE  6EF6               	movwf	tblptrl,c
  6339  003A00  0E06               	movlw	high __npowers_
  6340  003A02  20F4               	addwfc	244,w,c
  6341  003A04  6EF7               	movwf	tblptrh,c
  6342  003A06                     	if	0	;There are less than 3 active tblptr bytes
  6343  003A06                     	endif
  6344  003A06  0009               	tblrd		*+
  6345  003A08  CFF5 F09C          	movff	tablat,___flmul@a
  6346  003A0C  0009               	tblrd		*+
  6347  003A0E  CFF5 F09D          	movff	tablat,___flmul@a+1
  6348  003A12  0009               	tblrd		*+
  6349  003A14  CFF5 F09E          	movff	tablat,___flmul@a+2
  6350  003A18  000A               	tblrd		*-
  6351  003A1A  CFF5 F09F          	movff	tablat,___flmul@a+3
  6352  003A1E  0E00               	movlw	0
  6353  003A20  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  6354  003A22  0E64               	movlw	100
  6355  003A24  6F92               	movwf	___awdiv@divisor& (0+255),b
  6356  003A26  51B9               	movf	scale@scl& (0+255),w,b
  6357  003A28  6F90               	movwf	___awdiv@dividend& (0+255),b
  6358  003A2A  6B91               	clrf	(___awdiv@dividend+1)& (0+255),b
  6359  003A2C  BF90               	btfsc	___awdiv@dividend& (0+255),7,b
  6360  003A2E  0791               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6361  003A30  EC46  F037         	call	___awdiv	;wreg free
  6362  003A34  0E12               	movlw	18
  6363  003A36  0100               	movlb	0	; () banked
  6364  003A38  2790               	addwf	?___awdiv& (0+255),f,b
  6365  003A3A  5190               	movf	?___awdiv& (0+255),w,b
  6366  003A3C  0D04               	mullw	4
  6367  003A3E  0E35               	movlw	low __npowers_
  6368  003A40  24F3               	addwf	243,w,c
  6369  003A42  6EF6               	movwf	tblptrl,c
  6370  003A44  0E06               	movlw	high __npowers_
  6371  003A46  20F4               	addwfc	244,w,c
  6372  003A48  6EF7               	movwf	tblptrh,c
  6373  003A4A                     	if	0	;There are less than 3 active tblptr bytes
  6374  003A4A                     	endif
  6375  003A4A  0009               	tblrd		*+
  6376  003A4C  CFF5 F098          	movff	tablat,___flmul@b
  6377  003A50  0009               	tblrd		*+
  6378  003A52  CFF5 F099          	movff	tablat,___flmul@b+1
  6379  003A56  0009               	tblrd		*+
  6380  003A58  CFF5 F09A          	movff	tablat,___flmul@b+2
  6381  003A5C  000A               	tblrd		*-
  6382  003A5E  CFF5 F09B          	movff	tablat,___flmul@b+3
  6383  003A62  ECA3  F018         	call	___flmul	;wreg free
  6384  003A66  C098  F0B5         	movff	?___flmul,_scale$1960
  6385  003A6A  C099  F0B6         	movff	?___flmul+1,_scale$1960+1
  6386  003A6E  C09A  F0B7         	movff	?___flmul+2,_scale$1960+2
  6387  003A72  C09B  F0B8         	movff	?___flmul+3,_scale$1960+3
  6388                           
  6389                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  6390  003A76  C0B5  F098         	movff	_scale$1960,___flmul@b
  6391  003A7A  C0B6  F099         	movff	_scale$1960+1,___flmul@b+1
  6392  003A7E  C0B7  F09A         	movff	_scale$1960+2,___flmul@b+2
  6393  003A82  C0B8  F09B         	movff	_scale$1960+3,___flmul@b+3
  6394  003A86  0E00               	movlw	0
  6395  003A88  0100               	movlb	0	; () banked
  6396  003A8A  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  6397  003A8C  0E0A               	movlw	10
  6398  003A8E  6F8C               	movwf	___awmod@divisor& (0+255),b
  6399  003A90  51B9               	movf	scale@scl& (0+255),w,b
  6400  003A92  6F8A               	movwf	___awmod@dividend& (0+255),b
  6401  003A94  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  6402  003A96  BF8A               	btfsc	___awmod@dividend& (0+255),7,b
  6403  003A98  078B               	decf	(___awmod@dividend+1)& (0+255),f,b
  6404  003A9A  EC23  F039         	call	___awmod	;wreg free
  6405  003A9E  0100               	movlb	0	; () banked
  6406  003AA0  518A               	movf	?___awmod& (0+255),w,b
  6407  003AA2  0D04               	mullw	4
  6408  003AA4  0E35               	movlw	low __npowers_
  6409  003AA6  24F3               	addwf	243,w,c
  6410  003AA8  6EF6               	movwf	tblptrl,c
  6411  003AAA  0E06               	movlw	high __npowers_
  6412  003AAC  20F4               	addwfc	244,w,c
  6413  003AAE  6EF7               	movwf	tblptrh,c
  6414  003AB0                     	if	0	;There are less than 3 active tblptr bytes
  6415  003AB0                     	endif
  6416  003AB0  0009               	tblrd		*+
  6417  003AB2  CFF5 F09C          	movff	tablat,___flmul@a
  6418  003AB6  0009               	tblrd		*+
  6419  003AB8  CFF5 F09D          	movff	tablat,___flmul@a+1
  6420  003ABC  0009               	tblrd		*+
  6421  003ABE  CFF5 F09E          	movff	tablat,___flmul@a+2
  6422  003AC2  000A               	tblrd		*-
  6423  003AC4  CFF5 F09F          	movff	tablat,___flmul@a+3
  6424  003AC8  ECA3  F018         	call	___flmul	;wreg free
  6425  003ACC  C098  F0B1         	movff	?___flmul,?_scale
  6426  003AD0  C099  F0B2         	movff	?___flmul+1,?_scale+1
  6427  003AD4  C09A  F0B3         	movff	?___flmul+2,?_scale+2
  6428  003AD8  C09B  F0B4         	movff	?___flmul+3,?_scale+3
  6429  003ADC  EFE1  F01E         	goto	l519
  6430  003AE0                     l8974:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;doprnt.c: 440: else if(scl > 10)
  6434  003AE0  51B9               	movf	scale@scl& (0+255),w,b
  6435  003AE2  0A80               	xorlw	128
  6436  003AE4  0F75               	addlw	-139
  6437  003AE6  A0D8               	btfss	status,0,c
  6438  003AE8  EF78  F01D         	goto	u11961
  6439  003AEC  EF7A  F01D         	goto	u11960
  6440  003AF0                     u11961:
  6441  003AF0  EFC8  F01D         	goto	l8980
  6442  003AF4                     u11960:
  6443  003AF4                     
  6444                           ; BSR set to: 0
  6445                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  6446  003AF4  0E00               	movlw	0
  6447  003AF6  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  6448  003AF8  0E0A               	movlw	10
  6449  003AFA  6F92               	movwf	___awdiv@divisor& (0+255),b
  6450  003AFC  51B9               	movf	scale@scl& (0+255),w,b
  6451  003AFE  6F90               	movwf	___awdiv@dividend& (0+255),b
  6452  003B00  6B91               	clrf	(___awdiv@dividend+1)& (0+255),b
  6453  003B02  BF90               	btfsc	___awdiv@dividend& (0+255),7,b
  6454  003B04  0791               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6455  003B06  EC46  F037         	call	___awdiv	;wreg free
  6456  003B0A  0E09               	movlw	9
  6457  003B0C  0100               	movlb	0	; () banked
  6458  003B0E  2790               	addwf	?___awdiv& (0+255),f,b
  6459  003B10  5190               	movf	?___awdiv& (0+255),w,b
  6460  003B12  0D04               	mullw	4
  6461  003B14  0E35               	movlw	low __npowers_
  6462  003B16  24F3               	addwf	243,w,c
  6463  003B18  6EF6               	movwf	tblptrl,c
  6464  003B1A  0E06               	movlw	high __npowers_
  6465  003B1C  20F4               	addwfc	244,w,c
  6466  003B1E  6EF7               	movwf	tblptrh,c
  6467  003B20                     	if	0	;There are less than 3 active tblptr bytes
  6468  003B20                     	endif
  6469  003B20  0009               	tblrd		*+
  6470  003B22  CFF5 F098          	movff	tablat,___flmul@b
  6471  003B26  0009               	tblrd		*+
  6472  003B28  CFF5 F099          	movff	tablat,___flmul@b+1
  6473  003B2C  0009               	tblrd		*+
  6474  003B2E  CFF5 F09A          	movff	tablat,___flmul@b+2
  6475  003B32  000A               	tblrd		*-
  6476  003B34  CFF5 F09B          	movff	tablat,___flmul@b+3
  6477  003B38  0E00               	movlw	0
  6478  003B3A  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  6479  003B3C  0E0A               	movlw	10
  6480  003B3E  6F8C               	movwf	___awmod@divisor& (0+255),b
  6481  003B40  51B9               	movf	scale@scl& (0+255),w,b
  6482  003B42  6F8A               	movwf	___awmod@dividend& (0+255),b
  6483  003B44  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  6484  003B46  BF8A               	btfsc	___awmod@dividend& (0+255),7,b
  6485  003B48  078B               	decf	(___awmod@dividend+1)& (0+255),f,b
  6486  003B4A  EC23  F039         	call	___awmod	;wreg free
  6487  003B4E  0100               	movlb	0	; () banked
  6488  003B50  518A               	movf	?___awmod& (0+255),w,b
  6489  003B52  0D04               	mullw	4
  6490  003B54  0E35               	movlw	low __npowers_
  6491  003B56  24F3               	addwf	243,w,c
  6492  003B58  6EF6               	movwf	tblptrl,c
  6493  003B5A  0E06               	movlw	high __npowers_
  6494  003B5C  20F4               	addwfc	244,w,c
  6495  003B5E  6EF7               	movwf	tblptrh,c
  6496  003B60                     	if	0	;There are less than 3 active tblptr bytes
  6497  003B60                     	endif
  6498  003B60  0009               	tblrd		*+
  6499  003B62  CFF5 F09C          	movff	tablat,___flmul@a
  6500  003B66  0009               	tblrd		*+
  6501  003B68  CFF5 F09D          	movff	tablat,___flmul@a+1
  6502  003B6C  0009               	tblrd		*+
  6503  003B6E  CFF5 F09E          	movff	tablat,___flmul@a+2
  6504  003B72  000A               	tblrd		*-
  6505  003B74  CFF5 F09F          	movff	tablat,___flmul@a+3
  6506  003B78  ECA3  F018         	call	___flmul	;wreg free
  6507  003B7C  C098  F0B1         	movff	?___flmul,?_scale
  6508  003B80  C099  F0B2         	movff	?___flmul+1,?_scale+1
  6509  003B84  C09A  F0B3         	movff	?___flmul+2,?_scale+2
  6510  003B88  C09B  F0B4         	movff	?___flmul+3,?_scale+3
  6511  003B8C  EFE1  F01E         	goto	l519
  6512  003B90                     l8980:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  6516  003B90  51B9               	movf	scale@scl& (0+255),w,b
  6517  003B92  0D04               	mullw	4
  6518  003B94  0E35               	movlw	low __npowers_
  6519  003B96  24F3               	addwf	243,w,c
  6520  003B98  6EF6               	movwf	tblptrl,c
  6521  003B9A  0E06               	movlw	high __npowers_
  6522  003B9C  20F4               	addwfc	244,w,c
  6523  003B9E  6EF7               	movwf	tblptrh,c
  6524  003BA0                     	if	0	;There are less than 3 active tblptr bytes
  6525  003BA0                     	endif
  6526  003BA0  0009               	tblrd		*+
  6527  003BA2  CFF5 F0B1          	movff	tablat,?_scale
  6528  003BA6  0009               	tblrd		*+
  6529  003BA8  CFF5 F0B2          	movff	tablat,?_scale+1
  6530  003BAC  0009               	tblrd		*+
  6531  003BAE  CFF5 F0B3          	movff	tablat,?_scale+2
  6532  003BB2  000A               	tblrd		*-
  6533  003BB4  CFF5 F0B4          	movff	tablat,?_scale+3
  6534  003BB8  EFE1  F01E         	goto	l519
  6535  003BBC                     l8984:
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  6539  003BBC  51B9               	movf	scale@scl& (0+255),w,b
  6540  003BBE  0A80               	xorlw	128
  6541  003BC0  0F12               	addlw	-238
  6542  003BC2  A0D8               	btfss	status,0,c
  6543  003BC4  EFE6  F01D         	goto	u11971
  6544  003BC8  EFE8  F01D         	goto	u11970
  6545  003BCC                     u11971:
  6546  003BCC  EF75  F01E         	goto	l8992
  6547  003BD0                     u11970:
  6548  003BD0                     
  6549                           ; BSR set to: 0
  6550                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6551  003BD0  0E00               	movlw	0
  6552  003BD2  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  6553  003BD4  0E0A               	movlw	10
  6554  003BD6  6F92               	movwf	___awdiv@divisor& (0+255),b
  6555  003BD8  0E00               	movlw	0
  6556  003BDA  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  6557  003BDC  0E64               	movlw	100
  6558  003BDE  6F8C               	movwf	___awmod@divisor& (0+255),b
  6559  003BE0  51B9               	movf	scale@scl& (0+255),w,b
  6560  003BE2  6F8A               	movwf	___awmod@dividend& (0+255),b
  6561  003BE4  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  6562  003BE6  BF8A               	btfsc	___awmod@dividend& (0+255),7,b
  6563  003BE8  078B               	decf	(___awmod@dividend+1)& (0+255),f,b
  6564  003BEA  EC23  F039         	call	___awmod	;wreg free
  6565  003BEE  C08A  F090         	movff	?___awmod,___awdiv@dividend
  6566  003BF2  C08B  F091         	movff	?___awmod+1,___awdiv@dividend+1
  6567  003BF6  EC46  F037         	call	___awdiv	;wreg free
  6568  003BFA  0E09               	movlw	9
  6569  003BFC  0100               	movlb	0	; () banked
  6570  003BFE  2790               	addwf	?___awdiv& (0+255),f,b
  6571  003C00  5190               	movf	?___awdiv& (0+255),w,b
  6572  003C02  0D04               	mullw	4
  6573  003C04  0E01               	movlw	low __powers_
  6574  003C06  24F3               	addwf	243,w,c
  6575  003C08  6EF6               	movwf	tblptrl,c
  6576  003C0A  0E06               	movlw	high __powers_
  6577  003C0C  20F4               	addwfc	244,w,c
  6578  003C0E  6EF7               	movwf	tblptrh,c
  6579  003C10                     	if	0	;There are less than 3 active tblptr bytes
  6580  003C10                     	endif
  6581  003C10  0009               	tblrd		*+
  6582  003C12  CFF5 F09C          	movff	tablat,___flmul@a
  6583  003C16  0009               	tblrd		*+
  6584  003C18  CFF5 F09D          	movff	tablat,___flmul@a+1
  6585  003C1C  0009               	tblrd		*+
  6586  003C1E  CFF5 F09E          	movff	tablat,___flmul@a+2
  6587  003C22  000A               	tblrd		*-
  6588  003C24  CFF5 F09F          	movff	tablat,___flmul@a+3
  6589  003C28  0E00               	movlw	0
  6590  003C2A  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  6591  003C2C  0E64               	movlw	100
  6592  003C2E  6F92               	movwf	___awdiv@divisor& (0+255),b
  6593  003C30  51B9               	movf	scale@scl& (0+255),w,b
  6594  003C32  6F90               	movwf	___awdiv@dividend& (0+255),b
  6595  003C34  6B91               	clrf	(___awdiv@dividend+1)& (0+255),b
  6596  003C36  BF90               	btfsc	___awdiv@dividend& (0+255),7,b
  6597  003C38  0791               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6598  003C3A  EC46  F037         	call	___awdiv	;wreg free
  6599  003C3E  0E12               	movlw	18
  6600  003C40  0100               	movlb	0	; () banked
  6601  003C42  2790               	addwf	?___awdiv& (0+255),f,b
  6602  003C44  5190               	movf	?___awdiv& (0+255),w,b
  6603  003C46  0D04               	mullw	4
  6604  003C48  0E01               	movlw	low __powers_
  6605  003C4A  24F3               	addwf	243,w,c
  6606  003C4C  6EF6               	movwf	tblptrl,c
  6607  003C4E  0E06               	movlw	high __powers_
  6608  003C50  20F4               	addwfc	244,w,c
  6609  003C52  6EF7               	movwf	tblptrh,c
  6610  003C54                     	if	0	;There are less than 3 active tblptr bytes
  6611  003C54                     	endif
  6612  003C54  0009               	tblrd		*+
  6613  003C56  CFF5 F098          	movff	tablat,___flmul@b
  6614  003C5A  0009               	tblrd		*+
  6615  003C5C  CFF5 F099          	movff	tablat,___flmul@b+1
  6616  003C60  0009               	tblrd		*+
  6617  003C62  CFF5 F09A          	movff	tablat,___flmul@b+2
  6618  003C66  000A               	tblrd		*-
  6619  003C68  CFF5 F09B          	movff	tablat,___flmul@b+3
  6620  003C6C  ECA3  F018         	call	___flmul	;wreg free
  6621  003C70  C098  F0B5         	movff	?___flmul,_scale$1960
  6622  003C74  C099  F0B6         	movff	?___flmul+1,_scale$1960+1
  6623  003C78  C09A  F0B7         	movff	?___flmul+2,_scale$1960+2
  6624  003C7C  C09B  F0B8         	movff	?___flmul+3,_scale$1960+3
  6625                           
  6626                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  6627  003C80  C0B5  F098         	movff	_scale$1960,___flmul@b
  6628  003C84  C0B6  F099         	movff	_scale$1960+1,___flmul@b+1
  6629  003C88  C0B7  F09A         	movff	_scale$1960+2,___flmul@b+2
  6630  003C8C  C0B8  F09B         	movff	_scale$1960+3,___flmul@b+3
  6631  003C90  0E00               	movlw	0
  6632  003C92  0100               	movlb	0	; () banked
  6633  003C94  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  6634  003C96  0E0A               	movlw	10
  6635  003C98  6F8C               	movwf	___awmod@divisor& (0+255),b
  6636  003C9A  51B9               	movf	scale@scl& (0+255),w,b
  6637  003C9C  6F8A               	movwf	___awmod@dividend& (0+255),b
  6638  003C9E  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  6639  003CA0  BF8A               	btfsc	___awmod@dividend& (0+255),7,b
  6640  003CA2  078B               	decf	(___awmod@dividend+1)& (0+255),f,b
  6641  003CA4  EC23  F039         	call	___awmod	;wreg free
  6642  003CA8  0100               	movlb	0	; () banked
  6643  003CAA  518A               	movf	?___awmod& (0+255),w,b
  6644  003CAC  0D04               	mullw	4
  6645  003CAE  0E01               	movlw	low __powers_
  6646  003CB0  24F3               	addwf	243,w,c
  6647  003CB2  6EF6               	movwf	tblptrl,c
  6648  003CB4  0E06               	movlw	high __powers_
  6649  003CB6  20F4               	addwfc	244,w,c
  6650  003CB8  6EF7               	movwf	tblptrh,c
  6651  003CBA                     	if	0	;There are less than 3 active tblptr bytes
  6652  003CBA                     	endif
  6653  003CBA  0009               	tblrd		*+
  6654  003CBC  CFF5 F09C          	movff	tablat,___flmul@a
  6655  003CC0  0009               	tblrd		*+
  6656  003CC2  CFF5 F09D          	movff	tablat,___flmul@a+1
  6657  003CC6  0009               	tblrd		*+
  6658  003CC8  CFF5 F09E          	movff	tablat,___flmul@a+2
  6659  003CCC  000A               	tblrd		*-
  6660  003CCE  CFF5 F09F          	movff	tablat,___flmul@a+3
  6661  003CD2  ECA3  F018         	call	___flmul	;wreg free
  6662  003CD6  C098  F0B1         	movff	?___flmul,?_scale
  6663  003CDA  C099  F0B2         	movff	?___flmul+1,?_scale+1
  6664  003CDE  C09A  F0B3         	movff	?___flmul+2,?_scale+2
  6665  003CE2  C09B  F0B4         	movff	?___flmul+3,?_scale+3
  6666  003CE6  EFE1  F01E         	goto	l519
  6667  003CEA                     l8992:
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;doprnt.c: 446: else if(scl > 10)
  6671  003CEA  51B9               	movf	scale@scl& (0+255),w,b
  6672  003CEC  0A80               	xorlw	128
  6673  003CEE  0F75               	addlw	-139
  6674  003CF0  A0D8               	btfss	status,0,c
  6675  003CF2  EF7D  F01E         	goto	u11981
  6676  003CF6  EF7F  F01E         	goto	u11980
  6677  003CFA                     u11981:
  6678  003CFA  EFCD  F01E         	goto	l8998
  6679  003CFE                     u11980:
  6680  003CFE                     
  6681                           ; BSR set to: 0
  6682                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6683  003CFE  0E00               	movlw	0
  6684  003D00  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  6685  003D02  0E0A               	movlw	10
  6686  003D04  6F92               	movwf	___awdiv@divisor& (0+255),b
  6687  003D06  51B9               	movf	scale@scl& (0+255),w,b
  6688  003D08  6F90               	movwf	___awdiv@dividend& (0+255),b
  6689  003D0A  6B91               	clrf	(___awdiv@dividend+1)& (0+255),b
  6690  003D0C  BF90               	btfsc	___awdiv@dividend& (0+255),7,b
  6691  003D0E  0791               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6692  003D10  EC46  F037         	call	___awdiv	;wreg free
  6693  003D14  0E09               	movlw	9
  6694  003D16  0100               	movlb	0	; () banked
  6695  003D18  2790               	addwf	?___awdiv& (0+255),f,b
  6696  003D1A  5190               	movf	?___awdiv& (0+255),w,b
  6697  003D1C  0D04               	mullw	4
  6698  003D1E  0E01               	movlw	low __powers_
  6699  003D20  24F3               	addwf	243,w,c
  6700  003D22  6EF6               	movwf	tblptrl,c
  6701  003D24  0E06               	movlw	high __powers_
  6702  003D26  20F4               	addwfc	244,w,c
  6703  003D28  6EF7               	movwf	tblptrh,c
  6704  003D2A                     	if	0	;There are less than 3 active tblptr bytes
  6705  003D2A                     	endif
  6706  003D2A  0009               	tblrd		*+
  6707  003D2C  CFF5 F098          	movff	tablat,___flmul@b
  6708  003D30  0009               	tblrd		*+
  6709  003D32  CFF5 F099          	movff	tablat,___flmul@b+1
  6710  003D36  0009               	tblrd		*+
  6711  003D38  CFF5 F09A          	movff	tablat,___flmul@b+2
  6712  003D3C  000A               	tblrd		*-
  6713  003D3E  CFF5 F09B          	movff	tablat,___flmul@b+3
  6714  003D42  0E00               	movlw	0
  6715  003D44  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  6716  003D46  0E0A               	movlw	10
  6717  003D48  6F8C               	movwf	___awmod@divisor& (0+255),b
  6718  003D4A  51B9               	movf	scale@scl& (0+255),w,b
  6719  003D4C  6F8A               	movwf	___awmod@dividend& (0+255),b
  6720  003D4E  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  6721  003D50  BF8A               	btfsc	___awmod@dividend& (0+255),7,b
  6722  003D52  078B               	decf	(___awmod@dividend+1)& (0+255),f,b
  6723  003D54  EC23  F039         	call	___awmod	;wreg free
  6724  003D58  0100               	movlb	0	; () banked
  6725  003D5A  518A               	movf	?___awmod& (0+255),w,b
  6726  003D5C  0D04               	mullw	4
  6727  003D5E  0E01               	movlw	low __powers_
  6728  003D60  24F3               	addwf	243,w,c
  6729  003D62  6EF6               	movwf	tblptrl,c
  6730  003D64  0E06               	movlw	high __powers_
  6731  003D66  20F4               	addwfc	244,w,c
  6732  003D68  6EF7               	movwf	tblptrh,c
  6733  003D6A                     	if	0	;There are less than 3 active tblptr bytes
  6734  003D6A                     	endif
  6735  003D6A  0009               	tblrd		*+
  6736  003D6C  CFF5 F09C          	movff	tablat,___flmul@a
  6737  003D70  0009               	tblrd		*+
  6738  003D72  CFF5 F09D          	movff	tablat,___flmul@a+1
  6739  003D76  0009               	tblrd		*+
  6740  003D78  CFF5 F09E          	movff	tablat,___flmul@a+2
  6741  003D7C  000A               	tblrd		*-
  6742  003D7E  CFF5 F09F          	movff	tablat,___flmul@a+3
  6743  003D82  ECA3  F018         	call	___flmul	;wreg free
  6744  003D86  C098  F0B1         	movff	?___flmul,?_scale
  6745  003D8A  C099  F0B2         	movff	?___flmul+1,?_scale+1
  6746  003D8E  C09A  F0B3         	movff	?___flmul+2,?_scale+2
  6747  003D92  C09B  F0B4         	movff	?___flmul+3,?_scale+3
  6748  003D96  EFE1  F01E         	goto	l519
  6749  003D9A                     l8998:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6753  003D9A  51B9               	movf	scale@scl& (0+255),w,b
  6754  003D9C  0D04               	mullw	4
  6755  003D9E  0E01               	movlw	low __powers_
  6756  003DA0  24F3               	addwf	243,w,c
  6757  003DA2  6EF6               	movwf	tblptrl,c
  6758  003DA4  0E06               	movlw	high __powers_
  6759  003DA6  20F4               	addwfc	244,w,c
  6760  003DA8  6EF7               	movwf	tblptrh,c
  6761  003DAA                     	if	0	;There are less than 3 active tblptr bytes
  6762  003DAA                     	endif
  6763  003DAA  0009               	tblrd		*+
  6764  003DAC  CFF5 F0B1          	movff	tablat,?_scale
  6765  003DB0  0009               	tblrd		*+
  6766  003DB2  CFF5 F0B2          	movff	tablat,?_scale+1
  6767  003DB6  0009               	tblrd		*+
  6768  003DB8  CFF5 F0B3          	movff	tablat,?_scale+2
  6769  003DBC  000A               	tblrd		*-
  6770  003DBE  CFF5 F0B4          	movff	tablat,?_scale+3
  6771  003DC2                     l519:
  6772  003DC2  0012               	return		;funcret
  6773  003DC4                     __end_of_scale:
  6774                           	callstack 0
  6775                           
  6776 ;; *************** function ___awmod *****************
  6777 ;; Defined at:
  6778 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  dividend        2   10[BANK0 ] int 
  6781 ;;  divisor         2   12[BANK0 ] int 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  sign            1   15[BANK0 ] unsigned char 
  6784 ;;  counter         1   14[BANK0 ] unsigned char 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  2   10[BANK0 ] int 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6794 ;;      Params:         0       4       0       0       0       0       0
  6795 ;;      Locals:         0       2       0       0       0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0
  6797 ;;      Totals:         0       6       0       0       0       0       0
  6798 ;;Total ram usage:        6 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    5
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_scale
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text10
  6809  007246                     __ptext10:
  6810                           	callstack 0
  6811  007246                     ___awmod:
  6812                           	callstack 23
  6813  007246  0E00               	movlw	0
  6814  007248  0100               	movlb	0	; () banked
  6815  00724A  6F8F               	movwf	___awmod@sign& (0+255),b
  6816  00724C                     
  6817                           ; BSR set to: 0
  6818  00724C  BF8B               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  6819  00724E  EF2D  F039         	goto	u11720
  6820  007252  EF2B  F039         	goto	u11721
  6821  007256                     u11721:
  6822  007256  EF33  F039         	goto	l8818
  6823  00725A                     u11720:
  6824  00725A                     
  6825                           ; BSR set to: 0
  6826  00725A  6D8A               	negf	___awmod@dividend& (0+255),b
  6827  00725C  1F8B               	comf	(___awmod@dividend+1)& (0+255),f,b
  6828  00725E  B0D8               	btfsc	status,0,c
  6829  007260  2B8B               	incf	(___awmod@dividend+1)& (0+255),f,b
  6830  007262                     
  6831                           ; BSR set to: 0
  6832  007262  0E01               	movlw	1
  6833  007264  6F8F               	movwf	___awmod@sign& (0+255),b
  6834  007266                     l8818:
  6835                           
  6836                           ; BSR set to: 0
  6837  007266  BF8D               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  6838  007268  EF3A  F039         	goto	u11730
  6839  00726C  EF38  F039         	goto	u11731
  6840  007270                     u11731:
  6841  007270  EF3E  F039         	goto	l8822
  6842  007274                     u11730:
  6843  007274                     
  6844                           ; BSR set to: 0
  6845  007274  6D8C               	negf	___awmod@divisor& (0+255),b
  6846  007276  1F8D               	comf	(___awmod@divisor+1)& (0+255),f,b
  6847  007278  B0D8               	btfsc	status,0,c
  6848  00727A  2B8D               	incf	(___awmod@divisor+1)& (0+255),f,b
  6849  00727C                     l8822:
  6850                           
  6851                           ; BSR set to: 0
  6852  00727C  518C               	movf	___awmod@divisor& (0+255),w,b
  6853  00727E  118D               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6854  007280  B4D8               	btfsc	status,2,c
  6855  007282  EF45  F039         	goto	u11741
  6856  007286  EF47  F039         	goto	u11740
  6857  00728A                     u11741:
  6858  00728A  EF6B  F039         	goto	l8838
  6859  00728E                     u11740:
  6860  00728E                     
  6861                           ; BSR set to: 0
  6862  00728E  0E01               	movlw	1
  6863  007290  6F8E               	movwf	___awmod@counter& (0+255),b
  6864  007292  EF4F  F039         	goto	l8828
  6865  007296                     l8826:
  6866                           
  6867                           ; BSR set to: 0
  6868  007296  90D8               	bcf	status,0,c
  6869  007298  378C               	rlcf	___awmod@divisor& (0+255),f,b
  6870  00729A  378D               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6871  00729C  2B8E               	incf	___awmod@counter& (0+255),f,b
  6872  00729E                     l8828:
  6873                           
  6874                           ; BSR set to: 0
  6875  00729E  AF8D               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6876  0072A0  EF54  F039         	goto	u11751
  6877  0072A4  EF56  F039         	goto	u11750
  6878  0072A8                     u11751:
  6879  0072A8  EF4B  F039         	goto	l8826
  6880  0072AC                     u11750:
  6881  0072AC                     l8830:
  6882                           
  6883                           ; BSR set to: 0
  6884  0072AC  518C               	movf	___awmod@divisor& (0+255),w,b
  6885  0072AE  5D8A               	subwf	___awmod@dividend& (0+255),w,b
  6886  0072B0  518D               	movf	(___awmod@divisor+1)& (0+255),w,b
  6887  0072B2  598B               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6888  0072B4  A0D8               	btfss	status,0,c
  6889  0072B6  EF5F  F039         	goto	u11761
  6890  0072BA  EF61  F039         	goto	u11760
  6891  0072BE                     u11761:
  6892  0072BE  EF65  F039         	goto	l8834
  6893  0072C2                     u11760:
  6894  0072C2                     
  6895                           ; BSR set to: 0
  6896  0072C2  518C               	movf	___awmod@divisor& (0+255),w,b
  6897  0072C4  5F8A               	subwf	___awmod@dividend& (0+255),f,b
  6898  0072C6  518D               	movf	(___awmod@divisor+1)& (0+255),w,b
  6899  0072C8  5B8B               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6900  0072CA                     l8834:
  6901                           
  6902                           ; BSR set to: 0
  6903  0072CA  90D8               	bcf	status,0,c
  6904  0072CC  338D               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6905  0072CE  338C               	rrcf	___awmod@divisor& (0+255),f,b
  6906  0072D0                     
  6907                           ; BSR set to: 0
  6908  0072D0  2F8E               	decfsz	___awmod@counter& (0+255),f,b
  6909  0072D2  EF56  F039         	goto	l8830
  6910  0072D6                     l8838:
  6911                           
  6912                           ; BSR set to: 0
  6913  0072D6  518F               	movf	___awmod@sign& (0+255),w,b
  6914  0072D8  B4D8               	btfsc	status,2,c
  6915  0072DA  EF71  F039         	goto	u11771
  6916  0072DE  EF73  F039         	goto	u11770
  6917  0072E2                     u11771:
  6918  0072E2  EF77  F039         	goto	l8842
  6919  0072E6                     u11770:
  6920  0072E6                     
  6921                           ; BSR set to: 0
  6922  0072E6  6D8A               	negf	___awmod@dividend& (0+255),b
  6923  0072E8  1F8B               	comf	(___awmod@dividend+1)& (0+255),f,b
  6924  0072EA  B0D8               	btfsc	status,0,c
  6925  0072EC  2B8B               	incf	(___awmod@dividend+1)& (0+255),f,b
  6926  0072EE                     l8842:
  6927                           
  6928                           ; BSR set to: 0
  6929  0072EE  C08A  F08A         	movff	___awmod@dividend,?___awmod
  6930  0072F2  C08B  F08B         	movff	___awmod@dividend+1,?___awmod+1
  6931  0072F6                     
  6932                           ; BSR set to: 0
  6933  0072F6  0012               	return		;funcret
  6934  0072F8                     __end_of___awmod:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function ___awdiv *****************
  6938 ;; Defined at:
  6939 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  dividend        2   16[BANK0 ] int 
  6942 ;;  divisor         2   18[BANK0 ] int 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  quotient        2   22[BANK0 ] int 
  6945 ;;  sign            1   21[BANK0 ] unsigned char 
  6946 ;;  counter         1   20[BANK0 ] unsigned char 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  2   16[BANK0 ] int 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6956 ;;      Params:         0       4       0       0       0       0       0
  6957 ;;      Locals:         0       4       0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0
  6959 ;;      Totals:         0       8       0       0       0       0       0
  6960 ;;Total ram usage:        8 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    5
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_scale
  6967 ;;		_sprintf
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text11
  6972  006E8C                     __ptext11:
  6973                           	callstack 0
  6974  006E8C                     ___awdiv:
  6975                           	callstack 23
  6976  006E8C  0E00               	movlw	0
  6977  006E8E  0100               	movlb	0	; () banked
  6978  006E90  6F95               	movwf	___awdiv@sign& (0+255),b
  6979  006E92                     
  6980                           ; BSR set to: 0
  6981  006E92  BF93               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6982  006E94  EF50  F037         	goto	u11660
  6983  006E98  EF4E  F037         	goto	u11661
  6984  006E9C                     u11661:
  6985  006E9C  EF56  F037         	goto	l8774
  6986  006EA0                     u11660:
  6987  006EA0                     
  6988                           ; BSR set to: 0
  6989  006EA0  6D92               	negf	___awdiv@divisor& (0+255),b
  6990  006EA2  1F93               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6991  006EA4  B0D8               	btfsc	status,0,c
  6992  006EA6  2B93               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6993  006EA8                     
  6994                           ; BSR set to: 0
  6995  006EA8  0E01               	movlw	1
  6996  006EAA  6F95               	movwf	___awdiv@sign& (0+255),b
  6997  006EAC                     l8774:
  6998                           
  6999                           ; BSR set to: 0
  7000  006EAC  BF91               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  7001  006EAE  EF5D  F037         	goto	u11670
  7002  006EB2  EF5B  F037         	goto	u11671
  7003  006EB6                     u11671:
  7004  006EB6  EF63  F037         	goto	l8780
  7005  006EBA                     u11670:
  7006  006EBA                     
  7007                           ; BSR set to: 0
  7008  006EBA  6D90               	negf	___awdiv@dividend& (0+255),b
  7009  006EBC  1F91               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7010  006EBE  B0D8               	btfsc	status,0,c
  7011  006EC0  2B91               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7012  006EC2                     
  7013                           ; BSR set to: 0
  7014  006EC2  0E01               	movlw	1
  7015  006EC4  1B95               	xorwf	___awdiv@sign& (0+255),f,b
  7016  006EC6                     l8780:
  7017                           
  7018                           ; BSR set to: 0
  7019  006EC6  0E00               	movlw	0
  7020  006EC8  6F97               	movwf	(___awdiv@quotient+1)& (0+255),b
  7021  006ECA  0E00               	movlw	0
  7022  006ECC  6F96               	movwf	___awdiv@quotient& (0+255),b
  7023  006ECE                     
  7024                           ; BSR set to: 0
  7025  006ECE  5192               	movf	___awdiv@divisor& (0+255),w,b
  7026  006ED0  1193               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7027  006ED2  B4D8               	btfsc	status,2,c
  7028  006ED4  EF6E  F037         	goto	u11681
  7029  006ED8  EF70  F037         	goto	u11680
  7030  006EDC                     u11681:
  7031  006EDC  EF98  F037         	goto	l8802
  7032  006EE0                     u11680:
  7033  006EE0                     
  7034                           ; BSR set to: 0
  7035  006EE0  0E01               	movlw	1
  7036  006EE2  6F94               	movwf	___awdiv@counter& (0+255),b
  7037  006EE4  EF78  F037         	goto	l8788
  7038  006EE8                     l8786:
  7039                           
  7040                           ; BSR set to: 0
  7041  006EE8  90D8               	bcf	status,0,c
  7042  006EEA  3792               	rlcf	___awdiv@divisor& (0+255),f,b
  7043  006EEC  3793               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7044  006EEE  2B94               	incf	___awdiv@counter& (0+255),f,b
  7045  006EF0                     l8788:
  7046                           
  7047                           ; BSR set to: 0
  7048  006EF0  AF93               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7049  006EF2  EF7D  F037         	goto	u11691
  7050  006EF6  EF7F  F037         	goto	u11690
  7051  006EFA                     u11691:
  7052  006EFA  EF74  F037         	goto	l8786
  7053  006EFE                     u11690:
  7054  006EFE                     l8790:
  7055                           
  7056                           ; BSR set to: 0
  7057  006EFE  90D8               	bcf	status,0,c
  7058  006F00  3796               	rlcf	___awdiv@quotient& (0+255),f,b
  7059  006F02  3797               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7060  006F04                     
  7061                           ; BSR set to: 0
  7062  006F04  5192               	movf	___awdiv@divisor& (0+255),w,b
  7063  006F06  5D90               	subwf	___awdiv@dividend& (0+255),w,b
  7064  006F08  5193               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7065  006F0A  5991               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7066  006F0C  A0D8               	btfss	status,0,c
  7067  006F0E  EF8B  F037         	goto	u11701
  7068  006F12  EF8D  F037         	goto	u11700
  7069  006F16                     u11701:
  7070  006F16  EF92  F037         	goto	l8798
  7071  006F1A                     u11700:
  7072  006F1A                     
  7073                           ; BSR set to: 0
  7074  006F1A  5192               	movf	___awdiv@divisor& (0+255),w,b
  7075  006F1C  5F90               	subwf	___awdiv@dividend& (0+255),f,b
  7076  006F1E  5193               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7077  006F20  5B91               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7078  006F22                     
  7079                           ; BSR set to: 0
  7080  006F22  8196               	bsf	___awdiv@quotient& (0+255),0,b
  7081  006F24                     l8798:
  7082                           
  7083                           ; BSR set to: 0
  7084  006F24  90D8               	bcf	status,0,c
  7085  006F26  3393               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7086  006F28  3392               	rrcf	___awdiv@divisor& (0+255),f,b
  7087  006F2A                     
  7088                           ; BSR set to: 0
  7089  006F2A  2F94               	decfsz	___awdiv@counter& (0+255),f,b
  7090  006F2C  EF7F  F037         	goto	l8790
  7091  006F30                     l8802:
  7092                           
  7093                           ; BSR set to: 0
  7094  006F30  5195               	movf	___awdiv@sign& (0+255),w,b
  7095  006F32  B4D8               	btfsc	status,2,c
  7096  006F34  EF9E  F037         	goto	u11711
  7097  006F38  EFA0  F037         	goto	u11710
  7098  006F3C                     u11711:
  7099  006F3C  EFA4  F037         	goto	l8806
  7100  006F40                     u11710:
  7101  006F40                     
  7102                           ; BSR set to: 0
  7103  006F40  6D96               	negf	___awdiv@quotient& (0+255),b
  7104  006F42  1F97               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7105  006F44  B0D8               	btfsc	status,0,c
  7106  006F46  2B97               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7107  006F48                     l8806:
  7108                           
  7109                           ; BSR set to: 0
  7110  006F48  C096  F090         	movff	___awdiv@quotient,?___awdiv
  7111  006F4C  C097  F091         	movff	___awdiv@quotient+1,?___awdiv+1
  7112  006F50                     
  7113                           ; BSR set to: 0
  7114  006F50  0012               	return		;funcret
  7115  006F52                     __end_of___awdiv:
  7116                           	callstack 0
  7117                           
  7118 ;; *************** function _isdigit *****************
  7119 ;; Defined at:
  7120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  c               1    wreg     unsigned char 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  c               1   12[BANK0 ] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;		None               void
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7134 ;;      Params:         0       0       0       0       0       0       0
  7135 ;;      Locals:         0       2       0       0       0       0       0
  7136 ;;      Temps:          0       1       0       0       0       0       0
  7137 ;;      Totals:         0       3       0       0       0       0       0
  7138 ;;Total ram usage:        3 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    5
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_sprintf
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text12
  7149  000012                     __ptext12:
  7150                           	callstack 0
  7151  000012                     _isdigit:
  7152                           	callstack 24
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;incstack = 0
  7156                           ;isdigit@c stored from wreg
  7157  000012  0100               	movlb	0	; () banked
  7158  000014  6F8C               	movwf	isdigit@c& (0+255),b
  7159  000016  0E00               	movlw	0
  7160  000018  0100               	movlb	0	; () banked
  7161  00001A  6F8B               	movwf	_isdigit$1745& (0+255),b
  7162  00001C                     
  7163                           ; BSR set to: 0
  7164  00001C  0E3A               	movlw	58
  7165  00001E  618C               	cpfslt	isdigit@c& (0+255),b
  7166  000020  EF14  F000         	goto	u11991
  7167  000024  EF16  F000         	goto	u11990
  7168  000028                     u11991:
  7169  000028  EF20  F000         	goto	l9010
  7170  00002C                     u11990:
  7171  00002C                     
  7172                           ; BSR set to: 0
  7173  00002C  0E2F               	movlw	47
  7174  00002E  658C               	cpfsgt	isdigit@c& (0+255),b
  7175  000030  EF1C  F000         	goto	u12001
  7176  000034  EF1E  F000         	goto	u12000
  7177  000038                     u12001:
  7178  000038  EF20  F000         	goto	l9010
  7179  00003C                     u12000:
  7180  00003C                     
  7181                           ; BSR set to: 0
  7182  00003C  0E01               	movlw	1
  7183  00003E  6F8B               	movwf	_isdigit$1745& (0+255),b
  7184  000040                     l9010:
  7185                           
  7186                           ; BSR set to: 0
  7187  000040  C08B  F08A         	movff	_isdigit$1745,??_isdigit
  7188  000044  318A               	rrcf	??_isdigit& (0+255),w,b
  7189  000046                     
  7190                           ; BSR set to: 0
  7191  000046  0012               	return		;funcret
  7192  000048                     __end_of_isdigit:
  7193                           	callstack 0
  7194                           
  7195 ;; *************** function _fround *****************
  7196 ;; Defined at:
  7197 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  prec            1    wreg     unsigned char 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  prec            1   61[BANK0 ] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  4   49[BANK0 ] unsigned char 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7211 ;;      Params:         0       4       0       0       0       0       0
  7212 ;;      Locals:         0       9       0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0
  7214 ;;      Totals:         0      13       0       0       0       0       0
  7215 ;;Total ram usage:       13 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    6
  7218 ;; This function calls:
  7219 ;;		___flmul
  7220 ;;		___lwdiv
  7221 ;;		___lwmod
  7222 ;; This function is called by:
  7223 ;;		_sprintf
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           	psect	text13
  7228  005032                     __ptext13:
  7229                           	callstack 0
  7230  005032                     _fround:
  7231                           	callstack 23
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;incstack = 0
  7235                           ;fround@prec stored from wreg
  7236  005032  0100               	movlb	0	; () banked
  7237  005034  6FBD               	movwf	fround@prec& (0+255),b
  7238  005036                     
  7239                           ;doprnt.c: 421: if(prec>=110)
  7240  005036  0E6D               	movlw	109
  7241  005038  0100               	movlb	0	; () banked
  7242  00503A  65BD               	cpfsgt	fround@prec& (0+255),b
  7243  00503C  EF22  F028         	goto	u11921
  7244  005040  EF24  F028         	goto	u11920
  7245  005044                     u11921:
  7246  005044  EFD6  F028         	goto	l8954
  7247  005048                     u11920:
  7248  005048                     
  7249                           ; BSR set to: 0
  7250                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7251  005048  0E00               	movlw	0
  7252  00504A  6F9C               	movwf	___flmul@a& (0+255),b
  7253  00504C  0E00               	movlw	0
  7254  00504E  6F9D               	movwf	(___flmul@a+1)& (0+255),b
  7255  005050  0E00               	movlw	0
  7256  005052  6F9E               	movwf	(___flmul@a+2)& (0+255),b
  7257  005054  0E3F               	movlw	63
  7258  005056  6F9F               	movwf	(___flmul@a+3)& (0+255),b
  7259  005058  0E00               	movlw	0
  7260  00505A  6F92               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7261  00505C  0E64               	movlw	100
  7262  00505E  6F91               	movwf	___lwdiv@divisor& (0+255),b
  7263  005060  C0BD  F08F         	movff	fround@prec,___lwdiv@dividend
  7264  005064  6B90               	clrf	(___lwdiv@dividend+1)& (0+255),b
  7265  005066  EC4F  F03E         	call	___lwdiv	;wreg free
  7266  00506A  0100               	movlb	0	; () banked
  7267  00506C  90D8               	bcf	status,0,c
  7268  00506E  378F               	rlcf	?___lwdiv& (0+255),f,b
  7269  005070  3790               	rlcf	(?___lwdiv+1)& (0+255),f,b
  7270  005072  90D8               	bcf	status,0,c
  7271  005074  378F               	rlcf	?___lwdiv& (0+255),f,b
  7272  005076  3790               	rlcf	(?___lwdiv+1)& (0+255),f,b
  7273  005078  0E48               	movlw	72
  7274  00507A  278F               	addwf	?___lwdiv& (0+255),f,b
  7275  00507C  0E00               	movlw	0
  7276  00507E  2390               	addwfc	(?___lwdiv+1)& (0+255),f,b
  7277  005080  0E35               	movlw	low __npowers_
  7278  005082  258F               	addwf	?___lwdiv& (0+255),w,b
  7279  005084  6EF6               	movwf	tblptrl,c
  7280  005086  0E06               	movlw	high __npowers_
  7281  005088  2190               	addwfc	(?___lwdiv+1)& (0+255),w,b
  7282  00508A  6EF7               	movwf	tblptrh,c
  7283  00508C                     	if	0	;There are less than 3 active tblptr bytes
  7284  00508C                     	endif
  7285  00508C  0009               	tblrd		*+
  7286  00508E  CFF5 F098          	movff	tablat,___flmul@b
  7287  005092  0009               	tblrd		*+
  7288  005094  CFF5 F099          	movff	tablat,___flmul@b+1
  7289  005098  0009               	tblrd		*+
  7290  00509A  CFF5 F09A          	movff	tablat,___flmul@b+2
  7291  00509E  000A               	tblrd		*-
  7292  0050A0  CFF5 F09B          	movff	tablat,___flmul@b+3
  7293  0050A4  ECA3  F018         	call	___flmul	;wreg free
  7294  0050A8  C098  F0B9         	movff	?___flmul,_fround$1958
  7295  0050AC  C099  F0BA         	movff	?___flmul+1,_fround$1958+1
  7296  0050B0  C09A  F0BB         	movff	?___flmul+2,_fround$1958+2
  7297  0050B4  C09B  F0BC         	movff	?___flmul+3,_fround$1958+3
  7298                           
  7299                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7300  0050B8  0E00               	movlw	0
  7301  0050BA  0100               	movlb	0	; () banked
  7302  0050BC  6F92               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7303  0050BE  0E0A               	movlw	10
  7304  0050C0  6F91               	movwf	___lwdiv@divisor& (0+255),b
  7305  0050C2  0E00               	movlw	0
  7306  0050C4  6F8D               	movwf	(___lwmod@divisor+1)& (0+255),b
  7307  0050C6  0E64               	movlw	100
  7308  0050C8  6F8C               	movwf	___lwmod@divisor& (0+255),b
  7309  0050CA  C0BD  F08A         	movff	fround@prec,___lwmod@dividend
  7310  0050CE  6B8B               	clrf	(___lwmod@dividend+1)& (0+255),b
  7311  0050D0  ECC4  F03E         	call	___lwmod	;wreg free
  7312  0050D4  C08A  F08F         	movff	?___lwmod,___lwdiv@dividend
  7313  0050D8  C08B  F090         	movff	?___lwmod+1,___lwdiv@dividend+1
  7314  0050DC  EC4F  F03E         	call	___lwdiv	;wreg free
  7315  0050E0  0100               	movlb	0	; () banked
  7316  0050E2  90D8               	bcf	status,0,c
  7317  0050E4  378F               	rlcf	?___lwdiv& (0+255),f,b
  7318  0050E6  3790               	rlcf	(?___lwdiv+1)& (0+255),f,b
  7319  0050E8  90D8               	bcf	status,0,c
  7320  0050EA  378F               	rlcf	?___lwdiv& (0+255),f,b
  7321  0050EC  3790               	rlcf	(?___lwdiv+1)& (0+255),f,b
  7322  0050EE  0E24               	movlw	36
  7323  0050F0  278F               	addwf	?___lwdiv& (0+255),f,b
  7324  0050F2  0E00               	movlw	0
  7325  0050F4  2390               	addwfc	(?___lwdiv+1)& (0+255),f,b
  7326  0050F6  0E35               	movlw	low __npowers_
  7327  0050F8  258F               	addwf	?___lwdiv& (0+255),w,b
  7328  0050FA  6EF6               	movwf	tblptrl,c
  7329  0050FC  0E06               	movlw	high __npowers_
  7330  0050FE  2190               	addwfc	(?___lwdiv+1)& (0+255),w,b
  7331  005100  6EF7               	movwf	tblptrh,c
  7332  005102                     	if	0	;There are less than 3 active tblptr bytes
  7333  005102                     	endif
  7334  005102  0009               	tblrd		*+
  7335  005104  CFF5 F09C          	movff	tablat,___flmul@a
  7336  005108  0009               	tblrd		*+
  7337  00510A  CFF5 F09D          	movff	tablat,___flmul@a+1
  7338  00510E  0009               	tblrd		*+
  7339  005110  CFF5 F09E          	movff	tablat,___flmul@a+2
  7340  005114  000A               	tblrd		*-
  7341  005116  CFF5 F09F          	movff	tablat,___flmul@a+3
  7342  00511A  C0B9  F098         	movff	_fround$1958,___flmul@b
  7343  00511E  C0BA  F099         	movff	_fround$1958+1,___flmul@b+1
  7344  005122  C0BB  F09A         	movff	_fround$1958+2,___flmul@b+2
  7345  005126  C0BC  F09B         	movff	_fround$1958+3,___flmul@b+3
  7346  00512A  ECA3  F018         	call	___flmul	;wreg free
  7347  00512E  C098  F0B5         	movff	?___flmul,_fround$1959
  7348  005132  C099  F0B6         	movff	?___flmul+1,_fround$1959+1
  7349  005136  C09A  F0B7         	movff	?___flmul+2,_fround$1959+2
  7350  00513A  C09B  F0B8         	movff	?___flmul+3,_fround$1959+3
  7351                           
  7352                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7353  00513E  C0B5  F098         	movff	_fround$1959,___flmul@b
  7354  005142  C0B6  F099         	movff	_fround$1959+1,___flmul@b+1
  7355  005146  C0B7  F09A         	movff	_fround$1959+2,___flmul@b+2
  7356  00514A  C0B8  F09B         	movff	_fround$1959+3,___flmul@b+3
  7357  00514E  0E00               	movlw	0
  7358  005150  0100               	movlb	0	; () banked
  7359  005152  6F8D               	movwf	(___lwmod@divisor+1)& (0+255),b
  7360  005154  0E0A               	movlw	10
  7361  005156  6F8C               	movwf	___lwmod@divisor& (0+255),b
  7362  005158  C0BD  F08A         	movff	fround@prec,___lwmod@dividend
  7363  00515C  6B8B               	clrf	(___lwmod@dividend+1)& (0+255),b
  7364  00515E  ECC4  F03E         	call	___lwmod	;wreg free
  7365  005162  0100               	movlb	0	; () banked
  7366  005164  90D8               	bcf	status,0,c
  7367  005166  378A               	rlcf	?___lwmod& (0+255),f,b
  7368  005168  378B               	rlcf	(?___lwmod+1)& (0+255),f,b
  7369  00516A  90D8               	bcf	status,0,c
  7370  00516C  378A               	rlcf	?___lwmod& (0+255),f,b
  7371  00516E  378B               	rlcf	(?___lwmod+1)& (0+255),f,b
  7372  005170  0E35               	movlw	low __npowers_
  7373  005172  258A               	addwf	?___lwmod& (0+255),w,b
  7374  005174  6EF6               	movwf	tblptrl,c
  7375  005176  0E06               	movlw	high __npowers_
  7376  005178  218B               	addwfc	(?___lwmod+1)& (0+255),w,b
  7377  00517A  6EF7               	movwf	tblptrh,c
  7378  00517C                     	if	0	;There are less than 3 active tblptr bytes
  7379  00517C                     	endif
  7380  00517C  0009               	tblrd		*+
  7381  00517E  CFF5 F09C          	movff	tablat,___flmul@a
  7382  005182  0009               	tblrd		*+
  7383  005184  CFF5 F09D          	movff	tablat,___flmul@a+1
  7384  005188  0009               	tblrd		*+
  7385  00518A  CFF5 F09E          	movff	tablat,___flmul@a+2
  7386  00518E  000A               	tblrd		*-
  7387  005190  CFF5 F09F          	movff	tablat,___flmul@a+3
  7388  005194  ECA3  F018         	call	___flmul	;wreg free
  7389  005198  C098  F0B1         	movff	?___flmul,?_fround
  7390  00519C  C099  F0B2         	movff	?___flmul+1,?_fround+1
  7391  0051A0  C09A  F0B3         	movff	?___flmul+2,?_fround+2
  7392  0051A4  C09B  F0B4         	movff	?___flmul+3,?_fround+3
  7393  0051A8  EF73  F029         	goto	l512
  7394  0051AC                     l8954:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;doprnt.c: 423: else if(prec > 10)
  7398  0051AC  0E0A               	movlw	10
  7399  0051AE  65BD               	cpfsgt	fround@prec& (0+255),b
  7400  0051B0  EFDC  F028         	goto	u11931
  7401  0051B4  EFDE  F028         	goto	u11930
  7402  0051B8                     u11931:
  7403  0051B8  EF4D  F029         	goto	l8960
  7404  0051BC                     u11930:
  7405  0051BC                     
  7406                           ; BSR set to: 0
  7407                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7408  0051BC  0E00               	movlw	0
  7409  0051BE  6F9C               	movwf	___flmul@a& (0+255),b
  7410  0051C0  0E00               	movlw	0
  7411  0051C2  6F9D               	movwf	(___flmul@a+1)& (0+255),b
  7412  0051C4  0E00               	movlw	0
  7413  0051C6  6F9E               	movwf	(___flmul@a+2)& (0+255),b
  7414  0051C8  0E3F               	movlw	63
  7415  0051CA  6F9F               	movwf	(___flmul@a+3)& (0+255),b
  7416  0051CC  0E00               	movlw	0
  7417  0051CE  6F92               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7418  0051D0  0E0A               	movlw	10
  7419  0051D2  6F91               	movwf	___lwdiv@divisor& (0+255),b
  7420  0051D4  C0BD  F08F         	movff	fround@prec,___lwdiv@dividend
  7421  0051D8  6B90               	clrf	(___lwdiv@dividend+1)& (0+255),b
  7422  0051DA  EC4F  F03E         	call	___lwdiv	;wreg free
  7423  0051DE  0100               	movlb	0	; () banked
  7424  0051E0  90D8               	bcf	status,0,c
  7425  0051E2  378F               	rlcf	?___lwdiv& (0+255),f,b
  7426  0051E4  3790               	rlcf	(?___lwdiv+1)& (0+255),f,b
  7427  0051E6  90D8               	bcf	status,0,c
  7428  0051E8  378F               	rlcf	?___lwdiv& (0+255),f,b
  7429  0051EA  3790               	rlcf	(?___lwdiv+1)& (0+255),f,b
  7430  0051EC  0E24               	movlw	36
  7431  0051EE  278F               	addwf	?___lwdiv& (0+255),f,b
  7432  0051F0  0E00               	movlw	0
  7433  0051F2  2390               	addwfc	(?___lwdiv+1)& (0+255),f,b
  7434  0051F4  0E35               	movlw	low __npowers_
  7435  0051F6  258F               	addwf	?___lwdiv& (0+255),w,b
  7436  0051F8  6EF6               	movwf	tblptrl,c
  7437  0051FA  0E06               	movlw	high __npowers_
  7438  0051FC  2190               	addwfc	(?___lwdiv+1)& (0+255),w,b
  7439  0051FE  6EF7               	movwf	tblptrh,c
  7440  005200                     	if	0	;There are less than 3 active tblptr bytes
  7441  005200                     	endif
  7442  005200  0009               	tblrd		*+
  7443  005202  CFF5 F098          	movff	tablat,___flmul@b
  7444  005206  0009               	tblrd		*+
  7445  005208  CFF5 F099          	movff	tablat,___flmul@b+1
  7446  00520C  0009               	tblrd		*+
  7447  00520E  CFF5 F09A          	movff	tablat,___flmul@b+2
  7448  005212  000A               	tblrd		*-
  7449  005214  CFF5 F09B          	movff	tablat,___flmul@b+3
  7450  005218  ECA3  F018         	call	___flmul	;wreg free
  7451  00521C  C098  F0B9         	movff	?___flmul,_fround$1958
  7452  005220  C099  F0BA         	movff	?___flmul+1,_fround$1958+1
  7453  005224  C09A  F0BB         	movff	?___flmul+2,_fround$1958+2
  7454  005228  C09B  F0BC         	movff	?___flmul+3,_fround$1958+3
  7455                           
  7456                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7457  00522C  C0B9  F098         	movff	_fround$1958,___flmul@b
  7458  005230  C0BA  F099         	movff	_fround$1958+1,___flmul@b+1
  7459  005234  C0BB  F09A         	movff	_fround$1958+2,___flmul@b+2
  7460  005238  C0BC  F09B         	movff	_fround$1958+3,___flmul@b+3
  7461  00523C  0E00               	movlw	0
  7462  00523E  0100               	movlb	0	; () banked
  7463  005240  6F8D               	movwf	(___lwmod@divisor+1)& (0+255),b
  7464  005242  0E0A               	movlw	10
  7465  005244  6F8C               	movwf	___lwmod@divisor& (0+255),b
  7466  005246  C0BD  F08A         	movff	fround@prec,___lwmod@dividend
  7467  00524A  6B8B               	clrf	(___lwmod@dividend+1)& (0+255),b
  7468  00524C  ECC4  F03E         	call	___lwmod	;wreg free
  7469  005250  0100               	movlb	0	; () banked
  7470  005252  90D8               	bcf	status,0,c
  7471  005254  378A               	rlcf	?___lwmod& (0+255),f,b
  7472  005256  378B               	rlcf	(?___lwmod+1)& (0+255),f,b
  7473  005258  90D8               	bcf	status,0,c
  7474  00525A  378A               	rlcf	?___lwmod& (0+255),f,b
  7475  00525C  378B               	rlcf	(?___lwmod+1)& (0+255),f,b
  7476  00525E  0E35               	movlw	low __npowers_
  7477  005260  258A               	addwf	?___lwmod& (0+255),w,b
  7478  005262  6EF6               	movwf	tblptrl,c
  7479  005264  0E06               	movlw	high __npowers_
  7480  005266  218B               	addwfc	(?___lwmod+1)& (0+255),w,b
  7481  005268  6EF7               	movwf	tblptrh,c
  7482  00526A                     	if	0	;There are less than 3 active tblptr bytes
  7483  00526A                     	endif
  7484  00526A  0009               	tblrd		*+
  7485  00526C  CFF5 F09C          	movff	tablat,___flmul@a
  7486  005270  0009               	tblrd		*+
  7487  005272  CFF5 F09D          	movff	tablat,___flmul@a+1
  7488  005276  0009               	tblrd		*+
  7489  005278  CFF5 F09E          	movff	tablat,___flmul@a+2
  7490  00527C  000A               	tblrd		*-
  7491  00527E  CFF5 F09F          	movff	tablat,___flmul@a+3
  7492  005282  ECA3  F018         	call	___flmul	;wreg free
  7493  005286  C098  F0B1         	movff	?___flmul,?_fround
  7494  00528A  C099  F0B2         	movff	?___flmul+1,?_fround+1
  7495  00528E  C09A  F0B3         	movff	?___flmul+2,?_fround+2
  7496  005292  C09B  F0B4         	movff	?___flmul+3,?_fround+3
  7497  005296  EF73  F029         	goto	l512
  7498  00529A                     l8960:
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  7502  00529A  51BD               	movf	fround@prec& (0+255),w,b
  7503  00529C  0D04               	mullw	4
  7504  00529E  0E35               	movlw	low __npowers_
  7505  0052A0  24F3               	addwf	243,w,c
  7506  0052A2  6EF6               	movwf	tblptrl,c
  7507  0052A4  0E06               	movlw	high __npowers_
  7508  0052A6  20F4               	addwfc	244,w,c
  7509  0052A8  6EF7               	movwf	tblptrh,c
  7510  0052AA                     	if	0	;There are less than 3 active tblptr bytes
  7511  0052AA                     	endif
  7512  0052AA  0009               	tblrd		*+
  7513  0052AC  CFF5 F098          	movff	tablat,___flmul@b
  7514  0052B0  0009               	tblrd		*+
  7515  0052B2  CFF5 F099          	movff	tablat,___flmul@b+1
  7516  0052B6  0009               	tblrd		*+
  7517  0052B8  CFF5 F09A          	movff	tablat,___flmul@b+2
  7518  0052BC  000A               	tblrd		*-
  7519  0052BE  CFF5 F09B          	movff	tablat,___flmul@b+3
  7520  0052C2  0E00               	movlw	0
  7521  0052C4  6F9C               	movwf	___flmul@a& (0+255),b
  7522  0052C6  0E00               	movlw	0
  7523  0052C8  6F9D               	movwf	(___flmul@a+1)& (0+255),b
  7524  0052CA  0E00               	movlw	0
  7525  0052CC  6F9E               	movwf	(___flmul@a+2)& (0+255),b
  7526  0052CE  0E3F               	movlw	63
  7527  0052D0  6F9F               	movwf	(___flmul@a+3)& (0+255),b
  7528  0052D2  ECA3  F018         	call	___flmul	;wreg free
  7529  0052D6  C098  F0B1         	movff	?___flmul,?_fround
  7530  0052DA  C099  F0B2         	movff	?___flmul+1,?_fround+1
  7531  0052DE  C09A  F0B3         	movff	?___flmul+2,?_fround+2
  7532  0052E2  C09B  F0B4         	movff	?___flmul+3,?_fround+3
  7533  0052E6                     l512:
  7534  0052E6  0012               	return		;funcret
  7535  0052E8                     __end_of_fround:
  7536                           	callstack 0
  7537                           
  7538 ;; *************** function ___lwmod *****************
  7539 ;; Defined at:
  7540 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  dividend        2   10[BANK0 ] unsigned int 
  7543 ;;  divisor         2   12[BANK0 ] unsigned int 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  counter         1   14[BANK0 ] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  2   10[BANK0 ] unsigned int 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2, status,0
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7555 ;;      Params:         0       4       0       0       0       0       0
  7556 ;;      Locals:         0       1       0       0       0       0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0
  7558 ;;      Totals:         0       5       0       0       0       0       0
  7559 ;;Total ram usage:        5 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    5
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_fround
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text14
  7570  007D88                     __ptext14:
  7571                           	callstack 0
  7572  007D88                     ___lwmod:
  7573                           	callstack 23
  7574  007D88  0100               	movlb	0	; () banked
  7575  007D8A  518C               	movf	___lwmod@divisor& (0+255),w,b
  7576  007D8C  118D               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7577  007D8E  B4D8               	btfsc	status,2,c
  7578  007D90  EFCC  F03E         	goto	u11811
  7579  007D94  EFCE  F03E         	goto	u11810
  7580  007D98                     u11811:
  7581  007D98  EFF2  F03E         	goto	l1155
  7582  007D9C                     u11810:
  7583  007D9C                     
  7584                           ; BSR set to: 0
  7585  007D9C  0E01               	movlw	1
  7586  007D9E  6F8E               	movwf	___lwmod@counter& (0+255),b
  7587  007DA0  EFD6  F03E         	goto	l8874
  7588  007DA4                     l8872:
  7589                           
  7590                           ; BSR set to: 0
  7591  007DA4  90D8               	bcf	status,0,c
  7592  007DA6  378C               	rlcf	___lwmod@divisor& (0+255),f,b
  7593  007DA8  378D               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7594  007DAA  2B8E               	incf	___lwmod@counter& (0+255),f,b
  7595  007DAC                     l8874:
  7596                           
  7597                           ; BSR set to: 0
  7598  007DAC  AF8D               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7599  007DAE  EFDB  F03E         	goto	u11821
  7600  007DB2  EFDD  F03E         	goto	u11820
  7601  007DB6                     u11821:
  7602  007DB6  EFD2  F03E         	goto	l8872
  7603  007DBA                     u11820:
  7604  007DBA                     l8876:
  7605                           
  7606                           ; BSR set to: 0
  7607  007DBA  518C               	movf	___lwmod@divisor& (0+255),w,b
  7608  007DBC  5D8A               	subwf	___lwmod@dividend& (0+255),w,b
  7609  007DBE  518D               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7610  007DC0  598B               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7611  007DC2  A0D8               	btfss	status,0,c
  7612  007DC4  EFE6  F03E         	goto	u11831
  7613  007DC8  EFE8  F03E         	goto	u11830
  7614  007DCC                     u11831:
  7615  007DCC  EFEC  F03E         	goto	l8880
  7616  007DD0                     u11830:
  7617  007DD0                     
  7618                           ; BSR set to: 0
  7619  007DD0  518C               	movf	___lwmod@divisor& (0+255),w,b
  7620  007DD2  5F8A               	subwf	___lwmod@dividend& (0+255),f,b
  7621  007DD4  518D               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7622  007DD6  5B8B               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7623  007DD8                     l8880:
  7624                           
  7625                           ; BSR set to: 0
  7626  007DD8  90D8               	bcf	status,0,c
  7627  007DDA  338D               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7628  007DDC  338C               	rrcf	___lwmod@divisor& (0+255),f,b
  7629  007DDE                     
  7630                           ; BSR set to: 0
  7631  007DDE  2F8E               	decfsz	___lwmod@counter& (0+255),f,b
  7632  007DE0  EFDD  F03E         	goto	l8876
  7633  007DE4                     l1155:
  7634                           
  7635                           ; BSR set to: 0
  7636  007DE4  C08A  F08A         	movff	___lwmod@dividend,?___lwmod
  7637  007DE8  C08B  F08B         	movff	___lwmod@dividend+1,?___lwmod+1
  7638  007DEC                     
  7639                           ; BSR set to: 0
  7640  007DEC  0012               	return		;funcret
  7641  007DEE                     __end_of___lwmod:
  7642                           	callstack 0
  7643                           
  7644 ;; *************** function ___lwdiv *****************
  7645 ;; Defined at:
  7646 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  dividend        2   15[BANK0 ] unsigned int 
  7649 ;;  divisor         2   17[BANK0 ] unsigned int 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  quotient        2   20[BANK0 ] unsigned int 
  7652 ;;  counter         1   19[BANK0 ] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  2   15[BANK0 ] unsigned int 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7662 ;;      Params:         0       4       0       0       0       0       0
  7663 ;;      Locals:         0       3       0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0
  7665 ;;      Totals:         0       7       0       0       0       0       0
  7666 ;;Total ram usage:        7 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:    5
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_fround
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text15
  7677  007C9E                     __ptext15:
  7678                           	callstack 0
  7679  007C9E                     ___lwdiv:
  7680                           	callstack 23
  7681  007C9E  0E00               	movlw	0
  7682  007CA0  0100               	movlb	0	; () banked
  7683  007CA2  6F95               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7684  007CA4  0E00               	movlw	0
  7685  007CA6  6F94               	movwf	___lwdiv@quotient& (0+255),b
  7686  007CA8                     
  7687                           ; BSR set to: 0
  7688  007CA8  5191               	movf	___lwdiv@divisor& (0+255),w,b
  7689  007CAA  1192               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7690  007CAC  B4D8               	btfsc	status,2,c
  7691  007CAE  EF5B  F03E         	goto	u11781
  7692  007CB2  EF5D  F03E         	goto	u11780
  7693  007CB6                     u11781:
  7694  007CB6  EF85  F03E         	goto	l1145
  7695  007CBA                     u11780:
  7696  007CBA                     
  7697                           ; BSR set to: 0
  7698  007CBA  0E01               	movlw	1
  7699  007CBC  6F93               	movwf	___lwdiv@counter& (0+255),b
  7700  007CBE  EF65  F03E         	goto	l8854
  7701  007CC2                     l8852:
  7702                           
  7703                           ; BSR set to: 0
  7704  007CC2  90D8               	bcf	status,0,c
  7705  007CC4  3791               	rlcf	___lwdiv@divisor& (0+255),f,b
  7706  007CC6  3792               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7707  007CC8  2B93               	incf	___lwdiv@counter& (0+255),f,b
  7708  007CCA                     l8854:
  7709                           
  7710                           ; BSR set to: 0
  7711  007CCA  AF92               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7712  007CCC  EF6A  F03E         	goto	u11791
  7713  007CD0  EF6C  F03E         	goto	u11790
  7714  007CD4                     u11791:
  7715  007CD4  EF61  F03E         	goto	l8852
  7716  007CD8                     u11790:
  7717  007CD8                     l8856:
  7718                           
  7719                           ; BSR set to: 0
  7720  007CD8  90D8               	bcf	status,0,c
  7721  007CDA  3794               	rlcf	___lwdiv@quotient& (0+255),f,b
  7722  007CDC  3795               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7723  007CDE                     
  7724                           ; BSR set to: 0
  7725  007CDE  5191               	movf	___lwdiv@divisor& (0+255),w,b
  7726  007CE0  5D8F               	subwf	___lwdiv@dividend& (0+255),w,b
  7727  007CE2  5192               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7728  007CE4  5990               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7729  007CE6  A0D8               	btfss	status,0,c
  7730  007CE8  EF78  F03E         	goto	u11801
  7731  007CEC  EF7A  F03E         	goto	u11800
  7732  007CF0                     u11801:
  7733  007CF0  EF7F  F03E         	goto	l8864
  7734  007CF4                     u11800:
  7735  007CF4                     
  7736                           ; BSR set to: 0
  7737  007CF4  5191               	movf	___lwdiv@divisor& (0+255),w,b
  7738  007CF6  5F8F               	subwf	___lwdiv@dividend& (0+255),f,b
  7739  007CF8  5192               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7740  007CFA  5B90               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7741  007CFC                     
  7742                           ; BSR set to: 0
  7743  007CFC  8194               	bsf	___lwdiv@quotient& (0+255),0,b
  7744  007CFE                     l8864:
  7745                           
  7746                           ; BSR set to: 0
  7747  007CFE  90D8               	bcf	status,0,c
  7748  007D00  3392               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7749  007D02  3391               	rrcf	___lwdiv@divisor& (0+255),f,b
  7750  007D04                     
  7751                           ; BSR set to: 0
  7752  007D04  2F93               	decfsz	___lwdiv@counter& (0+255),f,b
  7753  007D06  EF6C  F03E         	goto	l8856
  7754  007D0A                     l1145:
  7755                           
  7756                           ; BSR set to: 0
  7757  007D0A  C094  F08F         	movff	___lwdiv@quotient,?___lwdiv
  7758  007D0E  C095  F090         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7759  007D12                     
  7760                           ; BSR set to: 0
  7761  007D12  0012               	return		;funcret
  7762  007D14                     __end_of___lwdiv:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function __tdiv_to_l_ *****************
  7766 ;; Defined at:
  7767 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  f1              4   10[BANK0 ] float 
  7770 ;;  f2              4   14[BANK0 ] float 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  quot            4   21[BANK0 ] unsigned long 
  7773 ;;  exp1            1   26[BANK0 ] unsigned char 
  7774 ;;  cntr            1   25[BANK0 ] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  4   10[BANK0 ] unsigned long 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7784 ;;      Params:         0       8       0       0       0       0       0
  7785 ;;      Locals:         0       6       0       0       0       0       0
  7786 ;;      Temps:          0       3       0       0       0       0       0
  7787 ;;      Totals:         0      17       0       0       0       0       0
  7788 ;;Total ram usage:       17 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    5
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_sprintf
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text16
  7799  005AD4                     __ptext16:
  7800                           	callstack 0
  7801  005AD4                     __tdiv_to_l_:
  7802                           	callstack 24
  7803  005AD4  C08C  F092         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7804  005AD8  0100               	movlb	0	; () banked
  7805  005ADA  6B93               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7806  005ADC  6B94               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7807  005ADE  358B               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7808  005AE0  3792               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7809  005AE2  E301               	bnc	u12011
  7810  005AE4  8193               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7811  005AE6                     u12011:
  7812  005AE6  5192               	movf	??__tdiv_to_l_& (0+255),w,b
  7813  005AE8  6F9A               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7814  005AEA  519A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7815  005AEC  A4D8               	btfss	status,2,c
  7816  005AEE  EF7B  F02D         	goto	u12021
  7817  005AF2  EF7D  F02D         	goto	u12020
  7818  005AF6                     u12021:
  7819  005AF6  EF87  F02D         	goto	l9020
  7820  005AFA                     u12020:
  7821  005AFA                     l9016:
  7822                           
  7823                           ; BSR set to: 0
  7824  005AFA  0E00               	movlw	0
  7825  005AFC  6F8A               	movwf	?__tdiv_to_l_& (0+255),b
  7826  005AFE  0E00               	movlw	0
  7827  005B00  6F8B               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7828  005B02  0E00               	movlw	0
  7829  005B04  6F8C               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7830  005B06  0E00               	movlw	0
  7831  005B08  6F8D               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7832  005B0A  EF15  F02E         	goto	l995
  7833  005B0E                     l9020:
  7834                           
  7835                           ; BSR set to: 0
  7836  005B0E  C090  F092         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7837  005B12  6B93               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7838  005B14  6B94               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7839  005B16  358F               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7840  005B18  3792               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7841  005B1A  E301               	bnc	u12031
  7842  005B1C  8193               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7843  005B1E                     u12031:
  7844  005B1E  5192               	movf	??__tdiv_to_l_& (0+255),w,b
  7845  005B20  6F99               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7846  005B22  5199               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7847  005B24  A4D8               	btfss	status,2,c
  7848  005B26  EF97  F02D         	goto	u12041
  7849  005B2A  EF99  F02D         	goto	u12040
  7850  005B2E                     u12041:
  7851  005B2E  EF9B  F02D         	goto	l9026
  7852  005B32                     u12040:
  7853  005B32  EF7D  F02D         	goto	l9016
  7854  005B36                     l9026:
  7855                           
  7856                           ; BSR set to: 0
  7857  005B36  8F8B               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7858  005B38                     
  7859                           ; BSR set to: 0
  7860  005B38  0EFF               	movlw	255
  7861  005B3A  178A               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7862  005B3C  0EFF               	movlw	255
  7863  005B3E  178B               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7864  005B40  0E00               	movlw	0
  7865  005B42  178C               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7866  005B44  8F8F               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7867  005B46                     
  7868                           ; BSR set to: 0
  7869  005B46  0EFF               	movlw	255
  7870  005B48  178E               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7871  005B4A  0EFF               	movlw	255
  7872  005B4C  178F               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7873  005B4E  0E00               	movlw	0
  7874  005B50  1790               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7875  005B52                     
  7876                           ; BSR set to: 0
  7877  005B52  0E00               	movlw	0
  7878  005B54  6F95               	movwf	__tdiv_to_l_@quot& (0+255),b
  7879  005B56  0E00               	movlw	0
  7880  005B58  6F96               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7881  005B5A  0E00               	movlw	0
  7882  005B5C  6F97               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7883  005B5E  0E00               	movlw	0
  7884  005B60  6F98               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7885  005B62                     
  7886                           ; BSR set to: 0
  7887  005B62  0E7F               	movlw	127
  7888  005B64  5F9A               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7889  005B66                     
  7890                           ; BSR set to: 0
  7891  005B66  5199               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7892  005B68  0F98               	addlw	152
  7893  005B6A  5F9A               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7894  005B6C                     
  7895                           ; BSR set to: 0
  7896  005B6C  0E18               	movlw	24
  7897  005B6E  6F99               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7898  005B70                     l997:
  7899                           
  7900                           ; BSR set to: 0
  7901  005B70  90D8               	bcf	status,0,c
  7902  005B72  3795               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7903  005B74  3796               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7904  005B76  3797               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7905  005B78  3798               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7906  005B7A                     
  7907                           ; BSR set to: 0
  7908  005B7A  518E               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7909  005B7C  5D8A               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7910  005B7E  518F               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7911  005B80  598B               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7912  005B82  5190               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7913  005B84  598C               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7914  005B86  A0D8               	btfss	status,0,c
  7915  005B88  EFC8  F02D         	goto	u12051
  7916  005B8C  EFCA  F02D         	goto	u12050
  7917  005B90                     u12051:
  7918  005B90  EFD1  F02D         	goto	l998
  7919  005B94                     u12050:
  7920  005B94                     
  7921                           ; BSR set to: 0
  7922  005B94  518E               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7923  005B96  5F8A               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7924  005B98  518F               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7925  005B9A  5B8B               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7926  005B9C  5190               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7927  005B9E  5B8C               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7928  005BA0                     
  7929                           ; BSR set to: 0
  7930  005BA0  8195               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7931  005BA2                     l998:
  7932                           
  7933                           ; BSR set to: 0
  7934  005BA2  90D8               	bcf	status,0,c
  7935  005BA4  378A               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7936  005BA6  378B               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7937  005BA8  378C               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7938  005BAA                     
  7939                           ; BSR set to: 0
  7940  005BAA  2F99               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7941  005BAC  EFB8  F02D         	goto	l997
  7942  005BB0                     
  7943                           ; BSR set to: 0
  7944  005BB0  BF9A               	btfsc	__tdiv_to_l_@exp1& (0+255),7,b
  7945  005BB2  EFDF  F02D         	goto	u12060
  7946  005BB6  EFDD  F02D         	goto	u12061
  7947  005BBA                     u12061:
  7948  005BBA  EFF5  F02D         	goto	l9060
  7949  005BBE                     u12060:
  7950  005BBE                     
  7951                           ; BSR set to: 0
  7952  005BBE  519A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7953  005BC0  0A80               	xorlw	128
  7954  005BC2  0F97               	addlw	151
  7955  005BC4  B0D8               	btfsc	status,0,c
  7956  005BC6  EFE7  F02D         	goto	u12071
  7957  005BCA  EFE9  F02D         	goto	u12070
  7958  005BCE                     u12071:
  7959  005BCE  EFEB  F02D         	goto	l9056
  7960  005BD2                     u12070:
  7961  005BD2  EF7D  F02D         	goto	l9016
  7962  005BD6                     l9056:
  7963                           
  7964                           ; BSR set to: 0
  7965  005BD6  90D8               	bcf	status,0,c
  7966  005BD8  3398               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7967  005BDA  3397               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7968  005BDC  3396               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7969  005BDE  3395               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7970  005BE0                     
  7971                           ; BSR set to: 0
  7972  005BE0  3F9A               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7973  005BE2  EFEB  F02D         	goto	l9056
  7974  005BE6  EF0D  F02E         	goto	l1004
  7975  005BEA                     l9060:
  7976                           
  7977                           ; BSR set to: 0
  7978  005BEA  0E17               	movlw	23
  7979  005BEC  659A               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7980  005BEE  EFFB  F02D         	goto	u12081
  7981  005BF2  EFFD  F02D         	goto	u12080
  7982  005BF6                     u12081:
  7983  005BF6  EF05  F02E         	goto	l9068
  7984  005BFA                     u12080:
  7985  005BFA  EF7D  F02D         	goto	l9016
  7986  005BFE                     l9066:
  7987                           
  7988                           ; BSR set to: 0
  7989  005BFE  90D8               	bcf	status,0,c
  7990  005C00  3795               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7991  005C02  3796               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7992  005C04  3797               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7993  005C06  3798               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7994  005C08  079A               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7995  005C0A                     l9068:
  7996                           
  7997                           ; BSR set to: 0
  7998  005C0A  519A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7999  005C0C  A4D8               	btfss	status,2,c
  8000  005C0E  EF0B  F02E         	goto	u12091
  8001  005C12  EF0D  F02E         	goto	u12090
  8002  005C16                     u12091:
  8003  005C16  EFFF  F02D         	goto	l9066
  8004  005C1A                     u12090:
  8005  005C1A                     l1004:
  8006                           
  8007                           ; BSR set to: 0
  8008  005C1A  C095  F08A         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  8009  005C1E  C096  F08B         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  8010  005C22  C097  F08C         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  8011  005C26  C098  F08D         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  8012  005C2A                     l995:
  8013                           
  8014                           ; BSR set to: 0
  8015  005C2A  0012               	return		;funcret
  8016  005C2C                     __end_of__tdiv_to_l_:
  8017                           	callstack 0
  8018                           
  8019 ;; *************** function __div_to_l_ *****************
  8020 ;; Defined at:
  8021 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;  f1              4   10[BANK0 ] unsigned long 
  8024 ;;  f2              4   14[BANK0 ] unsigned long 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  quot            4   18[BANK0 ] unsigned long 
  8027 ;;  exp1            1   23[BANK0 ] unsigned char 
  8028 ;;  cntr            1   22[BANK0 ] unsigned char 
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  4   10[BANK0 ] unsigned long 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8038 ;;      Params:         0       8       0       0       0       0       0
  8039 ;;      Locals:         0       6       0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0
  8041 ;;      Totals:         0      14       0       0       0       0       0
  8042 ;;Total ram usage:       14 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:    5
  8045 ;; This function calls:
  8046 ;;		Nothing
  8047 ;; This function is called by:
  8048 ;;		_sprintf
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text17
  8053  005ED0                     __ptext17:
  8054                           	callstack 0
  8055  005ED0                     __div_to_l_:
  8056                           	callstack 24
  8057  005ED0  0100               	movlb	0	; () banked
  8058  005ED2  358C               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  8059  005ED4  358D               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  8060  005ED6  6F97               	movwf	__div_to_l_@exp1& (0+255),b
  8061  005ED8  5197               	movf	__div_to_l_@exp1& (0+255),w,b
  8062  005EDA  A4D8               	btfss	status,2,c
  8063  005EDC  EF72  F02F         	goto	u12101
  8064  005EE0  EF74  F02F         	goto	u12100
  8065  005EE4                     u12101:
  8066  005EE4  EF7E  F02F         	goto	l9076
  8067  005EE8                     u12100:
  8068  005EE8                     l9072:
  8069                           
  8070                           ; BSR set to: 0
  8071  005EE8  0E00               	movlw	0
  8072  005EEA  6F8A               	movwf	?__div_to_l_& (0+255),b
  8073  005EEC  0E00               	movlw	0
  8074  005EEE  6F8B               	movwf	(?__div_to_l_+1)& (0+255),b
  8075  005EF0  0E00               	movlw	0
  8076  005EF2  6F8C               	movwf	(?__div_to_l_+2)& (0+255),b
  8077  005EF4  0E00               	movlw	0
  8078  005EF6  6F8D               	movwf	(?__div_to_l_+3)& (0+255),b
  8079  005EF8  EF0E  F030         	goto	l886
  8080  005EFC                     l9076:
  8081                           
  8082                           ; BSR set to: 0
  8083  005EFC  3590               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  8084  005EFE  3591               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  8085  005F00  6F96               	movwf	__div_to_l_@cntr& (0+255),b
  8086  005F02  5196               	movf	__div_to_l_@cntr& (0+255),w,b
  8087  005F04  A4D8               	btfss	status,2,c
  8088  005F06  EF87  F02F         	goto	u12111
  8089  005F0A  EF89  F02F         	goto	u12110
  8090  005F0E                     u12111:
  8091  005F0E  EF8B  F02F         	goto	l9082
  8092  005F12                     u12110:
  8093  005F12  EF74  F02F         	goto	l9072
  8094  005F16                     l9082:
  8095                           
  8096                           ; BSR set to: 0
  8097  005F16  8F8C               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  8098  005F18                     
  8099                           ; BSR set to: 0
  8100  005F18  0EFF               	movlw	255
  8101  005F1A  178A               	andwf	__div_to_l_@f1& (0+255),f,b
  8102  005F1C  0EFF               	movlw	255
  8103  005F1E  178B               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  8104  005F20  0EFF               	movlw	255
  8105  005F22  178C               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  8106  005F24  0E00               	movlw	0
  8107  005F26  178D               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  8108  005F28                     
  8109                           ; BSR set to: 0
  8110  005F28  8F90               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  8111  005F2A  0EFF               	movlw	255
  8112  005F2C  178E               	andwf	__div_to_l_@f2& (0+255),f,b
  8113  005F2E  0EFF               	movlw	255
  8114  005F30  178F               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  8115  005F32  0EFF               	movlw	255
  8116  005F34  1790               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  8117  005F36  0E00               	movlw	0
  8118  005F38  1791               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  8119  005F3A                     
  8120                           ; BSR set to: 0
  8121  005F3A  0E00               	movlw	0
  8122  005F3C  6F92               	movwf	__div_to_l_@quot& (0+255),b
  8123  005F3E  0E00               	movlw	0
  8124  005F40  6F93               	movwf	(__div_to_l_@quot+1)& (0+255),b
  8125  005F42  0E00               	movlw	0
  8126  005F44  6F94               	movwf	(__div_to_l_@quot+2)& (0+255),b
  8127  005F46  0E00               	movlw	0
  8128  005F48  6F95               	movwf	(__div_to_l_@quot+3)& (0+255),b
  8129  005F4A                     
  8130                           ; BSR set to: 0
  8131  005F4A  0E7F               	movlw	127
  8132  005F4C  5F97               	subwf	__div_to_l_@exp1& (0+255),f,b
  8133  005F4E                     
  8134                           ; BSR set to: 0
  8135  005F4E  5196               	movf	__div_to_l_@cntr& (0+255),w,b
  8136  005F50  0FA0               	addlw	160
  8137  005F52  5F97               	subwf	__div_to_l_@exp1& (0+255),f,b
  8138  005F54                     
  8139                           ; BSR set to: 0
  8140  005F54  0E20               	movlw	32
  8141  005F56  6F96               	movwf	__div_to_l_@cntr& (0+255),b
  8142  005F58                     l9096:
  8143                           
  8144                           ; BSR set to: 0
  8145  005F58  90D8               	bcf	status,0,c
  8146  005F5A  3792               	rlcf	__div_to_l_@quot& (0+255),f,b
  8147  005F5C  3793               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  8148  005F5E  3794               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  8149  005F60  3795               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  8150  005F62                     
  8151                           ; BSR set to: 0
  8152  005F62  518E               	movf	__div_to_l_@f2& (0+255),w,b
  8153  005F64  5D8A               	subwf	__div_to_l_@f1& (0+255),w,b
  8154  005F66  518F               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  8155  005F68  598B               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  8156  005F6A  5190               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  8157  005F6C  598C               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  8158  005F6E  5191               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  8159  005F70  598D               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  8160  005F72  A0D8               	btfss	status,0,c
  8161  005F74  EFBE  F02F         	goto	u12121
  8162  005F78  EFC0  F02F         	goto	u12120
  8163  005F7C                     u12121:
  8164  005F7C  EFC9  F02F         	goto	l9104
  8165  005F80                     u12120:
  8166  005F80                     
  8167                           ; BSR set to: 0
  8168  005F80  518E               	movf	__div_to_l_@f2& (0+255),w,b
  8169  005F82  5F8A               	subwf	__div_to_l_@f1& (0+255),f,b
  8170  005F84  518F               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  8171  005F86  5B8B               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  8172  005F88  5190               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  8173  005F8A  5B8C               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  8174  005F8C  5191               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  8175  005F8E  5B8D               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  8176  005F90                     
  8177                           ; BSR set to: 0
  8178  005F90  8192               	bsf	__div_to_l_@quot& (0+255),0,b
  8179  005F92                     l9104:
  8180                           
  8181                           ; BSR set to: 0
  8182  005F92  90D8               	bcf	status,0,c
  8183  005F94  378A               	rlcf	__div_to_l_@f1& (0+255),f,b
  8184  005F96  378B               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  8185  005F98  378C               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  8186  005F9A  378D               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  8187  005F9C                     
  8188                           ; BSR set to: 0
  8189  005F9C  2F96               	decfsz	__div_to_l_@cntr& (0+255),f,b
  8190  005F9E  EFAC  F02F         	goto	l9096
  8191  005FA2                     
  8192                           ; BSR set to: 0
  8193  005FA2  BF97               	btfsc	__div_to_l_@exp1& (0+255),7,b
  8194  005FA4  EFD8  F02F         	goto	u12130
  8195  005FA8  EFD6  F02F         	goto	u12131
  8196  005FAC                     u12131:
  8197  005FAC  EFEE  F02F         	goto	l9120
  8198  005FB0                     u12130:
  8199  005FB0                     
  8200                           ; BSR set to: 0
  8201  005FB0  5197               	movf	__div_to_l_@exp1& (0+255),w,b
  8202  005FB2  0A80               	xorlw	128
  8203  005FB4  0F9F               	addlw	159
  8204  005FB6  B0D8               	btfsc	status,0,c
  8205  005FB8  EFE0  F02F         	goto	u12141
  8206  005FBC  EFE2  F02F         	goto	u12140
  8207  005FC0                     u12141:
  8208  005FC0  EFE4  F02F         	goto	l9116
  8209  005FC4                     u12140:
  8210  005FC4  EF74  F02F         	goto	l9072
  8211  005FC8                     l9116:
  8212                           
  8213                           ; BSR set to: 0
  8214  005FC8  90D8               	bcf	status,0,c
  8215  005FCA  3395               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  8216  005FCC  3394               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  8217  005FCE  3393               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  8218  005FD0  3392               	rrcf	__div_to_l_@quot& (0+255),f,b
  8219  005FD2                     
  8220                           ; BSR set to: 0
  8221  005FD2  3F97               	incfsz	__div_to_l_@exp1& (0+255),f,b
  8222  005FD4  EFE4  F02F         	goto	l9116
  8223  005FD8  EF06  F030         	goto	l895
  8224  005FDC                     l9120:
  8225                           
  8226                           ; BSR set to: 0
  8227  005FDC  0E1F               	movlw	31
  8228  005FDE  6597               	cpfsgt	__div_to_l_@exp1& (0+255),b
  8229  005FE0  EFF4  F02F         	goto	u12151
  8230  005FE4  EFF6  F02F         	goto	u12150
  8231  005FE8                     u12151:
  8232  005FE8  EFFE  F02F         	goto	l9128
  8233  005FEC                     u12150:
  8234  005FEC  EF74  F02F         	goto	l9072
  8235  005FF0                     l9126:
  8236                           
  8237                           ; BSR set to: 0
  8238  005FF0  90D8               	bcf	status,0,c
  8239  005FF2  3792               	rlcf	__div_to_l_@quot& (0+255),f,b
  8240  005FF4  3793               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  8241  005FF6  3794               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  8242  005FF8  3795               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  8243  005FFA  0797               	decf	__div_to_l_@exp1& (0+255),f,b
  8244  005FFC                     l9128:
  8245                           
  8246                           ; BSR set to: 0
  8247  005FFC  5197               	movf	__div_to_l_@exp1& (0+255),w,b
  8248  005FFE  A4D8               	btfss	status,2,c
  8249  006000  EF04  F030         	goto	u12161
  8250  006004  EF06  F030         	goto	u12160
  8251  006008                     u12161:
  8252  006008  EFF8  F02F         	goto	l9126
  8253  00600C                     u12160:
  8254  00600C                     l895:
  8255                           
  8256                           ; BSR set to: 0
  8257  00600C  C092  F08A         	movff	__div_to_l_@quot,?__div_to_l_
  8258  006010  C093  F08B         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  8259  006014  C094  F08C         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  8260  006018  C095  F08D         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8261  00601C                     l886:
  8262                           
  8263                           ; BSR set to: 0
  8264  00601C  0012               	return		;funcret
  8265  00601E                     __end_of__div_to_l_:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function ___wmul *****************
  8269 ;; Defined at:
  8270 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  multiplier      2   10[BANK0 ] unsigned int 
  8273 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  product         2   14[BANK0 ] unsigned int 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  2   10[BANK0 ] unsigned int 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2, status,0, prodl, prodh
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8285 ;;      Params:         0       4       0       0       0       0       0
  8286 ;;      Locals:         0       2       0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0
  8288 ;;      Totals:         0       6       0       0       0       0       0
  8289 ;;Total ram usage:        6 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    5
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		_sprintf
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text18
  8300  007FD8                     __ptext18:
  8301                           	callstack 0
  8302  007FD8                     ___wmul:
  8303                           	callstack 24
  8304  007FD8  0100               	movlb	0	; () banked
  8305  007FDA  518A               	movf	___wmul@multiplier& (0+255),w,b
  8306  007FDC  038C               	mulwf	___wmul@multiplicand& (0+255),b
  8307  007FDE  CFF3 F08E          	movff	prodl,___wmul@product
  8308  007FE2  CFF4 F08F          	movff	prodh,___wmul@product+1
  8309  007FE6  518A               	movf	___wmul@multiplier& (0+255),w,b
  8310  007FE8  038D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8311  007FEA  50F3               	movf	243,w,c
  8312  007FEC  278F               	addwf	(___wmul@product+1)& (0+255),f,b
  8313  007FEE  518B               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8314  007FF0  038C               	mulwf	___wmul@multiplicand& (0+255),b
  8315  007FF2  50F3               	movf	243,w,c
  8316  007FF4  278F               	addwf	(___wmul@product+1)& (0+255),f,b
  8317  007FF6                     
  8318                           ; BSR set to: 0
  8319  007FF6  C08E  F08A         	movff	___wmul@product,?___wmul
  8320  007FFA  C08F  F08B         	movff	___wmul@product+1,?___wmul+1
  8321  007FFE                     
  8322                           ; BSR set to: 0
  8323  007FFE  0012               	return		;funcret
  8324  008000                     __end_of___wmul:
  8325                           	callstack 0
  8326                           
  8327 ;; *************** function ___llmod *****************
  8328 ;; Defined at:
  8329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  dividend        4   23[BANK0 ] unsigned long 
  8332 ;;  divisor         4   27[BANK0 ] unsigned long 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  counter         1   31[BANK0 ] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  4   23[BANK0 ] unsigned long 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2, status,0
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8344 ;;      Params:         0       8       0       0       0       0       0
  8345 ;;      Locals:         0       1       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0
  8347 ;;      Totals:         0       9       0       0       0       0       0
  8348 ;;Total ram usage:        9 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    5
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_sprintf
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text19
  8359  007796                     __ptext19:
  8360                           	callstack 0
  8361  007796                     ___llmod:
  8362                           	callstack 24
  8363  007796  0100               	movlb	0	; () banked
  8364  007798  519B               	movf	___llmod@divisor& (0+255),w,b
  8365  00779A  119C               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8366  00779C  119D               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8367  00779E  119E               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8368  0077A0  B4D8               	btfsc	status,2,c
  8369  0077A2  EFD5  F03B         	goto	u12591
  8370  0077A6  EFD7  F03B         	goto	u12590
  8371  0077AA                     u12591:
  8372  0077AA  EF07  F03C         	goto	l1074
  8373  0077AE                     u12590:
  8374  0077AE                     
  8375                           ; BSR set to: 0
  8376  0077AE  0E01               	movlw	1
  8377  0077B0  6F9F               	movwf	___llmod@counter& (0+255),b
  8378  0077B2  EFE1  F03B         	goto	l9398
  8379  0077B6                     l9396:
  8380                           
  8381                           ; BSR set to: 0
  8382  0077B6  90D8               	bcf	status,0,c
  8383  0077B8  379B               	rlcf	___llmod@divisor& (0+255),f,b
  8384  0077BA  379C               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8385  0077BC  379D               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8386  0077BE  379E               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8387  0077C0  2B9F               	incf	___llmod@counter& (0+255),f,b
  8388  0077C2                     l9398:
  8389                           
  8390                           ; BSR set to: 0
  8391  0077C2  AF9E               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8392  0077C4  EFE6  F03B         	goto	u12601
  8393  0077C8  EFE8  F03B         	goto	u12600
  8394  0077CC                     u12601:
  8395  0077CC  EFDB  F03B         	goto	l9396
  8396  0077D0                     u12600:
  8397  0077D0                     l9400:
  8398                           
  8399                           ; BSR set to: 0
  8400  0077D0  519B               	movf	___llmod@divisor& (0+255),w,b
  8401  0077D2  5D97               	subwf	___llmod@dividend& (0+255),w,b
  8402  0077D4  519C               	movf	(___llmod@divisor+1)& (0+255),w,b
  8403  0077D6  5998               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8404  0077D8  519D               	movf	(___llmod@divisor+2)& (0+255),w,b
  8405  0077DA  5999               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8406  0077DC  519E               	movf	(___llmod@divisor+3)& (0+255),w,b
  8407  0077DE  599A               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8408  0077E0  A0D8               	btfss	status,0,c
  8409  0077E2  EFF5  F03B         	goto	u12611
  8410  0077E6  EFF7  F03B         	goto	u12610
  8411  0077EA                     u12611:
  8412  0077EA  EFFF  F03B         	goto	l9404
  8413  0077EE                     u12610:
  8414  0077EE                     
  8415                           ; BSR set to: 0
  8416  0077EE  519B               	movf	___llmod@divisor& (0+255),w,b
  8417  0077F0  5F97               	subwf	___llmod@dividend& (0+255),f,b
  8418  0077F2  519C               	movf	(___llmod@divisor+1)& (0+255),w,b
  8419  0077F4  5B98               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8420  0077F6  519D               	movf	(___llmod@divisor+2)& (0+255),w,b
  8421  0077F8  5B99               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8422  0077FA  519E               	movf	(___llmod@divisor+3)& (0+255),w,b
  8423  0077FC  5B9A               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8424  0077FE                     l9404:
  8425                           
  8426                           ; BSR set to: 0
  8427  0077FE  90D8               	bcf	status,0,c
  8428  007800  339E               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8429  007802  339D               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8430  007804  339C               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8431  007806  339B               	rrcf	___llmod@divisor& (0+255),f,b
  8432  007808                     
  8433                           ; BSR set to: 0
  8434  007808  2F9F               	decfsz	___llmod@counter& (0+255),f,b
  8435  00780A  EFE8  F03B         	goto	l9400
  8436  00780E                     l1074:
  8437                           
  8438                           ; BSR set to: 0
  8439  00780E  C097  F097         	movff	___llmod@dividend,?___llmod
  8440  007812  C098  F098         	movff	___llmod@dividend+1,?___llmod+1
  8441  007816  C099  F099         	movff	___llmod@dividend+2,?___llmod+2
  8442  00781A  C09A  F09A         	movff	___llmod@dividend+3,?___llmod+3
  8443  00781E                     
  8444                           ; BSR set to: 0
  8445  00781E  0012               	return		;funcret
  8446  007820                     __end_of___llmod:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function ___lldiv *****************
  8450 ;; Defined at:
  8451 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  dividend        4   10[BANK0 ] unsigned long 
  8454 ;;  divisor         4   14[BANK0 ] unsigned long 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  quotient        4   18[BANK0 ] unsigned long 
  8457 ;;  counter         1   22[BANK0 ] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  4   10[BANK0 ] unsigned long 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2, status,0
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8467 ;;      Params:         0       8       0       0       0       0       0
  8468 ;;      Locals:         0       5       0       0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0
  8470 ;;      Totals:         0      13       0       0       0       0       0
  8471 ;;Total ram usage:       13 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    5
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_sprintf
  8478 ;;		_PWM1_Set_Duty
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text20
  8483  0075AE                     __ptext20:
  8484                           	callstack 0
  8485  0075AE                     ___lldiv:
  8486                           	callstack 24
  8487  0075AE  0E00               	movlw	0
  8488  0075B0  0100               	movlb	0	; () banked
  8489  0075B2  6F92               	movwf	___lldiv@quotient& (0+255),b
  8490  0075B4  0E00               	movlw	0
  8491  0075B6  6F93               	movwf	(___lldiv@quotient+1)& (0+255),b
  8492  0075B8  0E00               	movlw	0
  8493  0075BA  6F94               	movwf	(___lldiv@quotient+2)& (0+255),b
  8494  0075BC  0E00               	movlw	0
  8495  0075BE  6F95               	movwf	(___lldiv@quotient+3)& (0+255),b
  8496  0075C0                     
  8497                           ; BSR set to: 0
  8498  0075C0  518E               	movf	___lldiv@divisor& (0+255),w,b
  8499  0075C2  118F               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8500  0075C4  1190               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8501  0075C6  1191               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8502  0075C8  B4D8               	btfsc	status,2,c
  8503  0075CA  EFE9  F03A         	goto	u12171
  8504  0075CE  EFEB  F03A         	goto	u12170
  8505  0075D2                     u12171:
  8506  0075D2  EF21  F03B         	goto	l659
  8507  0075D6                     u12170:
  8508  0075D6                     
  8509                           ; BSR set to: 0
  8510  0075D6  0E01               	movlw	1
  8511  0075D8  6F96               	movwf	___lldiv@counter& (0+255),b
  8512  0075DA  EFF5  F03A         	goto	l9144
  8513  0075DE                     l9142:
  8514                           
  8515                           ; BSR set to: 0
  8516  0075DE  90D8               	bcf	status,0,c
  8517  0075E0  378E               	rlcf	___lldiv@divisor& (0+255),f,b
  8518  0075E2  378F               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8519  0075E4  3790               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8520  0075E6  3791               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8521  0075E8  2B96               	incf	___lldiv@counter& (0+255),f,b
  8522  0075EA                     l9144:
  8523                           
  8524                           ; BSR set to: 0
  8525  0075EA  AF91               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8526  0075EC  EFFA  F03A         	goto	u12181
  8527  0075F0  EFFC  F03A         	goto	u12180
  8528  0075F4                     u12181:
  8529  0075F4  EFEF  F03A         	goto	l9142
  8530  0075F8                     u12180:
  8531  0075F8                     l9146:
  8532                           
  8533                           ; BSR set to: 0
  8534  0075F8  90D8               	bcf	status,0,c
  8535  0075FA  3792               	rlcf	___lldiv@quotient& (0+255),f,b
  8536  0075FC  3793               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8537  0075FE  3794               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8538  007600  3795               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8539  007602                     
  8540                           ; BSR set to: 0
  8541  007602  518E               	movf	___lldiv@divisor& (0+255),w,b
  8542  007604  5D8A               	subwf	___lldiv@dividend& (0+255),w,b
  8543  007606  518F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8544  007608  598B               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8545  00760A  5190               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8546  00760C  598C               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8547  00760E  5191               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8548  007610  598D               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8549  007612  A0D8               	btfss	status,0,c
  8550  007614  EF0E  F03B         	goto	u12191
  8551  007618  EF10  F03B         	goto	u12190
  8552  00761C                     u12191:
  8553  00761C  EF19  F03B         	goto	l9154
  8554  007620                     u12190:
  8555  007620                     
  8556                           ; BSR set to: 0
  8557  007620  518E               	movf	___lldiv@divisor& (0+255),w,b
  8558  007622  5F8A               	subwf	___lldiv@dividend& (0+255),f,b
  8559  007624  518F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8560  007626  5B8B               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8561  007628  5190               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8562  00762A  5B8C               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8563  00762C  5191               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8564  00762E  5B8D               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8565  007630                     
  8566                           ; BSR set to: 0
  8567  007630  8192               	bsf	___lldiv@quotient& (0+255),0,b
  8568  007632                     l9154:
  8569                           
  8570                           ; BSR set to: 0
  8571  007632  90D8               	bcf	status,0,c
  8572  007634  3391               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8573  007636  3390               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8574  007638  338F               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8575  00763A  338E               	rrcf	___lldiv@divisor& (0+255),f,b
  8576  00763C                     
  8577                           ; BSR set to: 0
  8578  00763C  2F96               	decfsz	___lldiv@counter& (0+255),f,b
  8579  00763E  EFFC  F03A         	goto	l9146
  8580  007642                     l659:
  8581                           
  8582                           ; BSR set to: 0
  8583  007642  C092  F08A         	movff	___lldiv@quotient,?___lldiv
  8584  007646  C093  F08B         	movff	___lldiv@quotient+1,?___lldiv+1
  8585  00764A  C094  F08C         	movff	___lldiv@quotient+2,?___lldiv+2
  8586  00764E  C095  F08D         	movff	___lldiv@quotient+3,?___lldiv+3
  8587  007652                     
  8588                           ; BSR set to: 0
  8589  007652  0012               	return		;funcret
  8590  007654                     __end_of___lldiv:
  8591                           	callstack 0
  8592                           
  8593 ;; *************** function ___fltol *****************
  8594 ;; Defined at:
  8595 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  f1              4   58[BANK0 ] unsigned long 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  exp1            1   67[BANK0 ] unsigned char 
  8600 ;;  sign1           1   66[BANK0 ] unsigned char 
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  4   58[BANK0 ] long 
  8603 ;; Registers used:
  8604 ;;		wreg, status,2, status,0
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8610 ;;      Params:         0       4       0       0       0       0       0
  8611 ;;      Locals:         0       2       0       0       0       0       0
  8612 ;;      Temps:          0       4       0       0       0       0       0
  8613 ;;      Totals:         0      10       0       0       0       0       0
  8614 ;;Total ram usage:       10 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:    5
  8617 ;; This function calls:
  8618 ;;		Nothing
  8619 ;; This function is called by:
  8620 ;;		_sprintf
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text21
  8625  006880                     __ptext21:
  8626                           	callstack 0
  8627  006880                     ___fltol:
  8628                           	callstack 24
  8629  006880  0100               	movlb	0	; () banked
  8630  006882  35BC               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8631  006884  35BD               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8632  006886  6FC3               	movwf	___fltol@exp1& (0+255),b
  8633  006888  51C3               	movf	___fltol@exp1& (0+255),w,b
  8634  00688A  A4D8               	btfss	status,2,c
  8635  00688C  EF4A  F034         	goto	u12521
  8636  006890  EF4C  F034         	goto	u12520
  8637  006894                     u12521:
  8638  006894  EF56  F034         	goto	l9354
  8639  006898                     u12520:
  8640  006898                     l9350:
  8641                           
  8642                           ; BSR set to: 0
  8643  006898  0E00               	movlw	0
  8644  00689A  6FBA               	movwf	?___fltol& (0+255),b
  8645  00689C  0E00               	movlw	0
  8646  00689E  6FBB               	movwf	(?___fltol+1)& (0+255),b
  8647  0068A0  0E00               	movlw	0
  8648  0068A2  6FBC               	movwf	(?___fltol+2)& (0+255),b
  8649  0068A4  0E00               	movlw	0
  8650  0068A6  6FBD               	movwf	(?___fltol+3)& (0+255),b
  8651  0068A8  EFC3  F034         	goto	l938
  8652  0068AC                     l9354:
  8653                           
  8654                           ; BSR set to: 0
  8655  0068AC  C0BA  F0BE         	movff	___fltol@f1,??___fltol
  8656  0068B0  C0BB  F0BF         	movff	___fltol@f1+1,??___fltol+1
  8657  0068B4  C0BC  F0C0         	movff	___fltol@f1+2,??___fltol+2
  8658  0068B8  C0BD  F0C1         	movff	___fltol@f1+3,??___fltol+3
  8659  0068BC  0E20               	movlw	32
  8660  0068BE  EF66  F034         	goto	u12530
  8661  0068C2                     u12535:
  8662  0068C2  90D8               	bcf	status,0,c
  8663  0068C4  33C1               	rrcf	(??___fltol+3)& (0+255),f,b
  8664  0068C6  33C0               	rrcf	(??___fltol+2)& (0+255),f,b
  8665  0068C8  33BF               	rrcf	(??___fltol+1)& (0+255),f,b
  8666  0068CA  33BE               	rrcf	??___fltol& (0+255),f,b
  8667  0068CC                     u12530:
  8668  0068CC  2EE8               	decfsz	wreg,f,c
  8669  0068CE  EF61  F034         	goto	u12535
  8670  0068D2  51BE               	movf	??___fltol& (0+255),w,b
  8671  0068D4  6FC2               	movwf	___fltol@sign1& (0+255),b
  8672  0068D6                     
  8673                           ; BSR set to: 0
  8674  0068D6  8FBC               	bsf	(___fltol@f1+2)& (0+255),7,b
  8675  0068D8                     
  8676                           ; BSR set to: 0
  8677  0068D8  0EFF               	movlw	255
  8678  0068DA  17BA               	andwf	___fltol@f1& (0+255),f,b
  8679  0068DC  0EFF               	movlw	255
  8680  0068DE  17BB               	andwf	(___fltol@f1+1)& (0+255),f,b
  8681  0068E0  0EFF               	movlw	255
  8682  0068E2  17BC               	andwf	(___fltol@f1+2)& (0+255),f,b
  8683  0068E4  0E00               	movlw	0
  8684  0068E6  17BD               	andwf	(___fltol@f1+3)& (0+255),f,b
  8685  0068E8                     
  8686                           ; BSR set to: 0
  8687  0068E8  0E96               	movlw	150
  8688  0068EA  5FC3               	subwf	___fltol@exp1& (0+255),f,b
  8689  0068EC                     
  8690                           ; BSR set to: 0
  8691  0068EC  BFC3               	btfsc	___fltol@exp1& (0+255),7,b
  8692  0068EE  EF7D  F034         	goto	u12540
  8693  0068F2  EF7B  F034         	goto	u12541
  8694  0068F6                     u12541:
  8695  0068F6  EF93  F034         	goto	l9374
  8696  0068FA                     u12540:
  8697  0068FA                     
  8698                           ; BSR set to: 0
  8699  0068FA  51C3               	movf	___fltol@exp1& (0+255),w,b
  8700  0068FC  0A80               	xorlw	128
  8701  0068FE  0F97               	addlw	151
  8702  006900  B0D8               	btfsc	status,0,c
  8703  006902  EF85  F034         	goto	u12551
  8704  006906  EF87  F034         	goto	u12550
  8705  00690A                     u12551:
  8706  00690A  EF89  F034         	goto	l9370
  8707  00690E                     u12550:
  8708  00690E  EF4C  F034         	goto	l9350
  8709  006912                     l9370:
  8710                           
  8711                           ; BSR set to: 0
  8712  006912  90D8               	bcf	status,0,c
  8713  006914  33BD               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8714  006916  33BC               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8715  006918  33BB               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8716  00691A  33BA               	rrcf	___fltol@f1& (0+255),f,b
  8717  00691C                     
  8718                           ; BSR set to: 0
  8719  00691C  3FC3               	incfsz	___fltol@exp1& (0+255),f,b
  8720  00691E  EF89  F034         	goto	l9370
  8721  006922  EFAB  F034         	goto	l9384
  8722  006926                     l9374:
  8723                           
  8724                           ; BSR set to: 0
  8725  006926  0E1F               	movlw	31
  8726  006928  65C3               	cpfsgt	___fltol@exp1& (0+255),b
  8727  00692A  EF99  F034         	goto	u12561
  8728  00692E  EF9B  F034         	goto	u12560
  8729  006932                     u12561:
  8730  006932  EFA3  F034         	goto	l9382
  8731  006936                     u12560:
  8732  006936  EF4C  F034         	goto	l9350
  8733  00693A                     l9380:
  8734                           
  8735                           ; BSR set to: 0
  8736  00693A  90D8               	bcf	status,0,c
  8737  00693C  37BA               	rlcf	___fltol@f1& (0+255),f,b
  8738  00693E  37BB               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8739  006940  37BC               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8740  006942  37BD               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8741  006944  07C3               	decf	___fltol@exp1& (0+255),f,b
  8742  006946                     l9382:
  8743                           
  8744                           ; BSR set to: 0
  8745  006946  51C3               	movf	___fltol@exp1& (0+255),w,b
  8746  006948  A4D8               	btfss	status,2,c
  8747  00694A  EFA9  F034         	goto	u12571
  8748  00694E  EFAB  F034         	goto	u12570
  8749  006952                     u12571:
  8750  006952  EF9D  F034         	goto	l9380
  8751  006956                     u12570:
  8752  006956                     l9384:
  8753                           
  8754                           ; BSR set to: 0
  8755  006956  51C2               	movf	___fltol@sign1& (0+255),w,b
  8756  006958  B4D8               	btfsc	status,2,c
  8757  00695A  EFB1  F034         	goto	u12581
  8758  00695E  EFB3  F034         	goto	u12580
  8759  006962                     u12581:
  8760  006962  EFBB  F034         	goto	l9388
  8761  006966                     u12580:
  8762  006966                     
  8763                           ; BSR set to: 0
  8764  006966  1FBD               	comf	(___fltol@f1+3)& (0+255),f,b
  8765  006968  1FBC               	comf	(___fltol@f1+2)& (0+255),f,b
  8766  00696A  1FBB               	comf	(___fltol@f1+1)& (0+255),f,b
  8767  00696C  6DBA               	negf	___fltol@f1& (0+255),b
  8768  00696E  0E00               	movlw	0
  8769  006970  23BB               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8770  006972  23BC               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8771  006974  23BD               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8772  006976                     l9388:
  8773                           
  8774                           ; BSR set to: 0
  8775  006976  C0BA  F0BA         	movff	___fltol@f1,?___fltol
  8776  00697A  C0BB  F0BB         	movff	___fltol@f1+1,?___fltol+1
  8777  00697E  C0BC  F0BC         	movff	___fltol@f1+2,?___fltol+2
  8778  006982  C0BD  F0BD         	movff	___fltol@f1+3,?___fltol+3
  8779  006986                     l938:
  8780                           
  8781                           ; BSR set to: 0
  8782  006986  0012               	return		;funcret
  8783  006988                     __end_of___fltol:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function ___flsub *****************
  8787 ;; Defined at:
  8788 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  b               4   78[BANK0 ] long 
  8791 ;;  a               4   82[BANK0 ] long 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;		None
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  4   78[BANK0 ] long 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8803 ;;      Params:         0       8       0       0       0       0       0
  8804 ;;      Locals:         0       0       0       0       0       0       0
  8805 ;;      Temps:          0       0       0       0       0       0       0
  8806 ;;      Totals:         0       8       0       0       0       0       0
  8807 ;;Total ram usage:        8 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    6
  8810 ;; This function calls:
  8811 ;;		___fladd
  8812 ;; This function is called by:
  8813 ;;		_sprintf
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text22
  8818  007E9E                     __ptext22:
  8819                           	callstack 0
  8820  007E9E                     ___flsub:
  8821                           	callstack 23
  8822  007E9E  0E00               	movlw	0
  8823  007EA0  0100               	movlb	0	; () banked
  8824  007EA2  1BD2               	xorwf	___flsub@a& (0+255),f,b
  8825  007EA4  0E00               	movlw	0
  8826  007EA6  1BD3               	xorwf	(___flsub@a+1)& (0+255),f,b
  8827  007EA8  0E00               	movlw	0
  8828  007EAA  1BD4               	xorwf	(___flsub@a+2)& (0+255),f,b
  8829  007EAC  0E80               	movlw	128
  8830  007EAE  1BD5               	xorwf	(___flsub@a+3)& (0+255),f,b
  8831  007EB0                     
  8832                           ; BSR set to: 0
  8833  007EB0  C0CE  F0BE         	movff	___flsub@b,___fladd@b
  8834  007EB4  C0CF  F0BF         	movff	___flsub@b+1,___fladd@b+1
  8835  007EB8  C0D0  F0C0         	movff	___flsub@b+2,___fladd@b+2
  8836  007EBC  C0D1  F0C1         	movff	___flsub@b+3,___fladd@b+3
  8837  007EC0  C0D2  F0C2         	movff	___flsub@a,___fladd@a
  8838  007EC4  C0D3  F0C3         	movff	___flsub@a+1,___fladd@a+1
  8839  007EC8  C0D4  F0C4         	movff	___flsub@a+2,___fladd@a+2
  8840  007ECC  C0D5  F0C5         	movff	___flsub@a+3,___fladd@a+3
  8841  007ED0  ECE2  F013         	call	___fladd	;wreg free
  8842  007ED4  C0BE  F0CE         	movff	?___fladd,?___flsub
  8843  007ED8  C0BF  F0CF         	movff	?___fladd+1,?___flsub+1
  8844  007EDC  C0C0  F0D0         	movff	?___fladd+2,?___flsub+2
  8845  007EE0  C0C1  F0D1         	movff	?___fladd+3,?___flsub+3
  8846  007EE4  0012               	return		;funcret
  8847  007EE6                     __end_of___flsub:
  8848                           	callstack 0
  8849                           
  8850 ;; *************** function ___fladd *****************
  8851 ;; Defined at:
  8852 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  b               4   62[BANK0 ] long 
  8855 ;;  a               4   66[BANK0 ] long 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  grs             1   77[BANK0 ] unsigned char 
  8858 ;;  bexp            1   76[BANK0 ] unsigned char 
  8859 ;;  aexp            1   75[BANK0 ] unsigned char 
  8860 ;;  signs           1   74[BANK0 ] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  4   62[BANK0 ] unsigned char 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8870 ;;      Params:         0       8       0       0       0       0       0
  8871 ;;      Locals:         0       4       0       0       0       0       0
  8872 ;;      Temps:          0       4       0       0       0       0       0
  8873 ;;      Totals:         0      16       0       0       0       0       0
  8874 ;;Total ram usage:       16 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    5
  8877 ;; This function calls:
  8878 ;;		Nothing
  8879 ;; This function is called by:
  8880 ;;		_sprintf
  8881 ;;		___flsub
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           	psect	text23
  8886  0027C4                     __ptext23:
  8887                           	callstack 0
  8888  0027C4                     ___fladd:
  8889                           	callstack 23
  8890  0027C4  0100               	movlb	0	; () banked
  8891  0027C6  51C1               	movf	(___fladd@b+3)& (0+255),w,b
  8892  0027C8  0B80               	andlw	128
  8893  0027CA  6FCA               	movwf	___fladd@signs& (0+255),b
  8894  0027CC  51C1               	movf	(___fladd@b+3)& (0+255),w,b
  8895  0027CE  25C1               	addwf	(___fladd@b+3)& (0+255),w,b
  8896  0027D0  6FCC               	movwf	___fladd@bexp& (0+255),b
  8897  0027D2                     
  8898                           ; BSR set to: 0
  8899  0027D2  AFC0               	btfss	(___fladd@b+2)& (0+255),7,b
  8900  0027D4  EFEE  F013         	goto	u11081
  8901  0027D8  EFF0  F013         	goto	u11080
  8902  0027DC                     u11081:
  8903  0027DC  EFF1  F013         	goto	l8440
  8904  0027E0                     u11080:
  8905  0027E0                     
  8906                           ; BSR set to: 0
  8907  0027E0  81CC               	bsf	___fladd@bexp& (0+255),0,b
  8908  0027E2                     l8440:
  8909                           
  8910                           ; BSR set to: 0
  8911  0027E2  51CC               	movf	___fladd@bexp& (0+255),w,b
  8912  0027E4  B4D8               	btfsc	status,2,c
  8913  0027E6  EFF7  F013         	goto	u11091
  8914  0027EA  EFF9  F013         	goto	u11090
  8915  0027EE                     u11091:
  8916  0027EE  EF0E  F014         	goto	l8450
  8917  0027F2                     u11090:
  8918  0027F2                     
  8919                           ; BSR set to: 0
  8920  0027F2  29CC               	incf	___fladd@bexp& (0+255),w,b
  8921  0027F4  A4D8               	btfss	status,2,c
  8922  0027F6  EFFF  F013         	goto	u11101
  8923  0027FA  EF01  F014         	goto	u11100
  8924  0027FE                     u11101:
  8925  0027FE  EF09  F014         	goto	l8446
  8926  002802                     u11100:
  8927  002802                     
  8928                           ; BSR set to: 0
  8929  002802  0E00               	movlw	0
  8930  002804  6FBE               	movwf	___fladd@b& (0+255),b
  8931  002806  0E00               	movlw	0
  8932  002808  6FBF               	movwf	(___fladd@b+1)& (0+255),b
  8933  00280A  0E00               	movlw	0
  8934  00280C  6FC0               	movwf	(___fladd@b+2)& (0+255),b
  8935  00280E  0E00               	movlw	0
  8936  002810  6FC1               	movwf	(___fladd@b+3)& (0+255),b
  8937  002812                     l8446:
  8938                           
  8939                           ; BSR set to: 0
  8940  002812  8FC0               	bsf	(___fladd@b+2)& (0+255),7,b
  8941  002814                     
  8942                           ; BSR set to: 0
  8943  002814  0E00               	movlw	0
  8944  002816  6FC1               	movwf	(___fladd@b+3)& (0+255),b
  8945  002818  EF16  F014         	goto	l8452
  8946  00281C                     l8450:
  8947                           
  8948                           ; BSR set to: 0
  8949  00281C  0E00               	movlw	0
  8950  00281E  6FBE               	movwf	___fladd@b& (0+255),b
  8951  002820  0E00               	movlw	0
  8952  002822  6FBF               	movwf	(___fladd@b+1)& (0+255),b
  8953  002824  0E00               	movlw	0
  8954  002826  6FC0               	movwf	(___fladd@b+2)& (0+255),b
  8955  002828  0E00               	movlw	0
  8956  00282A  6FC1               	movwf	(___fladd@b+3)& (0+255),b
  8957  00282C                     l8452:
  8958                           
  8959                           ; BSR set to: 0
  8960  00282C  51C5               	movf	(___fladd@a+3)& (0+255),w,b
  8961  00282E  0B80               	andlw	128
  8962  002830  6FCB               	movwf	___fladd@aexp& (0+255),b
  8963  002832                     
  8964                           ; BSR set to: 0
  8965  002832  51CA               	movf	___fladd@signs& (0+255),w,b
  8966  002834  19CB               	xorwf	___fladd@aexp& (0+255),w,b
  8967  002836  B4D8               	btfsc	status,2,c
  8968  002838  EF20  F014         	goto	u11111
  8969  00283C  EF22  F014         	goto	u11110
  8970  002840                     u11111:
  8971  002840  EF23  F014         	goto	l8458
  8972  002844                     u11110:
  8973  002844                     
  8974                           ; BSR set to: 0
  8975  002844  8DCA               	bsf	___fladd@signs& (0+255),6,b
  8976  002846                     l8458:
  8977                           
  8978                           ; BSR set to: 0
  8979  002846  51C5               	movf	(___fladd@a+3)& (0+255),w,b
  8980  002848  25C5               	addwf	(___fladd@a+3)& (0+255),w,b
  8981  00284A  6FCB               	movwf	___fladd@aexp& (0+255),b
  8982  00284C                     
  8983                           ; BSR set to: 0
  8984  00284C  AFC4               	btfss	(___fladd@a+2)& (0+255),7,b
  8985  00284E  EF2B  F014         	goto	u11121
  8986  002852  EF2D  F014         	goto	u11120
  8987  002856                     u11121:
  8988  002856  EF2E  F014         	goto	l8464
  8989  00285A                     u11120:
  8990  00285A                     
  8991                           ; BSR set to: 0
  8992  00285A  81CB               	bsf	___fladd@aexp& (0+255),0,b
  8993  00285C                     l8464:
  8994                           
  8995                           ; BSR set to: 0
  8996  00285C  51CB               	movf	___fladd@aexp& (0+255),w,b
  8997  00285E  B4D8               	btfsc	status,2,c
  8998  002860  EF34  F014         	goto	u11131
  8999  002864  EF36  F014         	goto	u11130
  9000  002868                     u11131:
  9001  002868  EF4B  F014         	goto	l8474
  9002  00286C                     u11130:
  9003  00286C                     
  9004                           ; BSR set to: 0
  9005  00286C  29CB               	incf	___fladd@aexp& (0+255),w,b
  9006  00286E  A4D8               	btfss	status,2,c
  9007  002870  EF3C  F014         	goto	u11141
  9008  002874  EF3E  F014         	goto	u11140
  9009  002878                     u11141:
  9010  002878  EF46  F014         	goto	l8470
  9011  00287C                     u11140:
  9012  00287C                     
  9013                           ; BSR set to: 0
  9014  00287C  0E00               	movlw	0
  9015  00287E  6FC2               	movwf	___fladd@a& (0+255),b
  9016  002880  0E00               	movlw	0
  9017  002882  6FC3               	movwf	(___fladd@a+1)& (0+255),b
  9018  002884  0E00               	movlw	0
  9019  002886  6FC4               	movwf	(___fladd@a+2)& (0+255),b
  9020  002888  0E00               	movlw	0
  9021  00288A  6FC5               	movwf	(___fladd@a+3)& (0+255),b
  9022  00288C                     l8470:
  9023                           
  9024                           ; BSR set to: 0
  9025  00288C  8FC4               	bsf	(___fladd@a+2)& (0+255),7,b
  9026  00288E                     
  9027                           ; BSR set to: 0
  9028  00288E  0E00               	movlw	0
  9029  002890  6FC5               	movwf	(___fladd@a+3)& (0+255),b
  9030  002892  EF53  F014         	goto	l8476
  9031  002896                     l8474:
  9032                           
  9033                           ; BSR set to: 0
  9034  002896  0E00               	movlw	0
  9035  002898  6FC2               	movwf	___fladd@a& (0+255),b
  9036  00289A  0E00               	movlw	0
  9037  00289C  6FC3               	movwf	(___fladd@a+1)& (0+255),b
  9038  00289E  0E00               	movlw	0
  9039  0028A0  6FC4               	movwf	(___fladd@a+2)& (0+255),b
  9040  0028A2  0E00               	movlw	0
  9041  0028A4  6FC5               	movwf	(___fladd@a+3)& (0+255),b
  9042  0028A6                     l8476:
  9043                           
  9044                           ; BSR set to: 0
  9045  0028A6  51CC               	movf	___fladd@bexp& (0+255),w,b
  9046  0028A8  5DCB               	subwf	___fladd@aexp& (0+255),w,b
  9047  0028AA  B0D8               	btfsc	status,0,c
  9048  0028AC  EF5A  F014         	goto	u11151
  9049  0028B0  EF5C  F014         	goto	u11150
  9050  0028B4                     u11151:
  9051  0028B4  EF83  F014         	goto	l8512
  9052  0028B8                     u11150:
  9053  0028B8                     
  9054                           ; BSR set to: 0
  9055  0028B8  ADCA               	btfss	___fladd@signs& (0+255),6,b
  9056  0028BA  EF61  F014         	goto	u11161
  9057  0028BE  EF63  F014         	goto	u11160
  9058  0028C2                     u11161:
  9059  0028C2  EF65  F014         	goto	l8482
  9060  0028C6                     u11160:
  9061  0028C6                     
  9062                           ; BSR set to: 0
  9063  0028C6  0E80               	movlw	128
  9064  0028C8  1BCA               	xorwf	___fladd@signs& (0+255),f,b
  9065  0028CA                     l8482:
  9066                           
  9067                           ; BSR set to: 0
  9068  0028CA  C0CC  F0CD         	movff	___fladd@bexp,___fladd@grs
  9069  0028CE                     
  9070                           ; BSR set to: 0
  9071  0028CE  C0CB  F0CC         	movff	___fladd@aexp,___fladd@bexp
  9072  0028D2                     
  9073                           ; BSR set to: 0
  9074  0028D2  C0CD  F0CB         	movff	___fladd@grs,___fladd@aexp
  9075  0028D6                     
  9076                           ; BSR set to: 0
  9077  0028D6  C0BE  F0CD         	movff	___fladd@b,___fladd@grs
  9078  0028DA                     
  9079                           ; BSR set to: 0
  9080  0028DA  C0C2  F0BE         	movff	___fladd@a,___fladd@b
  9081  0028DE                     
  9082                           ; BSR set to: 0
  9083  0028DE  C0CD  F0C2         	movff	___fladd@grs,___fladd@a
  9084  0028E2                     
  9085                           ; BSR set to: 0
  9086  0028E2  C0BF  F0CD         	movff	___fladd@b+1,___fladd@grs
  9087  0028E6                     
  9088                           ; BSR set to: 0
  9089  0028E6  C0C3  F0BF         	movff	___fladd@a+1,___fladd@b+1
  9090  0028EA                     
  9091                           ; BSR set to: 0
  9092  0028EA  C0CD  F0C3         	movff	___fladd@grs,___fladd@a+1
  9093  0028EE                     
  9094                           ; BSR set to: 0
  9095  0028EE  C0C0  F0CD         	movff	___fladd@b+2,___fladd@grs
  9096  0028F2                     
  9097                           ; BSR set to: 0
  9098  0028F2  C0C4  F0C0         	movff	___fladd@a+2,___fladd@b+2
  9099  0028F6                     
  9100                           ; BSR set to: 0
  9101  0028F6  C0CD  F0C4         	movff	___fladd@grs,___fladd@a+2
  9102  0028FA                     
  9103                           ; BSR set to: 0
  9104  0028FA  C0C1  F0CD         	movff	___fladd@b+3,___fladd@grs
  9105  0028FE                     
  9106                           ; BSR set to: 0
  9107  0028FE  C0C5  F0C1         	movff	___fladd@a+3,___fladd@b+3
  9108  002902                     
  9109                           ; BSR set to: 0
  9110  002902  C0CD  F0C5         	movff	___fladd@grs,___fladd@a+3
  9111  002906                     l8512:
  9112                           
  9113                           ; BSR set to: 0
  9114  002906  0E00               	movlw	0
  9115  002908  6FCD               	movwf	___fladd@grs& (0+255),b
  9116  00290A                     
  9117                           ; BSR set to: 0
  9118  00290A  51CC               	movf	___fladd@bexp& (0+255),w,b
  9119  00290C  C0CB  F0C6         	movff	___fladd@aexp,??___fladd
  9120  002910  6BC7               	clrf	(??___fladd+1)& (0+255),b
  9121  002912  5FC6               	subwf	??___fladd& (0+255),f,b
  9122  002914  0E00               	movlw	0
  9123  002916  5BC7               	subwfb	(??___fladd+1)& (0+255),f,b
  9124  002918  BFC7               	btfsc	(??___fladd+1)& (0+255),7,b
  9125  00291A  EF98  F014         	goto	u11171
  9126  00291E  51C7               	movf	(??___fladd+1)& (0+255),w,b
  9127  002920  E109               	bnz	u11170
  9128  002922  0E1A               	movlw	26
  9129  002924  5DC6               	subwf	??___fladd& (0+255),w,b
  9130  002926  A0D8               	btfss	status,0,c
  9131  002928  EF98  F014         	goto	u11171
  9132  00292C  EF9A  F014         	goto	u11170
  9133  002930                     u11171:
  9134  002930  EFD1  F014         	goto	l1183
  9135  002934                     u11170:
  9136  002934                     
  9137                           ; BSR set to: 0
  9138  002934  51BE               	movf	___fladd@b& (0+255),w,b
  9139  002936  11BF               	iorwf	(___fladd@b+1)& (0+255),w,b
  9140  002938  11C0               	iorwf	(___fladd@b+2)& (0+255),w,b
  9141  00293A  11C1               	iorwf	(___fladd@b+3)& (0+255),w,b
  9142  00293C  A4D8               	btfss	status,2,c
  9143  00293E  EFA3  F014         	goto	u11181
  9144  002942  EFA6  F014         	goto	u11180
  9145  002946                     u11181:
  9146  002946  0E01               	movlw	1
  9147  002948  EFA7  F014         	goto	u11190
  9148  00294C                     u11180:
  9149  00294C  0E00               	movlw	0
  9150  00294E                     u11190:
  9151  00294E  6FCD               	movwf	___fladd@grs& (0+255),b
  9152  002950                     
  9153                           ; BSR set to: 0
  9154  002950  0E00               	movlw	0
  9155  002952  6FBE               	movwf	___fladd@b& (0+255),b
  9156  002954  0E00               	movlw	0
  9157  002956  6FBF               	movwf	(___fladd@b+1)& (0+255),b
  9158  002958  0E00               	movlw	0
  9159  00295A  6FC0               	movwf	(___fladd@b+2)& (0+255),b
  9160  00295C  0E00               	movlw	0
  9161  00295E  6FC1               	movwf	(___fladd@b+3)& (0+255),b
  9162  002960                     
  9163                           ; BSR set to: 0
  9164  002960  C0CB  F0CC         	movff	___fladd@aexp,___fladd@bexp
  9165  002964  EFDA  F014         	goto	l1182
  9166  002968                     l1184:
  9167                           
  9168                           ; BSR set to: 0
  9169  002968  A1CD               	btfss	___fladd@grs& (0+255),0,b
  9170  00296A  EFB9  F014         	goto	u11201
  9171  00296E  EFBB  F014         	goto	u11200
  9172  002972                     u11201:
  9173  002972  EFC1  F014         	goto	l8524
  9174  002976                     u11200:
  9175  002976                     
  9176                           ; BSR set to: 0
  9177  002976  90D8               	bcf	status,0,c
  9178  002978  31CD               	rrcf	___fladd@grs& (0+255),w,b
  9179  00297A  0901               	iorlw	1
  9180  00297C  6FCD               	movwf	___fladd@grs& (0+255),b
  9181  00297E  EFC3  F014         	goto	l8526
  9182  002982                     l8524:
  9183                           
  9184                           ; BSR set to: 0
  9185  002982  90D8               	bcf	status,0,c
  9186  002984  33CD               	rrcf	___fladd@grs& (0+255),f,b
  9187  002986                     l8526:
  9188                           
  9189                           ; BSR set to: 0
  9190  002986  A1BE               	btfss	___fladd@b& (0+255),0,b
  9191  002988  EFC8  F014         	goto	u11211
  9192  00298C  EFCA  F014         	goto	u11210
  9193  002990                     u11211:
  9194  002990  EFCB  F014         	goto	l8530
  9195  002994                     u11210:
  9196  002994                     
  9197                           ; BSR set to: 0
  9198  002994  8FCD               	bsf	___fladd@grs& (0+255),7,b
  9199  002996                     l8530:
  9200                           
  9201                           ; BSR set to: 0
  9202  002996  35C1               	rlcf	(___fladd@b+3)& (0+255),w,b
  9203  002998  33C1               	rrcf	(___fladd@b+3)& (0+255),f,b
  9204  00299A  33C0               	rrcf	(___fladd@b+2)& (0+255),f,b
  9205  00299C  33BF               	rrcf	(___fladd@b+1)& (0+255),f,b
  9206  00299E  33BE               	rrcf	___fladd@b& (0+255),f,b
  9207  0029A0                     
  9208                           ; BSR set to: 0
  9209  0029A0  2BCC               	incf	___fladd@bexp& (0+255),f,b
  9210  0029A2                     l1183:
  9211                           
  9212                           ; BSR set to: 0
  9213  0029A2  51CB               	movf	___fladd@aexp& (0+255),w,b
  9214  0029A4  5DCC               	subwf	___fladd@bexp& (0+255),w,b
  9215  0029A6  A0D8               	btfss	status,0,c
  9216  0029A8  EFD8  F014         	goto	u11221
  9217  0029AC  EFDA  F014         	goto	u11220
  9218  0029B0                     u11221:
  9219  0029B0  EFB4  F014         	goto	l1184
  9220  0029B4                     u11220:
  9221  0029B4                     l1182:
  9222                           
  9223                           ; BSR set to: 0
  9224  0029B4  BDCA               	btfsc	___fladd@signs& (0+255),6,b
  9225  0029B6  EFDF  F014         	goto	u11231
  9226  0029BA  EFE1  F014         	goto	u11230
  9227  0029BE                     u11231:
  9228  0029BE  EF21  F015         	goto	l8558
  9229  0029C2                     u11230:
  9230  0029C2                     
  9231                           ; BSR set to: 0
  9232  0029C2  51CC               	movf	___fladd@bexp& (0+255),w,b
  9233  0029C4  A4D8               	btfss	status,2,c
  9234  0029C6  EFE7  F014         	goto	u11241
  9235  0029CA  EFE9  F014         	goto	u11240
  9236  0029CE                     u11241:
  9237  0029CE  EFF3  F014         	goto	l8540
  9238  0029D2                     u11240:
  9239  0029D2                     
  9240                           ; BSR set to: 0
  9241  0029D2  0E00               	movlw	0
  9242  0029D4  6FBE               	movwf	?___fladd& (0+255),b
  9243  0029D6  0E00               	movlw	0
  9244  0029D8  6FBF               	movwf	(?___fladd+1)& (0+255),b
  9245  0029DA  0E00               	movlw	0
  9246  0029DC  6FC0               	movwf	(?___fladd+2)& (0+255),b
  9247  0029DE  0E00               	movlw	0
  9248  0029E0  6FC1               	movwf	(?___fladd+3)& (0+255),b
  9249  0029E2  EF42  F016         	goto	l1191
  9250  0029E6                     l8540:
  9251                           
  9252                           ; BSR set to: 0
  9253  0029E6  51C2               	movf	___fladd@a& (0+255),w,b
  9254  0029E8  27BE               	addwf	___fladd@b& (0+255),f,b
  9255  0029EA  51C3               	movf	(___fladd@a+1)& (0+255),w,b
  9256  0029EC  23BF               	addwfc	(___fladd@b+1)& (0+255),f,b
  9257  0029EE  51C4               	movf	(___fladd@a+2)& (0+255),w,b
  9258  0029F0  23C0               	addwfc	(___fladd@b+2)& (0+255),f,b
  9259  0029F2  51C5               	movf	(___fladd@a+3)& (0+255),w,b
  9260  0029F4  23C1               	addwfc	(___fladd@b+3)& (0+255),f,b
  9261  0029F6                     
  9262                           ; BSR set to: 0
  9263  0029F6  A1C1               	btfss	(___fladd@b+3)& (0+255),0,b
  9264  0029F8  EF00  F015         	goto	u11251
  9265  0029FC  EF02  F015         	goto	u11250
  9266  002A00                     u11251:
  9267  002A00  EFAE  F015         	goto	l8594
  9268  002A04                     u11250:
  9269  002A04                     
  9270                           ; BSR set to: 0
  9271  002A04  A1CD               	btfss	___fladd@grs& (0+255),0,b
  9272  002A06  EF07  F015         	goto	u11261
  9273  002A0A  EF09  F015         	goto	u11260
  9274  002A0E                     u11261:
  9275  002A0E  EF0F  F015         	goto	l8548
  9276  002A12                     u11260:
  9277  002A12                     
  9278                           ; BSR set to: 0
  9279  002A12  90D8               	bcf	status,0,c
  9280  002A14  31CD               	rrcf	___fladd@grs& (0+255),w,b
  9281  002A16  0901               	iorlw	1
  9282  002A18  6FCD               	movwf	___fladd@grs& (0+255),b
  9283  002A1A  EF11  F015         	goto	l8550
  9284  002A1E                     l8548:
  9285                           
  9286                           ; BSR set to: 0
  9287  002A1E  90D8               	bcf	status,0,c
  9288  002A20  33CD               	rrcf	___fladd@grs& (0+255),f,b
  9289  002A22                     l8550:
  9290                           
  9291                           ; BSR set to: 0
  9292  002A22  A1BE               	btfss	___fladd@b& (0+255),0,b
  9293  002A24  EF16  F015         	goto	u11271
  9294  002A28  EF18  F015         	goto	u11270
  9295  002A2C                     u11271:
  9296  002A2C  EF19  F015         	goto	l8554
  9297  002A30                     u11270:
  9298  002A30                     
  9299                           ; BSR set to: 0
  9300  002A30  8FCD               	bsf	___fladd@grs& (0+255),7,b
  9301  002A32                     l8554:
  9302                           
  9303                           ; BSR set to: 0
  9304  002A32  35C1               	rlcf	(___fladd@b+3)& (0+255),w,b
  9305  002A34  33C1               	rrcf	(___fladd@b+3)& (0+255),f,b
  9306  002A36  33C0               	rrcf	(___fladd@b+2)& (0+255),f,b
  9307  002A38  33BF               	rrcf	(___fladd@b+1)& (0+255),f,b
  9308  002A3A  33BE               	rrcf	___fladd@b& (0+255),f,b
  9309  002A3C                     
  9310                           ; BSR set to: 0
  9311  002A3C  2BCC               	incf	___fladd@bexp& (0+255),f,b
  9312  002A3E  EFAE  F015         	goto	l8594
  9313  002A42                     l8558:
  9314                           
  9315                           ; BSR set to: 0
  9316  002A42  51C2               	movf	___fladd@a& (0+255),w,b
  9317  002A44  5DBE               	subwf	___fladd@b& (0+255),w,b
  9318  002A46  51C3               	movf	(___fladd@a+1)& (0+255),w,b
  9319  002A48  59BF               	subwfb	(___fladd@b+1)& (0+255),w,b
  9320  002A4A  51C4               	movf	(___fladd@a+2)& (0+255),w,b
  9321  002A4C  59C0               	subwfb	(___fladd@b+2)& (0+255),w,b
  9322  002A4E  51C1               	movf	(___fladd@b+3)& (0+255),w,b
  9323  002A50  0A80               	xorlw	128
  9324  002A52  6FC6               	movwf	??___fladd& (0+255),b
  9325  002A54  51C5               	movf	(___fladd@a+3)& (0+255),w,b
  9326  002A56  0A80               	xorlw	128
  9327  002A58  59C6               	subwfb	??___fladd& (0+255),w,b
  9328  002A5A  B0D8               	btfsc	status,0,c
  9329  002A5C  EF32  F015         	goto	u11281
  9330  002A60  EF34  F015         	goto	u11280
  9331  002A64                     u11281:
  9332  002A64  EF5F  F015         	goto	l8568
  9333  002A68                     u11280:
  9334  002A68                     
  9335                           ; BSR set to: 0
  9336  002A68  51BE               	movf	___fladd@b& (0+255),w,b
  9337  002A6A  5DC2               	subwf	___fladd@a& (0+255),w,b
  9338  002A6C  6FC6               	movwf	??___fladd& (0+255),b
  9339  002A6E  51BF               	movf	(___fladd@b+1)& (0+255),w,b
  9340  002A70  59C3               	subwfb	(___fladd@a+1)& (0+255),w,b
  9341  002A72  6FC7               	movwf	(??___fladd+1)& (0+255),b
  9342  002A74  51C0               	movf	(___fladd@b+2)& (0+255),w,b
  9343  002A76  59C4               	subwfb	(___fladd@a+2)& (0+255),w,b
  9344  002A78  6FC8               	movwf	(??___fladd+2)& (0+255),b
  9345  002A7A  51C1               	movf	(___fladd@b+3)& (0+255),w,b
  9346  002A7C  59C5               	subwfb	(___fladd@a+3)& (0+255),w,b
  9347  002A7E  6FC9               	movwf	(??___fladd+3)& (0+255),b
  9348  002A80  0EFF               	movlw	255
  9349  002A82  25C6               	addwf	??___fladd& (0+255),w,b
  9350  002A84  6FBE               	movwf	___fladd@b& (0+255),b
  9351  002A86  0EFF               	movlw	255
  9352  002A88  21C7               	addwfc	(??___fladd+1)& (0+255),w,b
  9353  002A8A  6FBF               	movwf	(___fladd@b+1)& (0+255),b
  9354  002A8C  0EFF               	movlw	255
  9355  002A8E  21C8               	addwfc	(??___fladd+2)& (0+255),w,b
  9356  002A90  6FC0               	movwf	(___fladd@b+2)& (0+255),b
  9357  002A92  0EFF               	movlw	255
  9358  002A94  21C9               	addwfc	(??___fladd+3)& (0+255),w,b
  9359  002A96  6FC1               	movwf	(___fladd@b+3)& (0+255),b
  9360  002A98  0E80               	movlw	128
  9361  002A9A  1BCA               	xorwf	___fladd@signs& (0+255),f,b
  9362  002A9C                     
  9363                           ; BSR set to: 0
  9364  002A9C  6DCD               	negf	___fladd@grs& (0+255),b
  9365  002A9E                     
  9366                           ; BSR set to: 0
  9367  002A9E  51CD               	movf	___fladd@grs& (0+255),w,b
  9368  002AA0  A4D8               	btfss	status,2,c
  9369  002AA2  EF55  F015         	goto	u11291
  9370  002AA6  EF57  F015         	goto	u11290
  9371  002AAA                     u11291:
  9372  002AAA  EF67  F015         	goto	l1199
  9373  002AAE                     u11290:
  9374  002AAE                     
  9375                           ; BSR set to: 0
  9376  002AAE  0E01               	movlw	1
  9377  002AB0  27BE               	addwf	___fladd@b& (0+255),f,b
  9378  002AB2  0E00               	movlw	0
  9379  002AB4  23BF               	addwfc	(___fladd@b+1)& (0+255),f,b
  9380  002AB6  23C0               	addwfc	(___fladd@b+2)& (0+255),f,b
  9381  002AB8  23C1               	addwfc	(___fladd@b+3)& (0+255),f,b
  9382  002ABA  EF67  F015         	goto	l1199
  9383  002ABE                     l8568:
  9384                           
  9385                           ; BSR set to: 0
  9386  002ABE  51C2               	movf	___fladd@a& (0+255),w,b
  9387  002AC0  5FBE               	subwf	___fladd@b& (0+255),f,b
  9388  002AC2  51C3               	movf	(___fladd@a+1)& (0+255),w,b
  9389  002AC4  5BBF               	subwfb	(___fladd@b+1)& (0+255),f,b
  9390  002AC6  51C4               	movf	(___fladd@a+2)& (0+255),w,b
  9391  002AC8  5BC0               	subwfb	(___fladd@b+2)& (0+255),f,b
  9392  002ACA  51C5               	movf	(___fladd@a+3)& (0+255),w,b
  9393  002ACC  5BC1               	subwfb	(___fladd@b+3)& (0+255),f,b
  9394  002ACE                     l1199:
  9395                           
  9396                           ; BSR set to: 0
  9397  002ACE  51BE               	movf	___fladd@b& (0+255),w,b
  9398  002AD0  11BF               	iorwf	(___fladd@b+1)& (0+255),w,b
  9399  002AD2  11C0               	iorwf	(___fladd@b+2)& (0+255),w,b
  9400  002AD4  11C1               	iorwf	(___fladd@b+3)& (0+255),w,b
  9401  002AD6  A4D8               	btfss	status,2,c
  9402  002AD8  EF70  F015         	goto	u11301
  9403  002ADC  EF72  F015         	goto	u11300
  9404  002AE0                     u11301:
  9405  002AE0  EFA7  F015         	goto	l8592
  9406  002AE4                     u11300:
  9407  002AE4                     
  9408                           ; BSR set to: 0
  9409  002AE4  51CD               	movf	___fladd@grs& (0+255),w,b
  9410  002AE6  A4D8               	btfss	status,2,c
  9411  002AE8  EF78  F015         	goto	u11311
  9412  002AEC  EF7A  F015         	goto	u11310
  9413  002AF0                     u11311:
  9414  002AF0  EFA7  F015         	goto	l8592
  9415  002AF4                     u11310:
  9416  002AF4                     
  9417                           ; BSR set to: 0
  9418  002AF4  0E00               	movlw	0
  9419  002AF6  6FBE               	movwf	?___fladd& (0+255),b
  9420  002AF8  0E00               	movlw	0
  9421  002AFA  6FBF               	movwf	(?___fladd+1)& (0+255),b
  9422  002AFC  0E00               	movlw	0
  9423  002AFE  6FC0               	movwf	(?___fladd+2)& (0+255),b
  9424  002B00  0E00               	movlw	0
  9425  002B02  6FC1               	movwf	(?___fladd+3)& (0+255),b
  9426  002B04  EF42  F016         	goto	l1191
  9427  002B08                     l8576:
  9428                           
  9429                           ; BSR set to: 0
  9430  002B08  90D8               	bcf	status,0,c
  9431  002B0A  37BE               	rlcf	___fladd@b& (0+255),f,b
  9432  002B0C  37BF               	rlcf	(___fladd@b+1)& (0+255),f,b
  9433  002B0E  37C0               	rlcf	(___fladd@b+2)& (0+255),f,b
  9434  002B10  37C1               	rlcf	(___fladd@b+3)& (0+255),f,b
  9435  002B12                     
  9436                           ; BSR set to: 0
  9437  002B12  AFCD               	btfss	___fladd@grs& (0+255),7,b
  9438  002B14  EF8E  F015         	goto	u11321
  9439  002B18  EF90  F015         	goto	u11320
  9440  002B1C                     u11321:
  9441  002B1C  EF91  F015         	goto	l8582
  9442  002B20                     u11320:
  9443  002B20                     
  9444                           ; BSR set to: 0
  9445  002B20  81BE               	bsf	___fladd@b& (0+255),0,b
  9446  002B22                     l8582:
  9447                           
  9448                           ; BSR set to: 0
  9449  002B22  A1CD               	btfss	___fladd@grs& (0+255),0,b
  9450  002B24  EF96  F015         	goto	u11331
  9451  002B28  EF98  F015         	goto	u11330
  9452  002B2C                     u11331:
  9453  002B2C  EF9C  F015         	goto	l8586
  9454  002B30                     u11330:
  9455  002B30                     
  9456                           ; BSR set to: 0
  9457  002B30  80D8               	bsf	status,0,c
  9458  002B32  37CD               	rlcf	___fladd@grs& (0+255),f,b
  9459  002B34  EF9E  F015         	goto	l8588
  9460  002B38                     l8586:
  9461                           
  9462                           ; BSR set to: 0
  9463  002B38  90D8               	bcf	status,0,c
  9464  002B3A  37CD               	rlcf	___fladd@grs& (0+255),f,b
  9465  002B3C                     l8588:
  9466                           
  9467                           ; BSR set to: 0
  9468  002B3C  51CC               	movf	___fladd@bexp& (0+255),w,b
  9469  002B3E  B4D8               	btfsc	status,2,c
  9470  002B40  EFA4  F015         	goto	u11341
  9471  002B44  EFA6  F015         	goto	u11340
  9472  002B48                     u11341:
  9473  002B48  EFA7  F015         	goto	l8592
  9474  002B4C                     u11340:
  9475  002B4C                     
  9476                           ; BSR set to: 0
  9477  002B4C  07CC               	decf	___fladd@bexp& (0+255),f,b
  9478  002B4E                     l8592:
  9479                           
  9480                           ; BSR set to: 0
  9481  002B4E  AFC0               	btfss	(___fladd@b+2)& (0+255),7,b
  9482  002B50  EFAC  F015         	goto	u11351
  9483  002B54  EFAE  F015         	goto	u11350
  9484  002B58                     u11351:
  9485  002B58  EF84  F015         	goto	l8576
  9486  002B5C                     u11350:
  9487  002B5C                     l8594:
  9488                           
  9489                           ; BSR set to: 0
  9490  002B5C  0E00               	movlw	0
  9491  002B5E  6FCB               	movwf	___fladd@aexp& (0+255),b
  9492  002B60                     
  9493                           ; BSR set to: 0
  9494  002B60  AFCD               	btfss	___fladd@grs& (0+255),7,b
  9495  002B62  EFB5  F015         	goto	u11361
  9496  002B66  EFB7  F015         	goto	u11360
  9497  002B6A                     u11361:
  9498  002B6A  EFCF  F015         	goto	l1208
  9499  002B6E                     u11360:
  9500  002B6E                     
  9501                           ; BSR set to: 0
  9502  002B6E  C0CD  F0C6         	movff	___fladd@grs,??___fladd
  9503  002B72  0E7F               	movlw	127
  9504  002B74  17C6               	andwf	??___fladd& (0+255),f,b
  9505  002B76  B4D8               	btfsc	status,2,c
  9506  002B78  EFC0  F015         	goto	u11371
  9507  002B7C  EFC2  F015         	goto	u11370
  9508  002B80                     u11371:
  9509  002B80  EFC6  F015         	goto	l1209
  9510  002B84                     u11370:
  9511  002B84                     l8600:
  9512                           
  9513                           ; BSR set to: 0
  9514  002B84  0E01               	movlw	1
  9515  002B86  6FCB               	movwf	___fladd@aexp& (0+255),b
  9516  002B88  EFCF  F015         	goto	l1208
  9517  002B8C                     l1209:
  9518                           
  9519                           ; BSR set to: 0
  9520  002B8C  A1BE               	btfss	___fladd@b& (0+255),0,b
  9521  002B8E  EFCB  F015         	goto	u11381
  9522  002B92  EFCD  F015         	goto	u11380
  9523  002B96                     u11381:
  9524  002B96  EFCF  F015         	goto	l1208
  9525  002B9A                     u11380:
  9526  002B9A  EFC2  F015         	goto	l8600
  9527  002B9E                     l1208:
  9528                           
  9529                           ; BSR set to: 0
  9530  002B9E  51CB               	movf	___fladd@aexp& (0+255),w,b
  9531  002BA0  B4D8               	btfsc	status,2,c
  9532  002BA2  EFD5  F015         	goto	u11391
  9533  002BA6  EFD7  F015         	goto	u11390
  9534  002BAA                     u11391:
  9535  002BAA  EF02  F016         	goto	l8612
  9536  002BAE                     u11390:
  9537  002BAE                     
  9538                           ; BSR set to: 0
  9539  002BAE  0E01               	movlw	1
  9540  002BB0  27BE               	addwf	___fladd@b& (0+255),f,b
  9541  002BB2  0E00               	movlw	0
  9542  002BB4  23BF               	addwfc	(___fladd@b+1)& (0+255),f,b
  9543  002BB6  23C0               	addwfc	(___fladd@b+2)& (0+255),f,b
  9544  002BB8  23C1               	addwfc	(___fladd@b+3)& (0+255),f,b
  9545  002BBA                     
  9546                           ; BSR set to: 0
  9547  002BBA  A1C1               	btfss	(___fladd@b+3)& (0+255),0,b
  9548  002BBC  EFE2  F015         	goto	u11401
  9549  002BC0  EFE4  F015         	goto	u11400
  9550  002BC4                     u11401:
  9551  002BC4  EF02  F016         	goto	l8612
  9552  002BC8                     u11400:
  9553  002BC8                     
  9554                           ; BSR set to: 0
  9555  002BC8  C0BE  F0C6         	movff	___fladd@b,??___fladd
  9556  002BCC  C0BF  F0C7         	movff	___fladd@b+1,??___fladd+1
  9557  002BD0  C0C0  F0C8         	movff	___fladd@b+2,??___fladd+2
  9558  002BD4  C0C1  F0C9         	movff	___fladd@b+3,??___fladd+3
  9559  002BD8  35C9               	rlcf	(??___fladd+3)& (0+255),w,b
  9560  002BDA  33C9               	rrcf	(??___fladd+3)& (0+255),f,b
  9561  002BDC  33C8               	rrcf	(??___fladd+2)& (0+255),f,b
  9562  002BDE  33C7               	rrcf	(??___fladd+1)& (0+255),f,b
  9563  002BE0  33C6               	rrcf	??___fladd& (0+255),f,b
  9564  002BE2  C0C6  F0BE         	movff	??___fladd,___fladd@b
  9565  002BE6  C0C7  F0BF         	movff	??___fladd+1,___fladd@b+1
  9566  002BEA  C0C8  F0C0         	movff	??___fladd+2,___fladd@b+2
  9567  002BEE  C0C9  F0C1         	movff	??___fladd+3,___fladd@b+3
  9568  002BF2  29CC               	incf	___fladd@bexp& (0+255),w,b
  9569  002BF4  B4D8               	btfsc	status,2,c
  9570  002BF6  EFFF  F015         	goto	u11411
  9571  002BFA  EF01  F016         	goto	u11410
  9572  002BFE                     u11411:
  9573  002BFE  EF02  F016         	goto	l8612
  9574  002C02                     u11410:
  9575  002C02                     
  9576                           ; BSR set to: 0
  9577  002C02  2BCC               	incf	___fladd@bexp& (0+255),f,b
  9578  002C04                     l8612:
  9579                           
  9580                           ; BSR set to: 0
  9581  002C04  29CC               	incf	___fladd@bexp& (0+255),w,b
  9582  002C06  B4D8               	btfsc	status,2,c
  9583  002C08  EF08  F016         	goto	u11421
  9584  002C0C  EF0A  F016         	goto	u11420
  9585  002C10                     u11421:
  9586  002C10  EF12  F016         	goto	l8616
  9587  002C14                     u11420:
  9588  002C14                     
  9589                           ; BSR set to: 0
  9590  002C14  51CC               	movf	___fladd@bexp& (0+255),w,b
  9591  002C16  A4D8               	btfss	status,2,c
  9592  002C18  EF10  F016         	goto	u11431
  9593  002C1C  EF12  F016         	goto	u11430
  9594  002C20                     u11431:
  9595  002C20  EF24  F016         	goto	l8620
  9596  002C24                     u11430:
  9597  002C24                     l8616:
  9598                           
  9599                           ; BSR set to: 0
  9600  002C24  0E00               	movlw	0
  9601  002C26  6FBE               	movwf	___fladd@b& (0+255),b
  9602  002C28  0E00               	movlw	0
  9603  002C2A  6FBF               	movwf	(___fladd@b+1)& (0+255),b
  9604  002C2C  0E00               	movlw	0
  9605  002C2E  6FC0               	movwf	(___fladd@b+2)& (0+255),b
  9606  002C30  0E00               	movlw	0
  9607  002C32  6FC1               	movwf	(___fladd@b+3)& (0+255),b
  9608  002C34  51CC               	movf	___fladd@bexp& (0+255),w,b
  9609  002C36  A4D8               	btfss	status,2,c
  9610  002C38  EF20  F016         	goto	u11441
  9611  002C3C  EF22  F016         	goto	u11440
  9612  002C40                     u11441:
  9613  002C40  EF24  F016         	goto	l8620
  9614  002C44                     u11440:
  9615  002C44                     
  9616                           ; BSR set to: 0
  9617  002C44  0E00               	movlw	0
  9618  002C46  6FCA               	movwf	___fladd@signs& (0+255),b
  9619  002C48                     l8620:
  9620                           
  9621                           ; BSR set to: 0
  9622  002C48  A1CC               	btfss	___fladd@bexp& (0+255),0,b
  9623  002C4A  EF29  F016         	goto	u11451
  9624  002C4E  EF2B  F016         	goto	u11450
  9625  002C52                     u11451:
  9626  002C52  EF2E  F016         	goto	l8624
  9627  002C56                     u11450:
  9628  002C56                     
  9629                           ; BSR set to: 0
  9630  002C56  8FC0               	bsf	(___fladd@b+2)& (0+255),7,b
  9631  002C58  EF2F  F016         	goto	l8626
  9632  002C5C                     l8624:
  9633                           
  9634                           ; BSR set to: 0
  9635  002C5C  9FC0               	bcf	(___fladd@b+2)& (0+255),7,b
  9636  002C5E                     l8626:
  9637                           
  9638                           ; BSR set to: 0
  9639  002C5E  90D8               	bcf	status,0,c
  9640  002C60  31CC               	rrcf	___fladd@bexp& (0+255),w,b
  9641  002C62  6FC1               	movwf	(___fladd@b+3)& (0+255),b
  9642  002C64                     
  9643                           ; BSR set to: 0
  9644  002C64  AFCA               	btfss	___fladd@signs& (0+255),7,b
  9645  002C66  EF37  F016         	goto	u11461
  9646  002C6A  EF39  F016         	goto	u11460
  9647  002C6E                     u11461:
  9648  002C6E  EF3A  F016         	goto	l8632
  9649  002C72                     u11460:
  9650  002C72                     
  9651                           ; BSR set to: 0
  9652  002C72  8FC1               	bsf	(___fladd@b+3)& (0+255),7,b
  9653  002C74                     l8632:
  9654                           
  9655                           ; BSR set to: 0
  9656  002C74  C0BE  F0BE         	movff	___fladd@b,?___fladd
  9657  002C78  C0BF  F0BF         	movff	___fladd@b+1,?___fladd+1
  9658  002C7C  C0C0  F0C0         	movff	___fladd@b+2,?___fladd+2
  9659  002C80  C0C1  F0C1         	movff	___fladd@b+3,?___fladd+3
  9660  002C84                     l1191:
  9661                           
  9662                           ; BSR set to: 0
  9663  002C84  0012               	return		;funcret
  9664  002C86                     __end_of___fladd:
  9665                           	callstack 0
  9666                           
  9667 ;; *************** function ___flneg *****************
  9668 ;; Defined at:
  9669 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  f1              4   10[BANK0 ] unsigned char 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  4   10[BANK0 ] unsigned char 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9683 ;;      Params:         0       4       0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0
  9686 ;;      Totals:         0       4       0       0       0       0       0
  9687 ;;Total ram usage:        4 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    5
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_sprintf
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text24
  9698  007F2C                     __ptext24:
  9699                           	callstack 0
  9700  007F2C                     ___flneg:
  9701                           	callstack 24
  9702  007F2C  0100               	movlb	0	; () banked
  9703  007F2E  518A               	movf	___flneg@f1& (0+255),w,b
  9704  007F30  118B               	iorwf	(___flneg@f1+1)& (0+255),w,b
  9705  007F32  118C               	iorwf	(___flneg@f1+2)& (0+255),w,b
  9706  007F34  118D               	iorwf	(___flneg@f1+3)& (0+255),w,b
  9707  007F36  B4D8               	btfsc	status,2,c
  9708  007F38  EFA0  F03F         	goto	u12511
  9709  007F3C  EFA2  F03F         	goto	u12510
  9710  007F40                     u12511:
  9711  007F40  EFAA  F03F         	goto	l9344
  9712  007F44                     u12510:
  9713  007F44                     
  9714                           ; BSR set to: 0
  9715  007F44  0E00               	movlw	0
  9716  007F46  1B8A               	xorwf	___flneg@f1& (0+255),f,b
  9717  007F48  0E00               	movlw	0
  9718  007F4A  1B8B               	xorwf	(___flneg@f1+1)& (0+255),f,b
  9719  007F4C  0E00               	movlw	0
  9720  007F4E  1B8C               	xorwf	(___flneg@f1+2)& (0+255),f,b
  9721  007F50  0E80               	movlw	128
  9722  007F52  1B8D               	xorwf	(___flneg@f1+3)& (0+255),f,b
  9723  007F54                     l9344:
  9724                           
  9725                           ; BSR set to: 0
  9726  007F54  C08A  F08A         	movff	___flneg@f1,?___flneg
  9727  007F58  C08B  F08B         	movff	___flneg@f1+1,?___flneg+1
  9728  007F5C  C08C  F08C         	movff	___flneg@f1+2,?___flneg+2
  9729  007F60  C08D  F08D         	movff	___flneg@f1+3,?___flneg+3
  9730  007F64                     
  9731                           ; BSR set to: 0
  9732  007F64  0012               	return		;funcret
  9733  007F66                     __end_of___flneg:
  9734                           	callstack 0
  9735                           
  9736 ;; *************** function ___flge *****************
  9737 ;; Defined at:
  9738 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  ff1             4   10[BANK0 ] unsigned char 
  9741 ;;  ff2             4   14[BANK0 ] unsigned char 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;		None               void
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9753 ;;      Params:         0       8       0       0       0       0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0
  9755 ;;      Temps:          0       4       0       0       0       0       0
  9756 ;;      Totals:         0      12       0       0       0       0       0
  9757 ;;Total ram usage:       12 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    5
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_main
  9764 ;;		_testeMin
  9765 ;;		_sprintf
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text25
  9770  006988                     __ptext25:
  9771                           	callstack 0
  9772  006988                     ___flge:
  9773                           	callstack 24
  9774  006988  0E00               	movlw	0
  9775  00698A  0100               	movlb	0	; () banked
  9776  00698C  158A               	andwf	___flge@ff1& (0+255),w,b
  9777  00698E  6F92               	movwf	??___flge& (0+255),b
  9778  006990  0E00               	movlw	0
  9779  006992  158B               	andwf	(___flge@ff1+1)& (0+255),w,b
  9780  006994  6F93               	movwf	(??___flge+1)& (0+255),b
  9781  006996  0E80               	movlw	128
  9782  006998  158C               	andwf	(___flge@ff1+2)& (0+255),w,b
  9783  00699A  6F94               	movwf	(??___flge+2)& (0+255),b
  9784  00699C  0E7F               	movlw	127
  9785  00699E  158D               	andwf	(___flge@ff1+3)& (0+255),w,b
  9786  0069A0  6F95               	movwf	(??___flge+3)& (0+255),b
  9787  0069A2  5192               	movf	??___flge& (0+255),w,b
  9788  0069A4  1193               	iorwf	(??___flge+1)& (0+255),w,b
  9789  0069A6  1194               	iorwf	(??___flge+2)& (0+255),w,b
  9790  0069A8  1195               	iorwf	(??___flge+3)& (0+255),w,b
  9791  0069AA  A4D8               	btfss	status,2,c
  9792  0069AC  EFDA  F034         	goto	u12461
  9793  0069B0  EFDC  F034         	goto	u12460
  9794  0069B4                     u12461:
  9795  0069B4  EFE4  F034         	goto	l9322
  9796  0069B8                     u12460:
  9797  0069B8                     
  9798                           ; BSR set to: 0
  9799  0069B8  0E00               	movlw	0
  9800  0069BA  6F8A               	movwf	___flge@ff1& (0+255),b
  9801  0069BC  0E00               	movlw	0
  9802  0069BE  6F8B               	movwf	(___flge@ff1+1)& (0+255),b
  9803  0069C0  0E00               	movlw	0
  9804  0069C2  6F8C               	movwf	(___flge@ff1+2)& (0+255),b
  9805  0069C4  0E00               	movlw	0
  9806  0069C6  6F8D               	movwf	(___flge@ff1+3)& (0+255),b
  9807  0069C8                     l9322:
  9808                           
  9809                           ; BSR set to: 0
  9810  0069C8  0E00               	movlw	0
  9811  0069CA  158E               	andwf	___flge@ff2& (0+255),w,b
  9812  0069CC  6F92               	movwf	??___flge& (0+255),b
  9813  0069CE  0E00               	movlw	0
  9814  0069D0  158F               	andwf	(___flge@ff2+1)& (0+255),w,b
  9815  0069D2  6F93               	movwf	(??___flge+1)& (0+255),b
  9816  0069D4  0E80               	movlw	128
  9817  0069D6  1590               	andwf	(___flge@ff2+2)& (0+255),w,b
  9818  0069D8  6F94               	movwf	(??___flge+2)& (0+255),b
  9819  0069DA  0E7F               	movlw	127
  9820  0069DC  1591               	andwf	(___flge@ff2+3)& (0+255),w,b
  9821  0069DE  6F95               	movwf	(??___flge+3)& (0+255),b
  9822  0069E0  5192               	movf	??___flge& (0+255),w,b
  9823  0069E2  1193               	iorwf	(??___flge+1)& (0+255),w,b
  9824  0069E4  1194               	iorwf	(??___flge+2)& (0+255),w,b
  9825  0069E6  1195               	iorwf	(??___flge+3)& (0+255),w,b
  9826  0069E8  A4D8               	btfss	status,2,c
  9827  0069EA  EFF9  F034         	goto	u12471
  9828  0069EE  EFFB  F034         	goto	u12470
  9829  0069F2                     u12471:
  9830  0069F2  EF03  F035         	goto	l9326
  9831  0069F6                     u12470:
  9832  0069F6                     
  9833                           ; BSR set to: 0
  9834  0069F6  0E00               	movlw	0
  9835  0069F8  6F8E               	movwf	___flge@ff2& (0+255),b
  9836  0069FA  0E00               	movlw	0
  9837  0069FC  6F8F               	movwf	(___flge@ff2+1)& (0+255),b
  9838  0069FE  0E00               	movlw	0
  9839  006A00  6F90               	movwf	(___flge@ff2+2)& (0+255),b
  9840  006A02  0E00               	movlw	0
  9841  006A04  6F91               	movwf	(___flge@ff2+3)& (0+255),b
  9842  006A06                     l9326:
  9843                           
  9844                           ; BSR set to: 0
  9845  006A06  AF8D               	btfss	(___flge@ff1+3)& (0+255),7,b
  9846  006A08  EF08  F035         	goto	u12481
  9847  006A0C  EF0A  F035         	goto	u12480
  9848  006A10                     u12481:
  9849  006A10  EF13  F035         	goto	l9330
  9850  006A14                     u12480:
  9851  006A14                     
  9852                           ; BSR set to: 0
  9853  006A14  6D8A               	negf	___flge@ff1& (0+255),b
  9854  006A16  1F8B               	comf	(___flge@ff1+1)& (0+255),f,b
  9855  006A18  B0D8               	btfsc	status,0,c
  9856  006A1A  2B8B               	incf	(___flge@ff1+1)& (0+255),f,b
  9857  006A1C  1F8C               	comf	(___flge@ff1+2)& (0+255),f,b
  9858  006A1E  B0D8               	btfsc	status,0,c
  9859  006A20  2B8C               	incf	(___flge@ff1+2)& (0+255),f,b
  9860  006A22  0E80               	movlw	128
  9861  006A24  578D               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9862  006A26                     l9330:
  9863                           
  9864                           ; BSR set to: 0
  9865  006A26  AF91               	btfss	(___flge@ff2+3)& (0+255),7,b
  9866  006A28  EF18  F035         	goto	u12491
  9867  006A2C  EF1A  F035         	goto	u12490
  9868  006A30                     u12491:
  9869  006A30  EF23  F035         	goto	l910
  9870  006A34                     u12490:
  9871  006A34                     
  9872                           ; BSR set to: 0
  9873  006A34  6D8E               	negf	___flge@ff2& (0+255),b
  9874  006A36  1F8F               	comf	(___flge@ff2+1)& (0+255),f,b
  9875  006A38  B0D8               	btfsc	status,0,c
  9876  006A3A  2B8F               	incf	(___flge@ff2+1)& (0+255),f,b
  9877  006A3C  1F90               	comf	(___flge@ff2+2)& (0+255),f,b
  9878  006A3E  B0D8               	btfsc	status,0,c
  9879  006A40  2B90               	incf	(___flge@ff2+2)& (0+255),f,b
  9880  006A42  0E80               	movlw	128
  9881  006A44  5791               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9882  006A46                     l910:
  9883                           
  9884                           ; BSR set to: 0
  9885  006A46  0E00               	movlw	0
  9886  006A48  1B8A               	xorwf	___flge@ff1& (0+255),f,b
  9887  006A4A  0E00               	movlw	0
  9888  006A4C  1B8B               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9889  006A4E  0E00               	movlw	0
  9890  006A50  1B8C               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9891  006A52  0E80               	movlw	128
  9892  006A54  1B8D               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9893  006A56  0E00               	movlw	0
  9894  006A58  1B8E               	xorwf	___flge@ff2& (0+255),f,b
  9895  006A5A  0E00               	movlw	0
  9896  006A5C  1B8F               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9897  006A5E  0E00               	movlw	0
  9898  006A60  1B90               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9899  006A62  0E80               	movlw	128
  9900  006A64  1B91               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9901  006A66  518E               	movf	___flge@ff2& (0+255),w,b
  9902  006A68  5D8A               	subwf	___flge@ff1& (0+255),w,b
  9903  006A6A  518F               	movf	(___flge@ff2+1)& (0+255),w,b
  9904  006A6C  598B               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9905  006A6E  5190               	movf	(___flge@ff2+2)& (0+255),w,b
  9906  006A70  598C               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9907  006A72  5191               	movf	(___flge@ff2+3)& (0+255),w,b
  9908  006A74  598D               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9909  006A76  B0D8               	btfsc	status,0,c
  9910  006A78  EF40  F035         	goto	u12501
  9911  006A7C  EF42  F035         	goto	u12500
  9912  006A80                     u12501:
  9913  006A80  EF45  F035         	goto	l9336
  9914  006A84                     u12500:
  9915  006A84                     
  9916                           ; BSR set to: 0
  9917  006A84  90D8               	bcf	status,0,c
  9918  006A86  EF46  F035         	goto	l911
  9919  006A8A                     l9336:
  9920                           
  9921                           ; BSR set to: 0
  9922  006A8A  80D8               	bsf	status,0,c
  9923  006A8C                     l911:
  9924                           
  9925                           ; BSR set to: 0
  9926  006A8C  0012               	return		;funcret
  9927  006A8E                     __end_of___flge:
  9928                           	callstack 0
  9929                           
  9930 ;; *************** function ___fleq *****************
  9931 ;; Defined at:
  9932 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  ff1             4   10[BANK0 ] unsigned char 
  9935 ;;  ff2             4   14[BANK0 ] unsigned char 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;		None               void
  9940 ;; Registers used:
  9941 ;;		wreg, status,2, status,0
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9947 ;;      Params:         0       8       0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0       0
  9949 ;;      Temps:          0       4       0       0       0       0       0
  9950 ;;      Totals:         0      12       0       0       0       0       0
  9951 ;;Total ram usage:       12 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:    5
  9954 ;; This function calls:
  9955 ;;		Nothing
  9956 ;; This function is called by:
  9957 ;;		_sprintf
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text26
  9962  007458                     __ptext26:
  9963                           	callstack 0
  9964  007458                     ___fleq:
  9965                           	callstack 24
  9966  007458  0E00               	movlw	0
  9967  00745A  0100               	movlb	0	; () banked
  9968  00745C  158A               	andwf	___fleq@ff1& (0+255),w,b
  9969  00745E  6F92               	movwf	??___fleq& (0+255),b
  9970  007460  0E00               	movlw	0
  9971  007462  158B               	andwf	(___fleq@ff1+1)& (0+255),w,b
  9972  007464  6F93               	movwf	(??___fleq+1)& (0+255),b
  9973  007466  0E80               	movlw	128
  9974  007468  158C               	andwf	(___fleq@ff1+2)& (0+255),w,b
  9975  00746A  6F94               	movwf	(??___fleq+2)& (0+255),b
  9976  00746C  0E7F               	movlw	127
  9977  00746E  158D               	andwf	(___fleq@ff1+3)& (0+255),w,b
  9978  007470  6F95               	movwf	(??___fleq+3)& (0+255),b
  9979  007472  5192               	movf	??___fleq& (0+255),w,b
  9980  007474  1193               	iorwf	(??___fleq+1)& (0+255),w,b
  9981  007476  1194               	iorwf	(??___fleq+2)& (0+255),w,b
  9982  007478  1195               	iorwf	(??___fleq+3)& (0+255),w,b
  9983  00747A  A4D8               	btfss	status,2,c
  9984  00747C  EF42  F03A         	goto	u12431
  9985  007480  EF44  F03A         	goto	u12430
  9986  007484                     u12431:
  9987  007484  EF4C  F03A         	goto	l9306
  9988  007488                     u12430:
  9989  007488                     
  9990                           ; BSR set to: 0
  9991  007488  0E00               	movlw	0
  9992  00748A  6F8A               	movwf	___fleq@ff1& (0+255),b
  9993  00748C  0E00               	movlw	0
  9994  00748E  6F8B               	movwf	(___fleq@ff1+1)& (0+255),b
  9995  007490  0E00               	movlw	0
  9996  007492  6F8C               	movwf	(___fleq@ff1+2)& (0+255),b
  9997  007494  0E00               	movlw	0
  9998  007496  6F8D               	movwf	(___fleq@ff1+3)& (0+255),b
  9999  007498                     l9306:
 10000                           
 10001                           ; BSR set to: 0
 10002  007498  0E00               	movlw	0
 10003  00749A  158E               	andwf	___fleq@ff2& (0+255),w,b
 10004  00749C  6F92               	movwf	??___fleq& (0+255),b
 10005  00749E  0E00               	movlw	0
 10006  0074A0  158F               	andwf	(___fleq@ff2+1)& (0+255),w,b
 10007  0074A2  6F93               	movwf	(??___fleq+1)& (0+255),b
 10008  0074A4  0E80               	movlw	128
 10009  0074A6  1590               	andwf	(___fleq@ff2+2)& (0+255),w,b
 10010  0074A8  6F94               	movwf	(??___fleq+2)& (0+255),b
 10011  0074AA  0E7F               	movlw	127
 10012  0074AC  1591               	andwf	(___fleq@ff2+3)& (0+255),w,b
 10013  0074AE  6F95               	movwf	(??___fleq+3)& (0+255),b
 10014  0074B0  5192               	movf	??___fleq& (0+255),w,b
 10015  0074B2  1193               	iorwf	(??___fleq+1)& (0+255),w,b
 10016  0074B4  1194               	iorwf	(??___fleq+2)& (0+255),w,b
 10017  0074B6  1195               	iorwf	(??___fleq+3)& (0+255),w,b
 10018  0074B8  A4D8               	btfss	status,2,c
 10019  0074BA  EF61  F03A         	goto	u12441
 10020  0074BE  EF63  F03A         	goto	u12440
 10021  0074C2                     u12441:
 10022  0074C2  EF6B  F03A         	goto	l9310
 10023  0074C6                     u12440:
 10024  0074C6                     
 10025                           ; BSR set to: 0
 10026  0074C6  0E00               	movlw	0
 10027  0074C8  6F8E               	movwf	___fleq@ff2& (0+255),b
 10028  0074CA  0E00               	movlw	0
 10029  0074CC  6F8F               	movwf	(___fleq@ff2+1)& (0+255),b
 10030  0074CE  0E00               	movlw	0
 10031  0074D0  6F90               	movwf	(___fleq@ff2+2)& (0+255),b
 10032  0074D2  0E00               	movlw	0
 10033  0074D4  6F91               	movwf	(___fleq@ff2+3)& (0+255),b
 10034  0074D6                     l9310:
 10035                           
 10036                           ; BSR set to: 0
 10037  0074D6  518E               	movf	___fleq@ff2& (0+255),w,b
 10038  0074D8  198A               	xorwf	___fleq@ff1& (0+255),w,b
 10039  0074DA  E10F               	bnz	u12450
 10040  0074DC  518F               	movf	(___fleq@ff2+1)& (0+255),w,b
 10041  0074DE  198B               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 10042  0074E0  E10C               	bnz	u12450
 10043  0074E2  5190               	movf	(___fleq@ff2+2)& (0+255),w,b
 10044  0074E4  198C               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 10045  0074E6  E109               	bnz	u12450
 10046  0074E8  5191               	movf	(___fleq@ff2+3)& (0+255),w,b
 10047  0074EA  198D               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 10048  0074EC  B4D8               	btfsc	status,2,c
 10049  0074EE  EF7B  F03A         	goto	u12451
 10050  0074F2  EF7D  F03A         	goto	u12450
 10051  0074F6                     u12451:
 10052  0074F6  EF80  F03A         	goto	l9314
 10053  0074FA                     u12450:
 10054  0074FA                     
 10055                           ; BSR set to: 0
 10056  0074FA  90D8               	bcf	status,0,c
 10057  0074FC  EF81  F03A         	goto	l904
 10058  007500                     l9314:
 10059                           
 10060                           ; BSR set to: 0
 10061  007500  80D8               	bsf	status,0,c
 10062  007502                     l904:
 10063                           
 10064                           ; BSR set to: 0
 10065  007502  0012               	return		;funcret
 10066  007504                     __end_of___fleq:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _leituraCXS *****************
 10070 ;; Defined at:
 10071 ;;		line 202 in file "main.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10085 ;;      Params:         0       0       0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    6
 10092 ;; This function calls:
 10093 ;;		___fldiv
 10094 ;;		___flmul
 10095 ;;		___xxtofl
 10096 ;;		_adc_amostra
 10097 ;; This function is called by:
 10098 ;;		_main
 10099 ;;		_atualizatela
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           	psect	text27
 10104  007A32                     __ptext27:
 10105                           	callstack 0
 10106  007A32                     _leituraCXS:
 10107                           	callstack 24
 10108  007A32                     
 10109                           ;main.c: 204: nivelCXS = (adc_amostra(1));
 10110  007A32  0E01               	movlw	1
 10111  007A34  ECD8  F03C         	call	_adc_amostra
 10112  007A38  C08A  F1B9         	movff	?_adc_amostra,_nivelCXS
 10113  007A3C  C08B  F1BA         	movff	?_adc_amostra+1,_nivelCXS+1
 10114  007A40                     
 10115                           ;main.c: 205: tensaoCXS = (nivelCXS*5.0)/1023;
 10116  007A40  0E00               	movlw	0
 10117  007A42  0100               	movlb	0	; () banked
 10118  007A44  6F9C               	movwf	___flmul@a& (0+255),b
 10119  007A46  0E00               	movlw	0
 10120  007A48  6F9D               	movwf	(___flmul@a+1)& (0+255),b
 10121  007A4A  0EA0               	movlw	160
 10122  007A4C  6F9E               	movwf	(___flmul@a+2)& (0+255),b
 10123  007A4E  0E40               	movlw	64
 10124  007A50  6F9F               	movwf	(___flmul@a+3)& (0+255),b
 10125  007A52  C1B9  F08A         	movff	_nivelCXS,___xxtofl@val
 10126  007A56  C1BA  F08B         	movff	_nivelCXS+1,___xxtofl@val+1
 10127  007A5A  6B8C               	clrf	(___xxtofl@val+2)& (0+255),b
 10128  007A5C  6B8D               	clrf	(___xxtofl@val+3)& (0+255),b
 10129  007A5E  0E00               	movlw	0
 10130  007A60  ECB4  F02B         	call	___xxtofl
 10131  007A64  C08A  F098         	movff	?___xxtofl,___flmul@b
 10132  007A68  C08B  F099         	movff	?___xxtofl+1,___flmul@b+1
 10133  007A6C  C08C  F09A         	movff	?___xxtofl+2,___flmul@b+2
 10134  007A70  C08D  F09B         	movff	?___xxtofl+3,___flmul@b+3
 10135  007A74  ECA3  F018         	call	___flmul	;wreg free
 10136  007A78  C098  F0B1         	movff	?___flmul,___fldiv@b
 10137  007A7C  C099  F0B2         	movff	?___flmul+1,___fldiv@b+1
 10138  007A80  C09A  F0B3         	movff	?___flmul+2,___fldiv@b+2
 10139  007A84  C09B  F0B4         	movff	?___flmul+3,___fldiv@b+3
 10140  007A88  0E00               	movlw	0
 10141  007A8A  0100               	movlb	0	; () banked
 10142  007A8C  6FB5               	movwf	___fldiv@a& (0+255),b
 10143  007A8E  0EC0               	movlw	192
 10144  007A90  6FB6               	movwf	(___fldiv@a+1)& (0+255),b
 10145  007A92  0E7F               	movlw	127
 10146  007A94  6FB7               	movwf	(___fldiv@a+2)& (0+255),b
 10147  007A96  0E44               	movlw	68
 10148  007A98  6FB8               	movwf	(___fldiv@a+3)& (0+255),b
 10149  007A9A  ECC0  F022         	call	___fldiv	;wreg free
 10150  007A9E  C0B1  F0E3         	movff	?___fldiv,_tensaoCXS
 10151  007AA2  C0B2  F0E4         	movff	?___fldiv+1,_tensaoCXS+1
 10152  007AA6  C0B3  F0E5         	movff	?___fldiv+2,_tensaoCXS+2
 10153  007AAA  C0B4  F0E6         	movff	?___fldiv+3,_tensaoCXS+3
 10154  007AAE  0012               	return		;funcret
 10155  007AB0                     __end_of_leituraCXS:
 10156                           	callstack 0
 10157                           
 10158 ;; *************** function _leituraCXI *****************
 10159 ;; Defined at:
 10160 ;;		line 197 in file "main.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;		None
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  1    wreg      void 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10174 ;;      Params:         0       0       0       0       0       0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0
 10177 ;;      Totals:         0       0       0       0       0       0       0
 10178 ;;Total ram usage:        0 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:    6
 10181 ;; This function calls:
 10182 ;;		___fldiv
 10183 ;;		___flmul
 10184 ;;		___xxtofl
 10185 ;;		_adc_amostra
 10186 ;; This function is called by:
 10187 ;;		_main
 10188 ;;		_atualizatela
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text28
 10193  007AB0                     __ptext28:
 10194                           	callstack 0
 10195  007AB0                     _leituraCXI:
 10196                           	callstack 24
 10197  007AB0                     
 10198                           ;main.c: 199: nivelCXI = (adc_amostra(0));
 10199  007AB0  0E00               	movlw	0
 10200  007AB2  ECD8  F03C         	call	_adc_amostra
 10201  007AB6  C08A  F1BB         	movff	?_adc_amostra,_nivelCXI
 10202  007ABA  C08B  F1BC         	movff	?_adc_amostra+1,_nivelCXI+1
 10203  007ABE                     
 10204                           ;main.c: 200: tensaoCXI = (nivelCXI*5.0)/1023;
 10205  007ABE  0E00               	movlw	0
 10206  007AC0  0100               	movlb	0	; () banked
 10207  007AC2  6F9C               	movwf	___flmul@a& (0+255),b
 10208  007AC4  0E00               	movlw	0
 10209  007AC6  6F9D               	movwf	(___flmul@a+1)& (0+255),b
 10210  007AC8  0EA0               	movlw	160
 10211  007ACA  6F9E               	movwf	(___flmul@a+2)& (0+255),b
 10212  007ACC  0E40               	movlw	64
 10213  007ACE  6F9F               	movwf	(___flmul@a+3)& (0+255),b
 10214  007AD0  C1BB  F08A         	movff	_nivelCXI,___xxtofl@val
 10215  007AD4  C1BC  F08B         	movff	_nivelCXI+1,___xxtofl@val+1
 10216  007AD8  6B8C               	clrf	(___xxtofl@val+2)& (0+255),b
 10217  007ADA  6B8D               	clrf	(___xxtofl@val+3)& (0+255),b
 10218  007ADC  0E00               	movlw	0
 10219  007ADE  ECB4  F02B         	call	___xxtofl
 10220  007AE2  C08A  F098         	movff	?___xxtofl,___flmul@b
 10221  007AE6  C08B  F099         	movff	?___xxtofl+1,___flmul@b+1
 10222  007AEA  C08C  F09A         	movff	?___xxtofl+2,___flmul@b+2
 10223  007AEE  C08D  F09B         	movff	?___xxtofl+3,___flmul@b+3
 10224  007AF2  ECA3  F018         	call	___flmul	;wreg free
 10225  007AF6  C098  F0B1         	movff	?___flmul,___fldiv@b
 10226  007AFA  C099  F0B2         	movff	?___flmul+1,___fldiv@b+1
 10227  007AFE  C09A  F0B3         	movff	?___flmul+2,___fldiv@b+2
 10228  007B02  C09B  F0B4         	movff	?___flmul+3,___fldiv@b+3
 10229  007B06  0E00               	movlw	0
 10230  007B08  0100               	movlb	0	; () banked
 10231  007B0A  6FB5               	movwf	___fldiv@a& (0+255),b
 10232  007B0C  0EC0               	movlw	192
 10233  007B0E  6FB6               	movwf	(___fldiv@a+1)& (0+255),b
 10234  007B10  0E7F               	movlw	127
 10235  007B12  6FB7               	movwf	(___fldiv@a+2)& (0+255),b
 10236  007B14  0E44               	movlw	68
 10237  007B16  6FB8               	movwf	(___fldiv@a+3)& (0+255),b
 10238  007B18  ECC0  F022         	call	___fldiv	;wreg free
 10239  007B1C  C0B1  F0E7         	movff	?___fldiv,_tensaoCXI
 10240  007B20  C0B2  F0E8         	movff	?___fldiv+1,_tensaoCXI+1
 10241  007B24  C0B3  F0E9         	movff	?___fldiv+2,_tensaoCXI+2
 10242  007B28  C0B4  F0EA         	movff	?___fldiv+3,_tensaoCXI+3
 10243  007B2C  0012               	return		;funcret
 10244  007B2E                     __end_of_leituraCXI:
 10245                           	callstack 0
 10246                           
 10247 ;; *************** function _adc_amostra *****************
 10248 ;; Defined at:
 10249 ;;		line 44 in file "adc.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;  canal           1    wreg     unsigned char 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  canal           1   16[BANK0 ] unsigned char 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  2   10[BANK0 ] unsigned int 
 10256 ;; Registers used:
 10257 ;;		wreg, status,2, status,0
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10263 ;;      Params:         0       2       0       0       0       0       0
 10264 ;;      Locals:         0       1       0       0       0       0       0
 10265 ;;      Temps:          0       4       0       0       0       0       0
 10266 ;;      Totals:         0       7       0       0       0       0       0
 10267 ;;Total ram usage:        7 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    5
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_leituraCXI
 10274 ;;		_leituraCXS
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text29
 10279  0079B0                     __ptext29:
 10280                           	callstack 0
 10281  0079B0                     _adc_amostra:
 10282                           	callstack 24
 10283                           
 10284                           ;incstack = 0
 10285                           ;adc_amostra@canal stored from wreg
 10286  0079B0  0100               	movlb	0	; () banked
 10287  0079B2  6F90               	movwf	adc_amostra@canal& (0+255),b
 10288  0079B4                     
 10289                           ;adc.c: 62: switch(canal)
 10290  0079B4  EFE8  F03C         	goto	l8894
 10291  0079B8                     l8886:
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;adc.c: 65: ADCON0=0b00000001;
 10295  0079B8  0E01               	movlw	1
 10296  0079BA  6EC2               	movwf	194,c	;volatile
 10297                           
 10298                           ;adc.c: 66: break;
 10299  0079BC  EFF8  F03C         	goto	l20
 10300  0079C0                     l8888:
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;adc.c: 68: ADCON0=0b00000101;
 10304  0079C0  0E05               	movlw	5
 10305  0079C2  6EC2               	movwf	194,c	;volatile
 10306                           
 10307                           ;adc.c: 69: break;
 10308  0079C4  EFF8  F03C         	goto	l20
 10309  0079C8                     l8890:
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;adc.c: 71: ADCON0=0x11;
 10313  0079C8  0E11               	movlw	17
 10314  0079CA  6EC2               	movwf	194,c	;volatile
 10315                           
 10316                           ;adc.c: 72: break;
 10317  0079CC  EFF8  F03C         	goto	l20
 10318  0079D0                     l8894:
 10319  0079D0  0100               	movlb	0	; () banked
 10320  0079D2  5190               	movf	adc_amostra@canal& (0+255),w,b
 10321                           
 10322                           ; Switch size 1, requested type "simple"
 10323                           ; Number of cases is 3, Range of values is 0 to 2
 10324                           ; switch strategies available:
 10325                           ; Name         Instructions Cycles
 10326                           ; simple_byte           10     6 (average)
 10327                           ;	Chosen strategy is simple_byte
 10328  0079D4  0A00               	xorlw	0	; case 0
 10329  0079D6  B4D8               	btfsc	status,2,c
 10330  0079D8  EFDC  F03C         	goto	l8886
 10331  0079DC  0A01               	xorlw	1	; case 1
 10332  0079DE  B4D8               	btfsc	status,2,c
 10333  0079E0  EFE0  F03C         	goto	l8888
 10334  0079E4  0A03               	xorlw	3	; case 2
 10335  0079E6  B4D8               	btfsc	status,2,c
 10336  0079E8  EFE4  F03C         	goto	l8890
 10337  0079EC  EFF8  F03C         	goto	l20
 10338  0079F0                     l20:
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;adc.c: 77: ADCON0bits.GO=1;
 10342  0079F0  82C2               	bsf	194,1,c	;volatile
 10343  0079F2                     l23:
 10344  0079F2  B2C2               	btfsc	194,1,c	;volatile
 10345  0079F4  EFFE  F03C         	goto	u11841
 10346  0079F8  EF00  F03D         	goto	u11840
 10347  0079FC                     u11841:
 10348  0079FC  EFF9  F03C         	goto	l23
 10349  007A00                     u11840:
 10350  007A00                     
 10351                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
 10352  007A00  CFC3 F08C          	movff	4035,??_adc_amostra	;volatile
 10353  007A04  0E06               	movlw	6
 10354  007A06  0100               	movlb	0	; () banked
 10355  007A08  6F8D               	movwf	(??_adc_amostra+1)& (0+255),b
 10356  007A0A                     u11855:
 10357  007A0A  90D8               	bcf	status,0,c
 10358  007A0C  338C               	rrcf	??_adc_amostra& (0+255),f,b
 10359  007A0E  2F8D               	decfsz	(??_adc_amostra+1)& (0+255),f,b
 10360  007A10  EF05  F03D         	goto	u11855
 10361  007A14  518C               	movf	??_adc_amostra& (0+255),w,b
 10362  007A16  CFC4 F08E          	movff	4036,??_adc_amostra+2	;volatile
 10363  007A1A  6B8F               	clrf	(??_adc_amostra+3)& (0+255),b
 10364  007A1C  90D8               	bcf	status,0,c
 10365  007A1E  378E               	rlcf	(??_adc_amostra+2)& (0+255),f,b
 10366  007A20  378F               	rlcf	(??_adc_amostra+3)& (0+255),f,b
 10367  007A22  90D8               	bcf	status,0,c
 10368  007A24  378E               	rlcf	(??_adc_amostra+2)& (0+255),f,b
 10369  007A26  378F               	rlcf	(??_adc_amostra+3)& (0+255),f,b
 10370  007A28  118E               	iorwf	(??_adc_amostra+2)& (0+255),w,b
 10371  007A2A  6F8A               	movwf	?_adc_amostra& (0+255),b
 10372  007A2C  518F               	movf	(??_adc_amostra+3)& (0+255),w,b
 10373  007A2E  6F8B               	movwf	(?_adc_amostra+1)& (0+255),b
 10374  007A30                     
 10375                           ; BSR set to: 0
 10376  007A30  0012               	return		;funcret
 10377  007A32                     __end_of_adc_amostra:
 10378                           	callstack 0
 10379                           
 10380 ;; *************** function ___xxtofl *****************
 10381 ;; Defined at:
 10382 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  sign            1    wreg     unsigned char 
 10385 ;;  val             4   10[BANK0 ] long 
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;  sign            1   18[BANK0 ] unsigned char 
 10388 ;;  arg             4   20[BANK0 ] unsigned long 
 10389 ;;  exp             1   19[BANK0 ] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  4   10[BANK0 ] unsigned char 
 10392 ;; Registers used:
 10393 ;;		wreg, status,2, status,0
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10399 ;;      Params:         0       4       0       0       0       0       0
 10400 ;;      Locals:         0       6       0       0       0       0       0
 10401 ;;      Temps:          0       4       0       0       0       0       0
 10402 ;;      Totals:         0      14       0       0       0       0       0
 10403 ;;Total ram usage:       14 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    5
 10406 ;; This function calls:
 10407 ;;		Nothing
 10408 ;; This function is called by:
 10409 ;;		_leituraCXI
 10410 ;;		_leituraCXS
 10411 ;;		_sprintf
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	text30
 10416  005768                     __ptext30:
 10417                           	callstack 0
 10418  005768                     ___xxtofl:
 10419                           	callstack 24
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;incstack = 0
 10423                           ;___xxtofl@sign stored from wreg
 10424  005768  0100               	movlb	0	; () banked
 10425  00576A  6F92               	movwf	___xxtofl@sign& (0+255),b
 10426  00576C  0100               	movlb	0	; () banked
 10427  00576E  5192               	movf	___xxtofl@sign& (0+255),w,b
 10428  005770  B4D8               	btfsc	status,2,c
 10429  005772  EFBD  F02B         	goto	u12621
 10430  005776  EFBF  F02B         	goto	u12620
 10431  00577A                     u12621:
 10432  00577A  EFE1  F02B         	goto	l1309
 10433  00577E                     u12620:
 10434  00577E                     
 10435                           ; BSR set to: 0
 10436  00577E  BF8D               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10437  005780  EFC6  F02B         	goto	u12630
 10438  005784  EFC4  F02B         	goto	u12631
 10439  005788                     u12631:
 10440  005788  EFE1  F02B         	goto	l1309
 10441  00578C                     u12630:
 10442  00578C                     
 10443                           ; BSR set to: 0
 10444  00578C  C08A  F08E         	movff	___xxtofl@val,??___xxtofl
 10445  005790  C08B  F08F         	movff	___xxtofl@val+1,??___xxtofl+1
 10446  005794  C08C  F090         	movff	___xxtofl@val+2,??___xxtofl+2
 10447  005798  C08D  F091         	movff	___xxtofl@val+3,??___xxtofl+3
 10448  00579C  1F8E               	comf	??___xxtofl& (0+255),f,b
 10449  00579E  1F8F               	comf	(??___xxtofl+1)& (0+255),f,b
 10450  0057A0  1F90               	comf	(??___xxtofl+2)& (0+255),f,b
 10451  0057A2  1F91               	comf	(??___xxtofl+3)& (0+255),f,b
 10452  0057A4  2B8E               	incf	??___xxtofl& (0+255),f,b
 10453  0057A6  0E00               	movlw	0
 10454  0057A8  238F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10455  0057AA  2390               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10456  0057AC  2391               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10457  0057AE  C08E  F094         	movff	??___xxtofl,___xxtofl@arg
 10458  0057B2  C08F  F095         	movff	??___xxtofl+1,___xxtofl@arg+1
 10459  0057B6  C090  F096         	movff	??___xxtofl+2,___xxtofl@arg+2
 10460  0057BA  C091  F097         	movff	??___xxtofl+3,___xxtofl@arg+3
 10461  0057BE  EFE9  F02B         	goto	l9414
 10462  0057C2                     l1309:
 10463                           
 10464                           ; BSR set to: 0
 10465  0057C2  C08A  F094         	movff	___xxtofl@val,___xxtofl@arg
 10466  0057C6  C08B  F095         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10467  0057CA  C08C  F096         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10468  0057CE  C08D  F097         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10469  0057D2                     l9414:
 10470                           
 10471                           ; BSR set to: 0
 10472  0057D2  518A               	movf	___xxtofl@val& (0+255),w,b
 10473  0057D4  118B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10474  0057D6  118C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10475  0057D8  118D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10476  0057DA  A4D8               	btfss	status,2,c
 10477  0057DC  EFF2  F02B         	goto	u12641
 10478  0057E0  EFF4  F02B         	goto	u12640
 10479  0057E4                     u12641:
 10480  0057E4  EFFE  F02B         	goto	l9420
 10481  0057E8                     u12640:
 10482  0057E8                     
 10483                           ; BSR set to: 0
 10484  0057E8  0E00               	movlw	0
 10485  0057EA  6F8A               	movwf	?___xxtofl& (0+255),b
 10486  0057EC  0E00               	movlw	0
 10487  0057EE  6F8B               	movwf	(?___xxtofl+1)& (0+255),b
 10488  0057F0  0E00               	movlw	0
 10489  0057F2  6F8C               	movwf	(?___xxtofl+2)& (0+255),b
 10490  0057F4  0E00               	movlw	0
 10491  0057F6  6F8D               	movwf	(?___xxtofl+3)& (0+255),b
 10492  0057F8  EF8F  F02C         	goto	l1312
 10493  0057FC                     l9420:
 10494                           
 10495                           ; BSR set to: 0
 10496  0057FC  0E96               	movlw	150
 10497  0057FE  6F93               	movwf	___xxtofl@exp& (0+255),b
 10498  005800  EF08  F02C         	goto	l9424
 10499  005804                     l9422:
 10500                           
 10501                           ; BSR set to: 0
 10502  005804  2B93               	incf	___xxtofl@exp& (0+255),f,b
 10503  005806  90D8               	bcf	status,0,c
 10504  005808  3397               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10505  00580A  3396               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10506  00580C  3395               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10507  00580E  3394               	rrcf	___xxtofl@arg& (0+255),f,b
 10508  005810                     l9424:
 10509                           
 10510                           ; BSR set to: 0
 10511  005810  0E00               	movlw	0
 10512  005812  1594               	andwf	___xxtofl@arg& (0+255),w,b
 10513  005814  6F8E               	movwf	??___xxtofl& (0+255),b
 10514  005816  0E00               	movlw	0
 10515  005818  1595               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10516  00581A  6F8F               	movwf	(??___xxtofl+1)& (0+255),b
 10517  00581C  0E00               	movlw	0
 10518  00581E  1596               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10519  005820  6F90               	movwf	(??___xxtofl+2)& (0+255),b
 10520  005822  0EFE               	movlw	254
 10521  005824  1597               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10522  005826  6F91               	movwf	(??___xxtofl+3)& (0+255),b
 10523  005828  518E               	movf	??___xxtofl& (0+255),w,b
 10524  00582A  118F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10525  00582C  1190               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10526  00582E  1191               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10527  005830  A4D8               	btfss	status,2,c
 10528  005832  EF1D  F02C         	goto	u12651
 10529  005836  EF1F  F02C         	goto	u12650
 10530  00583A                     u12651:
 10531  00583A  EF02  F02C         	goto	l9422
 10532  00583E                     u12650:
 10533  00583E  EF2D  F02C         	goto	l1316
 10534  005842                     l9426:
 10535                           
 10536                           ; BSR set to: 0
 10537  005842  2B93               	incf	___xxtofl@exp& (0+255),f,b
 10538  005844                     
 10539                           ; BSR set to: 0
 10540  005844  0E01               	movlw	1
 10541  005846  2794               	addwf	___xxtofl@arg& (0+255),f,b
 10542  005848  0E00               	movlw	0
 10543  00584A  2395               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10544  00584C  2396               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10545  00584E  2397               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10546  005850                     
 10547                           ; BSR set to: 0
 10548  005850  90D8               	bcf	status,0,c
 10549  005852  3397               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10550  005854  3396               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10551  005856  3395               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10552  005858  3394               	rrcf	___xxtofl@arg& (0+255),f,b
 10553  00585A                     l1316:
 10554                           
 10555                           ; BSR set to: 0
 10556  00585A  0E00               	movlw	0
 10557  00585C  1594               	andwf	___xxtofl@arg& (0+255),w,b
 10558  00585E  6F8E               	movwf	??___xxtofl& (0+255),b
 10559  005860  0E00               	movlw	0
 10560  005862  1595               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10561  005864  6F8F               	movwf	(??___xxtofl+1)& (0+255),b
 10562  005866  0E00               	movlw	0
 10563  005868  1596               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10564  00586A  6F90               	movwf	(??___xxtofl+2)& (0+255),b
 10565  00586C  0EFF               	movlw	255
 10566  00586E  1597               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10567  005870  6F91               	movwf	(??___xxtofl+3)& (0+255),b
 10568  005872  518E               	movf	??___xxtofl& (0+255),w,b
 10569  005874  118F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10570  005876  1190               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10571  005878  1191               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10572  00587A  A4D8               	btfss	status,2,c
 10573  00587C  EF42  F02C         	goto	u12661
 10574  005880  EF44  F02C         	goto	u12660
 10575  005884                     u12661:
 10576  005884  EF21  F02C         	goto	l9426
 10577  005888                     u12660:
 10578  005888  EF4C  F02C         	goto	l9434
 10579  00588C                     l9432:
 10580                           
 10581                           ; BSR set to: 0
 10582  00588C  0793               	decf	___xxtofl@exp& (0+255),f,b
 10583  00588E  90D8               	bcf	status,0,c
 10584  005890  3794               	rlcf	___xxtofl@arg& (0+255),f,b
 10585  005892  3795               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10586  005894  3796               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10587  005896  3797               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10588  005898                     l9434:
 10589                           
 10590                           ; BSR set to: 0
 10591  005898  BF96               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10592  00589A  EF51  F02C         	goto	u12671
 10593  00589E  EF53  F02C         	goto	u12670
 10594  0058A2                     u12671:
 10595  0058A2  EF5B  F02C         	goto	l1323
 10596  0058A6                     u12670:
 10597  0058A6                     
 10598                           ; BSR set to: 0
 10599  0058A6  0E02               	movlw	2
 10600  0058A8  6193               	cpfslt	___xxtofl@exp& (0+255),b
 10601  0058AA  EF59  F02C         	goto	u12681
 10602  0058AE  EF5B  F02C         	goto	u12680
 10603  0058B2                     u12681:
 10604  0058B2  EF46  F02C         	goto	l9432
 10605  0058B6                     u12680:
 10606  0058B6                     l1323:
 10607                           
 10608                           ; BSR set to: 0
 10609  0058B6  B193               	btfsc	___xxtofl@exp& (0+255),0,b
 10610  0058B8  EF60  F02C         	goto	u12691
 10611  0058BC  EF62  F02C         	goto	u12690
 10612  0058C0                     u12691:
 10613  0058C0  EF63  F02C         	goto	l9440
 10614  0058C4                     u12690:
 10615  0058C4                     
 10616                           ; BSR set to: 0
 10617  0058C4  9F96               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 10618  0058C6                     l9440:
 10619                           
 10620                           ; BSR set to: 0
 10621  0058C6  90D8               	bcf	status,0,c
 10622  0058C8  3393               	rrcf	___xxtofl@exp& (0+255),f,b
 10623  0058CA                     
 10624                           ; BSR set to: 0
 10625  0058CA  C093  F08E         	movff	___xxtofl@exp,??___xxtofl
 10626  0058CE  6B8F               	clrf	(??___xxtofl+1)& (0+255),b
 10627  0058D0  6B90               	clrf	(??___xxtofl+2)& (0+255),b
 10628  0058D2  6B91               	clrf	(??___xxtofl+3)& (0+255),b
 10629  0058D4  C08E  F091         	movff	??___xxtofl,??___xxtofl+3
 10630  0058D8  6B90               	clrf	(??___xxtofl+2)& (0+255),b
 10631  0058DA  6B8F               	clrf	(??___xxtofl+1)& (0+255),b
 10632  0058DC  6B8E               	clrf	??___xxtofl& (0+255),b
 10633  0058DE  518E               	movf	??___xxtofl& (0+255),w,b
 10634  0058E0  1394               	iorwf	___xxtofl@arg& (0+255),f,b
 10635  0058E2  518F               	movf	(??___xxtofl+1)& (0+255),w,b
 10636  0058E4  1395               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10637  0058E6  5190               	movf	(??___xxtofl+2)& (0+255),w,b
 10638  0058E8  1396               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10639  0058EA  5191               	movf	(??___xxtofl+3)& (0+255),w,b
 10640  0058EC  1397               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10641  0058EE                     
 10642                           ; BSR set to: 0
 10643  0058EE  5192               	movf	___xxtofl@sign& (0+255),w,b
 10644  0058F0  B4D8               	btfsc	status,2,c
 10645  0058F2  EF7D  F02C         	goto	u12701
 10646  0058F6  EF7F  F02C         	goto	u12700
 10647  0058FA                     u12701:
 10648  0058FA  EF87  F02C         	goto	l9450
 10649  0058FE                     u12700:
 10650  0058FE                     
 10651                           ; BSR set to: 0
 10652  0058FE  BF8D               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10653  005900  EF86  F02C         	goto	u12710
 10654  005904  EF84  F02C         	goto	u12711
 10655  005908                     u12711:
 10656  005908  EF87  F02C         	goto	l9450
 10657  00590C                     u12710:
 10658  00590C                     
 10659                           ; BSR set to: 0
 10660  00590C  8F97               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10661  00590E                     l9450:
 10662                           
 10663                           ; BSR set to: 0
 10664  00590E  C094  F08A         	movff	___xxtofl@arg,?___xxtofl
 10665  005912  C095  F08B         	movff	___xxtofl@arg+1,?___xxtofl+1
 10666  005916  C096  F08C         	movff	___xxtofl@arg+2,?___xxtofl+2
 10667  00591A  C097  F08D         	movff	___xxtofl@arg+3,?___xxtofl+3
 10668  00591E                     l1312:
 10669                           
 10670                           ; BSR set to: 0
 10671  00591E  0012               	return		;funcret
 10672  005920                     __end_of___xxtofl:
 10673                           	callstack 0
 10674                           
 10675 ;; *************** function ___flmul *****************
 10676 ;; Defined at:
 10677 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  b               4   24[BANK0 ] unsigned char 
 10680 ;;  a               4   28[BANK0 ] unsigned char 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;  prod            4   43[BANK0 ] struct .
 10683 ;;  grs             4   38[BANK0 ] unsigned long 
 10684 ;;  temp            2   47[BANK0 ] struct .
 10685 ;;  bexp            1   42[BANK0 ] unsigned char 
 10686 ;;  aexp            1   37[BANK0 ] unsigned char 
 10687 ;;  sign            1   36[BANK0 ] unsigned char 
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  4   24[BANK0 ] unsigned char 
 10690 ;; Registers used:
 10691 ;;		wreg, status,2, status,0, prodl, prodh
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10697 ;;      Params:         0       8       0       0       0       0       0
 10698 ;;      Locals:         0      13       0       0       0       0       0
 10699 ;;      Temps:          0       4       0       0       0       0       0
 10700 ;;      Totals:         0      25       0       0       0       0       0
 10701 ;;Total ram usage:       25 bytes
 10702 ;; Hardware stack levels used:    1
 10703 ;; Hardware stack levels required when called:    5
 10704 ;; This function calls:
 10705 ;;		Nothing
 10706 ;; This function is called by:
 10707 ;;		_leituraCXI
 10708 ;;		_leituraCXS
 10709 ;;		_atualizatela
 10710 ;;		_fround
 10711 ;;		_scale
 10712 ;;		_sprintf
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text31
 10717  003146                     __ptext31:
 10718                           	callstack 0
 10719  003146                     ___flmul:
 10720                           	callstack 23
 10721  003146  0100               	movlb	0	; () banked
 10722  003148  519B               	movf	(___flmul@b+3)& (0+255),w,b
 10723  00314A  0B80               	andlw	128
 10724  00314C  6FA4               	movwf	___flmul@sign& (0+255),b
 10725  00314E  519B               	movf	(___flmul@b+3)& (0+255),w,b
 10726  003150  259B               	addwf	(___flmul@b+3)& (0+255),w,b
 10727  003152  6FAA               	movwf	___flmul@bexp& (0+255),b
 10728  003154                     
 10729                           ; BSR set to: 0
 10730  003154  AF9A               	btfss	(___flmul@b+2)& (0+255),7,b
 10731  003156  EFAF  F018         	goto	u11471
 10732  00315A  EFB1  F018         	goto	u11470
 10733  00315E                     u11471:
 10734  00315E  EFB2  F018         	goto	l8642
 10735  003162                     u11470:
 10736  003162                     
 10737                           ; BSR set to: 0
 10738  003162  81AA               	bsf	___flmul@bexp& (0+255),0,b
 10739  003164                     l8642:
 10740                           
 10741                           ; BSR set to: 0
 10742  003164  51AA               	movf	___flmul@bexp& (0+255),w,b
 10743  003166  B4D8               	btfsc	status,2,c
 10744  003168  EFB8  F018         	goto	u11481
 10745  00316C  EFBA  F018         	goto	u11480
 10746  003170                     u11481:
 10747  003170  EFCD  F018         	goto	l8650
 10748  003174                     u11480:
 10749  003174                     
 10750                           ; BSR set to: 0
 10751  003174  29AA               	incf	___flmul@bexp& (0+255),w,b
 10752  003176  A4D8               	btfss	status,2,c
 10753  003178  EFC0  F018         	goto	u11491
 10754  00317C  EFC2  F018         	goto	u11490
 10755  003180                     u11491:
 10756  003180  EFCA  F018         	goto	l8648
 10757  003184                     u11490:
 10758  003184                     
 10759                           ; BSR set to: 0
 10760  003184  0E00               	movlw	0
 10761  003186  6F98               	movwf	___flmul@b& (0+255),b
 10762  003188  0E00               	movlw	0
 10763  00318A  6F99               	movwf	(___flmul@b+1)& (0+255),b
 10764  00318C  0E00               	movlw	0
 10765  00318E  6F9A               	movwf	(___flmul@b+2)& (0+255),b
 10766  003190  0E00               	movlw	0
 10767  003192  6F9B               	movwf	(___flmul@b+3)& (0+255),b
 10768  003194                     l8648:
 10769                           
 10770                           ; BSR set to: 0
 10771  003194  8F9A               	bsf	(___flmul@b+2)& (0+255),7,b
 10772  003196  EFD5  F018         	goto	l8652
 10773  00319A                     l8650:
 10774                           
 10775                           ; BSR set to: 0
 10776  00319A  0E00               	movlw	0
 10777  00319C  6F98               	movwf	___flmul@b& (0+255),b
 10778  00319E  0E00               	movlw	0
 10779  0031A0  6F99               	movwf	(___flmul@b+1)& (0+255),b
 10780  0031A2  0E00               	movlw	0
 10781  0031A4  6F9A               	movwf	(___flmul@b+2)& (0+255),b
 10782  0031A6  0E00               	movlw	0
 10783  0031A8  6F9B               	movwf	(___flmul@b+3)& (0+255),b
 10784  0031AA                     l8652:
 10785                           
 10786                           ; BSR set to: 0
 10787  0031AA  519F               	movf	(___flmul@a+3)& (0+255),w,b
 10788  0031AC  0B80               	andlw	128
 10789  0031AE  1BA4               	xorwf	___flmul@sign& (0+255),f,b
 10790  0031B0                     
 10791                           ; BSR set to: 0
 10792  0031B0  519F               	movf	(___flmul@a+3)& (0+255),w,b
 10793  0031B2  259F               	addwf	(___flmul@a+3)& (0+255),w,b
 10794  0031B4  6FA5               	movwf	___flmul@aexp& (0+255),b
 10795  0031B6                     
 10796                           ; BSR set to: 0
 10797  0031B6  AF9E               	btfss	(___flmul@a+2)& (0+255),7,b
 10798  0031B8  EFE0  F018         	goto	u11501
 10799  0031BC  EFE2  F018         	goto	u11500
 10800  0031C0                     u11501:
 10801  0031C0  EFE3  F018         	goto	l8660
 10802  0031C4                     u11500:
 10803  0031C4                     
 10804                           ; BSR set to: 0
 10805  0031C4  81A5               	bsf	___flmul@aexp& (0+255),0,b
 10806  0031C6                     l8660:
 10807                           
 10808                           ; BSR set to: 0
 10809  0031C6  51A5               	movf	___flmul@aexp& (0+255),w,b
 10810  0031C8  B4D8               	btfsc	status,2,c
 10811  0031CA  EFE9  F018         	goto	u11511
 10812  0031CE  EFEB  F018         	goto	u11510
 10813  0031D2                     u11511:
 10814  0031D2  EFFE  F018         	goto	l8668
 10815  0031D6                     u11510:
 10816  0031D6                     
 10817                           ; BSR set to: 0
 10818  0031D6  29A5               	incf	___flmul@aexp& (0+255),w,b
 10819  0031D8  A4D8               	btfss	status,2,c
 10820  0031DA  EFF1  F018         	goto	u11521
 10821  0031DE  EFF3  F018         	goto	u11520
 10822  0031E2                     u11521:
 10823  0031E2  EFFB  F018         	goto	l8666
 10824  0031E6                     u11520:
 10825  0031E6                     
 10826                           ; BSR set to: 0
 10827  0031E6  0E00               	movlw	0
 10828  0031E8  6F9C               	movwf	___flmul@a& (0+255),b
 10829  0031EA  0E00               	movlw	0
 10830  0031EC  6F9D               	movwf	(___flmul@a+1)& (0+255),b
 10831  0031EE  0E00               	movlw	0
 10832  0031F0  6F9E               	movwf	(___flmul@a+2)& (0+255),b
 10833  0031F2  0E00               	movlw	0
 10834  0031F4  6F9F               	movwf	(___flmul@a+3)& (0+255),b
 10835  0031F6                     l8666:
 10836                           
 10837                           ; BSR set to: 0
 10838  0031F6  8F9E               	bsf	(___flmul@a+2)& (0+255),7,b
 10839  0031F8  EF06  F019         	goto	l1268
 10840  0031FC                     l8668:
 10841                           
 10842                           ; BSR set to: 0
 10843  0031FC  0E00               	movlw	0
 10844  0031FE  6F9C               	movwf	___flmul@a& (0+255),b
 10845  003200  0E00               	movlw	0
 10846  003202  6F9D               	movwf	(___flmul@a+1)& (0+255),b
 10847  003204  0E00               	movlw	0
 10848  003206  6F9E               	movwf	(___flmul@a+2)& (0+255),b
 10849  003208  0E00               	movlw	0
 10850  00320A  6F9F               	movwf	(___flmul@a+3)& (0+255),b
 10851  00320C                     l1268:
 10852                           
 10853                           ; BSR set to: 0
 10854  00320C  51A5               	movf	___flmul@aexp& (0+255),w,b
 10855  00320E  B4D8               	btfsc	status,2,c
 10856  003210  EF0C  F019         	goto	u11531
 10857  003214  EF0E  F019         	goto	u11530
 10858  003218                     u11531:
 10859  003218  EF16  F019         	goto	l8672
 10860  00321C                     u11530:
 10861  00321C                     
 10862                           ; BSR set to: 0
 10863  00321C  51AA               	movf	___flmul@bexp& (0+255),w,b
 10864  00321E  A4D8               	btfss	status,2,c
 10865  003220  EF14  F019         	goto	u11541
 10866  003224  EF16  F019         	goto	u11540
 10867  003228                     u11541:
 10868  003228  EF20  F019         	goto	l8676
 10869  00322C                     u11540:
 10870  00322C                     l8672:
 10871                           
 10872                           ; BSR set to: 0
 10873  00322C  0E00               	movlw	0
 10874  00322E  6F98               	movwf	?___flmul& (0+255),b
 10875  003230  0E00               	movlw	0
 10876  003232  6F99               	movwf	(?___flmul+1)& (0+255),b
 10877  003234  0E00               	movlw	0
 10878  003236  6F9A               	movwf	(?___flmul+2)& (0+255),b
 10879  003238  0E00               	movlw	0
 10880  00323A  6F9B               	movwf	(?___flmul+3)& (0+255),b
 10881  00323C  EFB8  F01A         	goto	l1272
 10882  003240                     l8676:
 10883                           
 10884                           ; BSR set to: 0
 10885  003240  519E               	movf	(___flmul@a+2)& (0+255),w,b
 10886  003242  0398               	mulwf	___flmul@b& (0+255),b
 10887  003244  CFF3 F0AF          	movff	prodl,___flmul@temp
 10888  003248  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 10889  00324C                     
 10890                           ; BSR set to: 0
 10891  00324C  51AF               	movf	___flmul@temp& (0+255),w,b
 10892  00324E  6FA6               	movwf	___flmul@grs& (0+255),b
 10893  003250  6BA7               	clrf	(___flmul@grs+1)& (0+255),b
 10894  003252  6BA8               	clrf	(___flmul@grs+2)& (0+255),b
 10895  003254  6BA9               	clrf	(___flmul@grs+3)& (0+255),b
 10896  003256                     
 10897                           ; BSR set to: 0
 10898  003256  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 10899  003258  6FAB               	movwf	___flmul@prod& (0+255),b
 10900  00325A  6BAC               	clrf	(___flmul@prod+1)& (0+255),b
 10901  00325C  6BAD               	clrf	(___flmul@prod+2)& (0+255),b
 10902  00325E  6BAE               	clrf	(___flmul@prod+3)& (0+255),b
 10903  003260  519D               	movf	(___flmul@a+1)& (0+255),w,b
 10904  003262  0399               	mulwf	(___flmul@b+1)& (0+255),b
 10905  003264  CFF3 F0AF          	movff	prodl,___flmul@temp
 10906  003268  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 10907  00326C                     
 10908                           ; BSR set to: 0
 10909  00326C  51AF               	movf	___flmul@temp& (0+255),w,b
 10910  00326E  27A6               	addwf	___flmul@grs& (0+255),f,b
 10911  003270  0E00               	movlw	0
 10912  003272  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10913  003274  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10914  003276  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10915  003278                     
 10916                           ; BSR set to: 0
 10917  003278  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 10918  00327A  27AB               	addwf	___flmul@prod& (0+255),f,b
 10919  00327C  0E00               	movlw	0
 10920  00327E  23AC               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10921  003280  23AD               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10922  003282  23AE               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10923  003284  519C               	movf	___flmul@a& (0+255),w,b
 10924  003286  039A               	mulwf	(___flmul@b+2)& (0+255),b
 10925  003288  CFF3 F0AF          	movff	prodl,___flmul@temp
 10926  00328C  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 10927  003290                     
 10928                           ; BSR set to: 0
 10929  003290  51AF               	movf	___flmul@temp& (0+255),w,b
 10930  003292  27A6               	addwf	___flmul@grs& (0+255),f,b
 10931  003294  0E00               	movlw	0
 10932  003296  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10933  003298  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10934  00329A  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10935  00329C                     
 10936                           ; BSR set to: 0
 10937  00329C  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 10938  00329E  27AB               	addwf	___flmul@prod& (0+255),f,b
 10939  0032A0  0E00               	movlw	0
 10940  0032A2  23AC               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10941  0032A4  23AD               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10942  0032A6  23AE               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10943  0032A8                     
 10944                           ; BSR set to: 0
 10945  0032A8  C0A8  F0A9         	movff	___flmul@grs+2,___flmul@grs+3
 10946  0032AC  C0A7  F0A8         	movff	___flmul@grs+1,___flmul@grs+2
 10947  0032B0  C0A6  F0A7         	movff	___flmul@grs,___flmul@grs+1
 10948  0032B4  6BA6               	clrf	___flmul@grs& (0+255),b
 10949  0032B6                     
 10950                           ; BSR set to: 0
 10951  0032B6  519C               	movf	___flmul@a& (0+255),w,b
 10952  0032B8  0399               	mulwf	(___flmul@b+1)& (0+255),b
 10953  0032BA  CFF3 F0AF          	movff	prodl,___flmul@temp
 10954  0032BE  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 10955  0032C2                     
 10956                           ; BSR set to: 0
 10957  0032C2  51AF               	movf	___flmul@temp& (0+255),w,b
 10958  0032C4  27A6               	addwf	___flmul@grs& (0+255),f,b
 10959  0032C6  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 10960  0032C8  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10961  0032CA  0E00               	movlw	0
 10962  0032CC  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10963  0032CE  0E00               	movlw	0
 10964  0032D0  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10965  0032D2                     
 10966                           ; BSR set to: 0
 10967  0032D2  519D               	movf	(___flmul@a+1)& (0+255),w,b
 10968  0032D4  0398               	mulwf	___flmul@b& (0+255),b
 10969  0032D6  CFF3 F0AF          	movff	prodl,___flmul@temp
 10970  0032DA  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 10971  0032DE                     
 10972                           ; BSR set to: 0
 10973  0032DE  51AF               	movf	___flmul@temp& (0+255),w,b
 10974  0032E0  27A6               	addwf	___flmul@grs& (0+255),f,b
 10975  0032E2  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 10976  0032E4  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10977  0032E6  0E00               	movlw	0
 10978  0032E8  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10979  0032EA  0E00               	movlw	0
 10980  0032EC  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10981  0032EE                     
 10982                           ; BSR set to: 0
 10983  0032EE  C0A8  F0A9         	movff	___flmul@grs+2,___flmul@grs+3
 10984  0032F2  C0A7  F0A8         	movff	___flmul@grs+1,___flmul@grs+2
 10985  0032F6  C0A6  F0A7         	movff	___flmul@grs,___flmul@grs+1
 10986  0032FA  6BA6               	clrf	___flmul@grs& (0+255),b
 10987  0032FC  519C               	movf	___flmul@a& (0+255),w,b
 10988  0032FE  0398               	mulwf	___flmul@b& (0+255),b
 10989  003300  CFF3 F0AF          	movff	prodl,___flmul@temp
 10990  003304  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 10991  003308                     
 10992                           ; BSR set to: 0
 10993  003308  51AF               	movf	___flmul@temp& (0+255),w,b
 10994  00330A  27A6               	addwf	___flmul@grs& (0+255),f,b
 10995  00330C  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 10996  00330E  23A7               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10997  003310  0E00               	movlw	0
 10998  003312  23A8               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10999  003314  0E00               	movlw	0
 11000  003316  23A9               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11001  003318                     
 11002                           ; BSR set to: 0
 11003  003318  519E               	movf	(___flmul@a+2)& (0+255),w,b
 11004  00331A  0399               	mulwf	(___flmul@b+1)& (0+255),b
 11005  00331C  CFF3 F0AF          	movff	prodl,___flmul@temp
 11006  003320  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 11007  003324  51AF               	movf	___flmul@temp& (0+255),w,b
 11008  003326  27AB               	addwf	___flmul@prod& (0+255),f,b
 11009  003328  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 11010  00332A  23AC               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11011  00332C  0E00               	movlw	0
 11012  00332E  23AD               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11013  003330  0E00               	movlw	0
 11014  003332  23AE               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11015  003334                     
 11016                           ; BSR set to: 0
 11017  003334  519D               	movf	(___flmul@a+1)& (0+255),w,b
 11018  003336  039A               	mulwf	(___flmul@b+2)& (0+255),b
 11019  003338  CFF3 F0AF          	movff	prodl,___flmul@temp
 11020  00333C  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 11021  003340                     
 11022                           ; BSR set to: 0
 11023  003340  51AF               	movf	___flmul@temp& (0+255),w,b
 11024  003342  27AB               	addwf	___flmul@prod& (0+255),f,b
 11025  003344  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 11026  003346  23AC               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11027  003348  0E00               	movlw	0
 11028  00334A  23AD               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11029  00334C  0E00               	movlw	0
 11030  00334E  23AE               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11031  003350  519E               	movf	(___flmul@a+2)& (0+255),w,b
 11032  003352  039A               	mulwf	(___flmul@b+2)& (0+255),b
 11033  003354  CFF3 F0AF          	movff	prodl,___flmul@temp
 11034  003358  CFF4 F0B0          	movff	prodh,___flmul@temp+1
 11035  00335C                     
 11036                           ; BSR set to: 0
 11037  00335C  51AF               	movf	___flmul@temp& (0+255),w,b
 11038  00335E  6FA0               	movwf	??___flmul& (0+255),b
 11039  003360  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 11040  003362  6FA1               	movwf	(??___flmul+1)& (0+255),b
 11041  003364  6BA2               	clrf	(??___flmul+2)& (0+255),b
 11042  003366  6BA3               	clrf	(??___flmul+3)& (0+255),b
 11043  003368  C0A2  F0A3         	movff	??___flmul+2,??___flmul+3
 11044  00336C  C0A1  F0A2         	movff	??___flmul+1,??___flmul+2
 11045  003370  C0A0  F0A1         	movff	??___flmul,??___flmul+1
 11046  003374  6BA0               	clrf	??___flmul& (0+255),b
 11047  003376  51A0               	movf	??___flmul& (0+255),w,b
 11048  003378  27AB               	addwf	___flmul@prod& (0+255),f,b
 11049  00337A  51A1               	movf	(??___flmul+1)& (0+255),w,b
 11050  00337C  23AC               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11051  00337E  51A2               	movf	(??___flmul+2)& (0+255),w,b
 11052  003380  23AD               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11053  003382  51A3               	movf	(??___flmul+3)& (0+255),w,b
 11054  003384  23AE               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11055  003386                     
 11056                           ; BSR set to: 0
 11057  003386  C0A6  F0A0         	movff	___flmul@grs,??___flmul
 11058  00338A  C0A7  F0A1         	movff	___flmul@grs+1,??___flmul+1
 11059  00338E  C0A8  F0A2         	movff	___flmul@grs+2,??___flmul+2
 11060  003392  C0A9  F0A3         	movff	___flmul@grs+3,??___flmul+3
 11061  003396  0E19               	movlw	25
 11062  003398  EFD3  F019         	goto	u11550
 11063  00339C                     u11555:
 11064  00339C  90D8               	bcf	status,0,c
 11065  00339E  33A3               	rrcf	(??___flmul+3)& (0+255),f,b
 11066  0033A0  33A2               	rrcf	(??___flmul+2)& (0+255),f,b
 11067  0033A2  33A1               	rrcf	(??___flmul+1)& (0+255),f,b
 11068  0033A4  33A0               	rrcf	??___flmul& (0+255),f,b
 11069  0033A6                     u11550:
 11070  0033A6  2EE8               	decfsz	wreg,f,c
 11071  0033A8  EFCE  F019         	goto	u11555
 11072  0033AC  51A0               	movf	??___flmul& (0+255),w,b
 11073  0033AE  27AB               	addwf	___flmul@prod& (0+255),f,b
 11074  0033B0  51A1               	movf	(??___flmul+1)& (0+255),w,b
 11075  0033B2  23AC               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11076  0033B4  51A2               	movf	(??___flmul+2)& (0+255),w,b
 11077  0033B6  23AD               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11078  0033B8  51A3               	movf	(??___flmul+3)& (0+255),w,b
 11079  0033BA  23AE               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11080  0033BC                     
 11081                           ; BSR set to: 0
 11082  0033BC  C0A8  F0A9         	movff	___flmul@grs+2,___flmul@grs+3
 11083  0033C0  C0A7  F0A8         	movff	___flmul@grs+1,___flmul@grs+2
 11084  0033C4  C0A6  F0A7         	movff	___flmul@grs,___flmul@grs+1
 11085  0033C8  6BA6               	clrf	___flmul@grs& (0+255),b
 11086  0033CA                     
 11087                           ; BSR set to: 0
 11088  0033CA  51A5               	movf	___flmul@aexp& (0+255),w,b
 11089  0033CC  C0AA  F0A0         	movff	___flmul@bexp,??___flmul
 11090  0033D0  6BA1               	clrf	(??___flmul+1)& (0+255),b
 11091  0033D2  27A0               	addwf	??___flmul& (0+255),f,b
 11092  0033D4  0E00               	movlw	0
 11093  0033D6  23A1               	addwfc	(??___flmul+1)& (0+255),f,b
 11094  0033D8  0E82               	movlw	130
 11095  0033DA  25A0               	addwf	??___flmul& (0+255),w,b
 11096  0033DC  6FAF               	movwf	___flmul@temp& (0+255),b
 11097  0033DE  0EFF               	movlw	255
 11098  0033E0  21A1               	addwfc	(??___flmul+1)& (0+255),w,b
 11099  0033E2  6FB0               	movwf	(___flmul@temp+1)& (0+255),b
 11100  0033E4  EF09  F01A         	goto	l8724
 11101  0033E8                     l8718:
 11102                           
 11103                           ; BSR set to: 0
 11104  0033E8  90D8               	bcf	status,0,c
 11105  0033EA  37AB               	rlcf	___flmul@prod& (0+255),f,b
 11106  0033EC  37AC               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11107  0033EE  37AD               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11108  0033F0  37AE               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11109  0033F2                     
 11110                           ; BSR set to: 0
 11111  0033F2  AFA9               	btfss	(___flmul@grs+3)& (0+255),7,b
 11112  0033F4  EFFE  F019         	goto	u11561
 11113  0033F8  EF00  F01A         	goto	u11560
 11114  0033FC                     u11561:
 11115  0033FC  EF01  F01A         	goto	l1275
 11116  003400                     u11560:
 11117  003400                     
 11118                           ; BSR set to: 0
 11119  003400  81AB               	bsf	___flmul@prod& (0+255),0,b
 11120  003402                     l1275:
 11121                           
 11122                           ; BSR set to: 0
 11123  003402  90D8               	bcf	status,0,c
 11124  003404  37A6               	rlcf	___flmul@grs& (0+255),f,b
 11125  003406  37A7               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11126  003408  37A8               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11127  00340A  37A9               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11128  00340C  07AF               	decf	___flmul@temp& (0+255),f,b
 11129  00340E  A0D8               	btfss	status,0,c
 11130  003410  07B0               	decf	(___flmul@temp+1)& (0+255),f,b
 11131  003412                     l8724:
 11132                           
 11133                           ; BSR set to: 0
 11134  003412  AFAD               	btfss	(___flmul@prod+2)& (0+255),7,b
 11135  003414  EF0E  F01A         	goto	u11571
 11136  003418  EF10  F01A         	goto	u11570
 11137  00341C                     u11571:
 11138  00341C  EFF4  F019         	goto	l8718
 11139  003420                     u11570:
 11140  003420                     
 11141                           ; BSR set to: 0
 11142  003420  0E00               	movlw	0
 11143  003422  6FA5               	movwf	___flmul@aexp& (0+255),b
 11144  003424                     
 11145                           ; BSR set to: 0
 11146  003424  AFA9               	btfss	(___flmul@grs+3)& (0+255),7,b
 11147  003426  EF17  F01A         	goto	u11581
 11148  00342A  EF19  F01A         	goto	u11580
 11149  00342E                     u11581:
 11150  00342E  EF3D  F01A         	goto	l1277
 11151  003432                     u11580:
 11152  003432                     
 11153                           ; BSR set to: 0
 11154  003432  0EFF               	movlw	255
 11155  003434  15A6               	andwf	___flmul@grs& (0+255),w,b
 11156  003436  6FA0               	movwf	??___flmul& (0+255),b
 11157  003438  0EFF               	movlw	255
 11158  00343A  15A7               	andwf	(___flmul@grs+1)& (0+255),w,b
 11159  00343C  6FA1               	movwf	(??___flmul+1)& (0+255),b
 11160  00343E  0EFF               	movlw	255
 11161  003440  15A8               	andwf	(___flmul@grs+2)& (0+255),w,b
 11162  003442  6FA2               	movwf	(??___flmul+2)& (0+255),b
 11163  003444  0E7F               	movlw	127
 11164  003446  15A9               	andwf	(___flmul@grs+3)& (0+255),w,b
 11165  003448  6FA3               	movwf	(??___flmul+3)& (0+255),b
 11166  00344A  51A0               	movf	??___flmul& (0+255),w,b
 11167  00344C  11A1               	iorwf	(??___flmul+1)& (0+255),w,b
 11168  00344E  11A2               	iorwf	(??___flmul+2)& (0+255),w,b
 11169  003450  11A3               	iorwf	(??___flmul+3)& (0+255),w,b
 11170  003452  B4D8               	btfsc	status,2,c
 11171  003454  EF2E  F01A         	goto	u11591
 11172  003458  EF30  F01A         	goto	u11590
 11173  00345C                     u11591:
 11174  00345C  EF34  F01A         	goto	l1278
 11175  003460                     u11590:
 11176  003460                     l8732:
 11177                           
 11178                           ; BSR set to: 0
 11179  003460  0E01               	movlw	1
 11180  003462  6FA5               	movwf	___flmul@aexp& (0+255),b
 11181  003464  EF3D  F01A         	goto	l1277
 11182  003468                     l1278:
 11183                           
 11184                           ; BSR set to: 0
 11185  003468  A1AB               	btfss	___flmul@prod& (0+255),0,b
 11186  00346A  EF39  F01A         	goto	u11601
 11187  00346E  EF3B  F01A         	goto	u11600
 11188  003472                     u11601:
 11189  003472  EF3D  F01A         	goto	l1277
 11190  003476                     u11600:
 11191  003476  EF30  F01A         	goto	l8732
 11192  00347A                     l1277:
 11193                           
 11194                           ; BSR set to: 0
 11195  00347A  51A5               	movf	___flmul@aexp& (0+255),w,b
 11196  00347C  B4D8               	btfsc	status,2,c
 11197  00347E  EF43  F01A         	goto	u11611
 11198  003482  EF45  F01A         	goto	u11610
 11199  003486                     u11611:
 11200  003486  EF69  F01A         	goto	l8744
 11201  00348A                     u11610:
 11202  00348A                     
 11203                           ; BSR set to: 0
 11204  00348A  0E01               	movlw	1
 11205  00348C  27AB               	addwf	___flmul@prod& (0+255),f,b
 11206  00348E  0E00               	movlw	0
 11207  003490  23AC               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11208  003492  23AD               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11209  003494  23AE               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11210  003496                     
 11211                           ; BSR set to: 0
 11212  003496  A1AE               	btfss	(___flmul@prod+3)& (0+255),0,b
 11213  003498  EF50  F01A         	goto	u11621
 11214  00349C  EF52  F01A         	goto	u11620
 11215  0034A0                     u11621:
 11216  0034A0  EF69  F01A         	goto	l8744
 11217  0034A4                     u11620:
 11218  0034A4                     
 11219                           ; BSR set to: 0
 11220  0034A4  C0AB  F0A0         	movff	___flmul@prod,??___flmul
 11221  0034A8  C0AC  F0A1         	movff	___flmul@prod+1,??___flmul+1
 11222  0034AC  C0AD  F0A2         	movff	___flmul@prod+2,??___flmul+2
 11223  0034B0  C0AE  F0A3         	movff	___flmul@prod+3,??___flmul+3
 11224  0034B4  35A3               	rlcf	(??___flmul+3)& (0+255),w,b
 11225  0034B6  33A3               	rrcf	(??___flmul+3)& (0+255),f,b
 11226  0034B8  33A2               	rrcf	(??___flmul+2)& (0+255),f,b
 11227  0034BA  33A1               	rrcf	(??___flmul+1)& (0+255),f,b
 11228  0034BC  33A0               	rrcf	??___flmul& (0+255),f,b
 11229  0034BE  C0A0  F0AB         	movff	??___flmul,___flmul@prod
 11230  0034C2  C0A1  F0AC         	movff	??___flmul+1,___flmul@prod+1
 11231  0034C6  C0A2  F0AD         	movff	??___flmul+2,___flmul@prod+2
 11232  0034CA  C0A3  F0AE         	movff	??___flmul+3,___flmul@prod+3
 11233  0034CE                     
 11234                           ; BSR set to: 0
 11235  0034CE  4BAF               	infsnz	___flmul@temp& (0+255),f,b
 11236  0034D0  2BB0               	incf	(___flmul@temp+1)& (0+255),f,b
 11237  0034D2                     l8744:
 11238                           
 11239                           ; BSR set to: 0
 11240  0034D2  BFB0               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11241  0034D4  EF74  F01A         	goto	u11631
 11242  0034D8  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 11243  0034DA  E108               	bnz	u11630
 11244  0034DC  29AF               	incf	___flmul@temp& (0+255),w,b
 11245  0034DE  A0D8               	btfss	status,0,c
 11246  0034E0  EF74  F01A         	goto	u11631
 11247  0034E4  EF76  F01A         	goto	u11630
 11248  0034E8                     u11631:
 11249  0034E8  EF80  F01A         	goto	l8748
 11250  0034EC                     u11630:
 11251  0034EC                     
 11252                           ; BSR set to: 0
 11253  0034EC  0E00               	movlw	0
 11254  0034EE  6FAB               	movwf	___flmul@prod& (0+255),b
 11255  0034F0  0E00               	movlw	0
 11256  0034F2  6FAC               	movwf	(___flmul@prod+1)& (0+255),b
 11257  0034F4  0E80               	movlw	128
 11258  0034F6  6FAD               	movwf	(___flmul@prod+2)& (0+255),b
 11259  0034F8  0E7F               	movlw	127
 11260  0034FA  6FAE               	movwf	(___flmul@prod+3)& (0+255),b
 11261  0034FC  EFAE  F01A         	goto	l8760
 11262  003500                     l8748:
 11263                           
 11264                           ; BSR set to: 0
 11265  003500  BFB0               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11266  003502  EF8D  F01A         	goto	u11640
 11267  003506  51B0               	movf	(___flmul@temp+1)& (0+255),w,b
 11268  003508  E106               	bnz	u11641
 11269  00350A  05AF               	decf	___flmul@temp& (0+255),w,b
 11270  00350C  B0D8               	btfsc	status,0,c
 11271  00350E  EF8B  F01A         	goto	u11641
 11272  003512  EF8D  F01A         	goto	u11640
 11273  003516                     u11641:
 11274  003516  EF99  F01A         	goto	l1285
 11275  00351A                     u11640:
 11276  00351A                     
 11277                           ; BSR set to: 0
 11278  00351A  0E00               	movlw	0
 11279  00351C  6FAB               	movwf	___flmul@prod& (0+255),b
 11280  00351E  0E00               	movlw	0
 11281  003520  6FAC               	movwf	(___flmul@prod+1)& (0+255),b
 11282  003522  0E00               	movlw	0
 11283  003524  6FAD               	movwf	(___flmul@prod+2)& (0+255),b
 11284  003526  0E00               	movlw	0
 11285  003528  6FAE               	movwf	(___flmul@prod+3)& (0+255),b
 11286  00352A  0E00               	movlw	0
 11287  00352C  6FA4               	movwf	___flmul@sign& (0+255),b
 11288  00352E  EFAE  F01A         	goto	l8760
 11289  003532                     l1285:
 11290                           
 11291                           ; BSR set to: 0
 11292  003532  C0AF  F0AA         	movff	___flmul@temp,___flmul@bexp
 11293  003536                     
 11294                           ; BSR set to: 0
 11295  003536  0EFF               	movlw	255
 11296  003538  17AB               	andwf	___flmul@prod& (0+255),f,b
 11297  00353A  0EFF               	movlw	255
 11298  00353C  17AC               	andwf	(___flmul@prod+1)& (0+255),f,b
 11299  00353E  0E7F               	movlw	127
 11300  003540  17AD               	andwf	(___flmul@prod+2)& (0+255),f,b
 11301  003542  0E00               	movlw	0
 11302  003544  17AE               	andwf	(___flmul@prod+3)& (0+255),f,b
 11303  003546                     
 11304                           ; BSR set to: 0
 11305  003546  A1AA               	btfss	___flmul@bexp& (0+255),0,b
 11306  003548  EFA8  F01A         	goto	u11651
 11307  00354C  EFAA  F01A         	goto	u11650
 11308  003550                     u11651:
 11309  003550  EFAB  F01A         	goto	l8758
 11310  003554                     u11650:
 11311  003554                     
 11312                           ; BSR set to: 0
 11313  003554  8FAD               	bsf	(___flmul@prod+2)& (0+255),7,b
 11314  003556                     l8758:
 11315                           
 11316                           ; BSR set to: 0
 11317  003556  90D8               	bcf	status,0,c
 11318  003558  31AA               	rrcf	___flmul@bexp& (0+255),w,b
 11319  00355A  6FAE               	movwf	(___flmul@prod+3)& (0+255),b
 11320  00355C                     l8760:
 11321                           
 11322                           ; BSR set to: 0
 11323  00355C  51A4               	movf	___flmul@sign& (0+255),w,b
 11324  00355E  13AE               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11325  003560                     
 11326                           ; BSR set to: 0
 11327  003560  C0AB  F098         	movff	___flmul@prod,?___flmul
 11328  003564  C0AC  F099         	movff	___flmul@prod+1,?___flmul+1
 11329  003568  C0AD  F09A         	movff	___flmul@prod+2,?___flmul+2
 11330  00356C  C0AE  F09B         	movff	___flmul@prod+3,?___flmul+3
 11331  003570                     l1272:
 11332                           
 11333                           ; BSR set to: 0
 11334  003570  0012               	return		;funcret
 11335  003572                     __end_of___flmul:
 11336                           	callstack 0
 11337                           
 11338 ;; *************** function ___fldiv *****************
 11339 ;; Defined at:
 11340 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  b               4   49[BANK0 ] unsigned char 
 11343 ;;  a               4   53[BANK0 ] unsigned char 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  grs             4   68[BANK0 ] unsigned long 
 11346 ;;  rem             4   61[BANK0 ] unsigned long 
 11347 ;;  new_exp         2   66[BANK0 ] int 
 11348 ;;  aexp            1   73[BANK0 ] unsigned char 
 11349 ;;  bexp            1   72[BANK0 ] unsigned char 
 11350 ;;  sign            1   65[BANK0 ] unsigned char 
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  4   49[BANK0 ] unsigned char 
 11353 ;; Registers used:
 11354 ;;		wreg, status,2, status,0
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11360 ;;      Params:         0       8       0       0       0       0       0
 11361 ;;      Locals:         0      13       0       0       0       0       0
 11362 ;;      Temps:          0       4       0       0       0       0       0
 11363 ;;      Totals:         0      25       0       0       0       0       0
 11364 ;;Total ram usage:       25 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; Hardware stack levels required when called:    5
 11367 ;; This function calls:
 11368 ;;		Nothing
 11369 ;; This function is called by:
 11370 ;;		_leituraCXI
 11371 ;;		_leituraCXS
 11372 ;;		_atualizatela
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text32
 11377  004580                     __ptext32:
 11378                           	callstack 0
 11379  004580                     ___fldiv:
 11380                           	callstack 24
 11381  004580  0100               	movlb	0	; () banked
 11382  004582  51B4               	movf	(___fldiv@b+3)& (0+255),w,b
 11383  004584  0B80               	andlw	128
 11384  004586  6FC1               	movwf	___fldiv@sign& (0+255),b
 11385  004588  51B4               	movf	(___fldiv@b+3)& (0+255),w,b
 11386  00458A  25B4               	addwf	(___fldiv@b+3)& (0+255),w,b
 11387  00458C  6FC8               	movwf	___fldiv@bexp& (0+255),b
 11388  00458E                     
 11389                           ; BSR set to: 0
 11390  00458E  AFB3               	btfss	(___fldiv@b+2)& (0+255),7,b
 11391  004590  EFCC  F022         	goto	u12201
 11392  004594  EFCE  F022         	goto	u12200
 11393  004598                     u12201:
 11394  004598  EFCF  F022         	goto	l9164
 11395  00459C                     u12200:
 11396  00459C                     
 11397                           ; BSR set to: 0
 11398  00459C  81C8               	bsf	___fldiv@bexp& (0+255),0,b
 11399  00459E                     l9164:
 11400                           
 11401                           ; BSR set to: 0
 11402  00459E  51C8               	movf	___fldiv@bexp& (0+255),w,b
 11403  0045A0  B4D8               	btfsc	status,2,c
 11404  0045A2  EFD5  F022         	goto	u12211
 11405  0045A6  EFD7  F022         	goto	u12210
 11406  0045AA                     u12211:
 11407  0045AA  EFEC  F022         	goto	l9174
 11408  0045AE                     u12210:
 11409  0045AE                     
 11410                           ; BSR set to: 0
 11411  0045AE  29C8               	incf	___fldiv@bexp& (0+255),w,b
 11412  0045B0  A4D8               	btfss	status,2,c
 11413  0045B2  EFDD  F022         	goto	u12221
 11414  0045B6  EFDF  F022         	goto	u12220
 11415  0045BA                     u12221:
 11416  0045BA  EFE7  F022         	goto	l9170
 11417  0045BE                     u12220:
 11418  0045BE                     
 11419                           ; BSR set to: 0
 11420  0045BE  0E00               	movlw	0
 11421  0045C0  6FB1               	movwf	___fldiv@b& (0+255),b
 11422  0045C2  0E00               	movlw	0
 11423  0045C4  6FB2               	movwf	(___fldiv@b+1)& (0+255),b
 11424  0045C6  0E00               	movlw	0
 11425  0045C8  6FB3               	movwf	(___fldiv@b+2)& (0+255),b
 11426  0045CA  0E00               	movlw	0
 11427  0045CC  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11428  0045CE                     l9170:
 11429                           
 11430                           ; BSR set to: 0
 11431  0045CE  8FB3               	bsf	(___fldiv@b+2)& (0+255),7,b
 11432  0045D0                     
 11433                           ; BSR set to: 0
 11434  0045D0  0E00               	movlw	0
 11435  0045D2  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11436  0045D4  EFF4  F022         	goto	l9176
 11437  0045D8                     l9174:
 11438                           
 11439                           ; BSR set to: 0
 11440  0045D8  0E00               	movlw	0
 11441  0045DA  6FB1               	movwf	___fldiv@b& (0+255),b
 11442  0045DC  0E00               	movlw	0
 11443  0045DE  6FB2               	movwf	(___fldiv@b+1)& (0+255),b
 11444  0045E0  0E00               	movlw	0
 11445  0045E2  6FB3               	movwf	(___fldiv@b+2)& (0+255),b
 11446  0045E4  0E00               	movlw	0
 11447  0045E6  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11448  0045E8                     l9176:
 11449                           
 11450                           ; BSR set to: 0
 11451  0045E8  51B8               	movf	(___fldiv@a+3)& (0+255),w,b
 11452  0045EA  0B80               	andlw	128
 11453  0045EC  1BC1               	xorwf	___fldiv@sign& (0+255),f,b
 11454  0045EE                     
 11455                           ; BSR set to: 0
 11456  0045EE  51B8               	movf	(___fldiv@a+3)& (0+255),w,b
 11457  0045F0  25B8               	addwf	(___fldiv@a+3)& (0+255),w,b
 11458  0045F2  6FC9               	movwf	___fldiv@aexp& (0+255),b
 11459  0045F4                     
 11460                           ; BSR set to: 0
 11461  0045F4  AFB7               	btfss	(___fldiv@a+2)& (0+255),7,b
 11462  0045F6  EFFF  F022         	goto	u12231
 11463  0045FA  EF01  F023         	goto	u12230
 11464  0045FE                     u12231:
 11465  0045FE  EF02  F023         	goto	l9184
 11466  004602                     u12230:
 11467  004602                     
 11468                           ; BSR set to: 0
 11469  004602  81C9               	bsf	___fldiv@aexp& (0+255),0,b
 11470  004604                     l9184:
 11471                           
 11472                           ; BSR set to: 0
 11473  004604  51C9               	movf	___fldiv@aexp& (0+255),w,b
 11474  004606  B4D8               	btfsc	status,2,c
 11475  004608  EF08  F023         	goto	u12241
 11476  00460C  EF0A  F023         	goto	u12240
 11477  004610                     u12241:
 11478  004610  EF1F  F023         	goto	l9194
 11479  004614                     u12240:
 11480  004614                     
 11481                           ; BSR set to: 0
 11482  004614  29C9               	incf	___fldiv@aexp& (0+255),w,b
 11483  004616  A4D8               	btfss	status,2,c
 11484  004618  EF10  F023         	goto	u12251
 11485  00461C  EF12  F023         	goto	u12250
 11486  004620                     u12251:
 11487  004620  EF1A  F023         	goto	l9190
 11488  004624                     u12250:
 11489  004624                     
 11490                           ; BSR set to: 0
 11491  004624  0E00               	movlw	0
 11492  004626  6FB5               	movwf	___fldiv@a& (0+255),b
 11493  004628  0E00               	movlw	0
 11494  00462A  6FB6               	movwf	(___fldiv@a+1)& (0+255),b
 11495  00462C  0E00               	movlw	0
 11496  00462E  6FB7               	movwf	(___fldiv@a+2)& (0+255),b
 11497  004630  0E00               	movlw	0
 11498  004632  6FB8               	movwf	(___fldiv@a+3)& (0+255),b
 11499  004634                     l9190:
 11500                           
 11501                           ; BSR set to: 0
 11502  004634  8FB7               	bsf	(___fldiv@a+2)& (0+255),7,b
 11503  004636                     
 11504                           ; BSR set to: 0
 11505  004636  0E00               	movlw	0
 11506  004638  6FB8               	movwf	(___fldiv@a+3)& (0+255),b
 11507  00463A  EF27  F023         	goto	l9196
 11508  00463E                     l9194:
 11509                           
 11510                           ; BSR set to: 0
 11511  00463E  0E00               	movlw	0
 11512  004640  6FB5               	movwf	___fldiv@a& (0+255),b
 11513  004642  0E00               	movlw	0
 11514  004644  6FB6               	movwf	(___fldiv@a+1)& (0+255),b
 11515  004646  0E00               	movlw	0
 11516  004648  6FB7               	movwf	(___fldiv@a+2)& (0+255),b
 11517  00464A  0E00               	movlw	0
 11518  00464C  6FB8               	movwf	(___fldiv@a+3)& (0+255),b
 11519  00464E                     l9196:
 11520                           
 11521                           ; BSR set to: 0
 11522  00464E  51B5               	movf	___fldiv@a& (0+255),w,b
 11523  004650  11B6               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11524  004652  11B7               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11525  004654  11B8               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11526  004656  A4D8               	btfss	status,2,c
 11527  004658  EF30  F023         	goto	u12261
 11528  00465C  EF32  F023         	goto	u12260
 11529  004660                     u12261:
 11530  004660  EF4A  F023         	goto	l9208
 11531  004664                     u12260:
 11532  004664                     
 11533                           ; BSR set to: 0
 11534  004664  0E00               	movlw	0
 11535  004666  6FB1               	movwf	___fldiv@b& (0+255),b
 11536  004668  0E00               	movlw	0
 11537  00466A  6FB2               	movwf	(___fldiv@b+1)& (0+255),b
 11538  00466C  0E00               	movlw	0
 11539  00466E  6FB3               	movwf	(___fldiv@b+2)& (0+255),b
 11540  004670  0E00               	movlw	0
 11541  004672  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11542  004674                     
 11543                           ; BSR set to: 0
 11544  004674  0E80               	movlw	128
 11545  004676  13B3               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11546  004678  0E7F               	movlw	127
 11547  00467A  13B4               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11548  00467C                     l9202:
 11549                           
 11550                           ; BSR set to: 0
 11551  00467C  51C1               	movf	___fldiv@sign& (0+255),w,b
 11552  00467E  13B4               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11553  004680                     
 11554                           ; BSR set to: 0
 11555  004680  C0B1  F0B1         	movff	___fldiv@b,?___fldiv
 11556  004684  C0B2  F0B2         	movff	___fldiv@b+1,?___fldiv+1
 11557  004688  C0B3  F0B3         	movff	___fldiv@b+2,?___fldiv+2
 11558  00468C  C0B4  F0B4         	movff	___fldiv@b+3,?___fldiv+3
 11559  004690  EF8D  F024         	goto	l1236
 11560  004694                     l9208:
 11561                           
 11562                           ; BSR set to: 0
 11563  004694  51C8               	movf	___fldiv@bexp& (0+255),w,b
 11564  004696  A4D8               	btfss	status,2,c
 11565  004698  EF50  F023         	goto	u12271
 11566  00469C  EF52  F023         	goto	u12270
 11567  0046A0                     u12271:
 11568  0046A0  EF5C  F023         	goto	l9216
 11569  0046A4                     u12270:
 11570  0046A4                     
 11571                           ; BSR set to: 0
 11572  0046A4  0E00               	movlw	0
 11573  0046A6  6FB1               	movwf	?___fldiv& (0+255),b
 11574  0046A8  0E00               	movlw	0
 11575  0046AA  6FB2               	movwf	(?___fldiv+1)& (0+255),b
 11576  0046AC  0E00               	movlw	0
 11577  0046AE  6FB3               	movwf	(?___fldiv+2)& (0+255),b
 11578  0046B0  0E00               	movlw	0
 11579  0046B2  6FB4               	movwf	(?___fldiv+3)& (0+255),b
 11580  0046B4  EF8D  F024         	goto	l1236
 11581  0046B8                     l9216:
 11582                           
 11583                           ; BSR set to: 0
 11584  0046B8  51C9               	movf	___fldiv@aexp& (0+255),w,b
 11585  0046BA  C0C8  F0B9         	movff	___fldiv@bexp,??___fldiv
 11586  0046BE  6BBA               	clrf	(??___fldiv+1)& (0+255),b
 11587  0046C0  5FB9               	subwf	??___fldiv& (0+255),f,b
 11588  0046C2  0E00               	movlw	0
 11589  0046C4  5BBA               	subwfb	(??___fldiv+1)& (0+255),f,b
 11590  0046C6  0E7F               	movlw	127
 11591  0046C8  25B9               	addwf	??___fldiv& (0+255),w,b
 11592  0046CA  6FC2               	movwf	___fldiv@new_exp& (0+255),b
 11593  0046CC  0E00               	movlw	0
 11594  0046CE  21BA               	addwfc	(??___fldiv+1)& (0+255),w,b
 11595  0046D0  6FC3               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11596  0046D2                     
 11597                           ; BSR set to: 0
 11598  0046D2  C0B1  F0BD         	movff	___fldiv@b,___fldiv@rem
 11599  0046D6  C0B2  F0BE         	movff	___fldiv@b+1,___fldiv@rem+1
 11600  0046DA  C0B3  F0BF         	movff	___fldiv@b+2,___fldiv@rem+2
 11601  0046DE  C0B4  F0C0         	movff	___fldiv@b+3,___fldiv@rem+3
 11602  0046E2                     
 11603                           ; BSR set to: 0
 11604  0046E2  0E00               	movlw	0
 11605  0046E4  6FB1               	movwf	___fldiv@b& (0+255),b
 11606  0046E6  0E00               	movlw	0
 11607  0046E8  6FB2               	movwf	(___fldiv@b+1)& (0+255),b
 11608  0046EA  0E00               	movlw	0
 11609  0046EC  6FB3               	movwf	(___fldiv@b+2)& (0+255),b
 11610  0046EE  0E00               	movlw	0
 11611  0046F0  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11612  0046F2                     
 11613                           ; BSR set to: 0
 11614  0046F2  0E00               	movlw	0
 11615  0046F4  6FC4               	movwf	___fldiv@grs& (0+255),b
 11616  0046F6  0E00               	movlw	0
 11617  0046F8  6FC5               	movwf	(___fldiv@grs+1)& (0+255),b
 11618  0046FA  0E00               	movlw	0
 11619  0046FC  6FC6               	movwf	(___fldiv@grs+2)& (0+255),b
 11620  0046FE  0E00               	movlw	0
 11621  004700  6FC7               	movwf	(___fldiv@grs+3)& (0+255),b
 11622  004702                     
 11623                           ; BSR set to: 0
 11624  004702  0E00               	movlw	0
 11625  004704  6FC9               	movwf	___fldiv@aexp& (0+255),b
 11626  004706  EFBD  F023         	goto	l1238
 11627  00470A                     l9226:
 11628                           
 11629                           ; BSR set to: 0
 11630  00470A  51C9               	movf	___fldiv@aexp& (0+255),w,b
 11631  00470C  B4D8               	btfsc	status,2,c
 11632  00470E  EF8B  F023         	goto	u12281
 11633  004712  EF8D  F023         	goto	u12280
 11634  004716                     u12281:
 11635  004716  EFA4  F023         	goto	l9234
 11636  00471A                     u12280:
 11637  00471A                     
 11638                           ; BSR set to: 0
 11639  00471A  90D8               	bcf	status,0,c
 11640  00471C  37BD               	rlcf	___fldiv@rem& (0+255),f,b
 11641  00471E  37BE               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11642  004720  37BF               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11643  004722  37C0               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11644  004724  90D8               	bcf	status,0,c
 11645  004726  37B1               	rlcf	___fldiv@b& (0+255),f,b
 11646  004728  37B2               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11647  00472A  37B3               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11648  00472C  37B4               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11649  00472E                     
 11650                           ; BSR set to: 0
 11651  00472E  AFC7               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11652  004730  EF9C  F023         	goto	u12291
 11653  004734  EF9E  F023         	goto	u12290
 11654  004738                     u12291:
 11655  004738  EF9F  F023         	goto	l1241
 11656  00473C                     u12290:
 11657  00473C                     
 11658                           ; BSR set to: 0
 11659  00473C  81B1               	bsf	___fldiv@b& (0+255),0,b
 11660  00473E                     l1241:
 11661                           
 11662                           ; BSR set to: 0
 11663  00473E  90D8               	bcf	status,0,c
 11664  004740  37C4               	rlcf	___fldiv@grs& (0+255),f,b
 11665  004742  37C5               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11666  004744  37C6               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11667  004746  37C7               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11668  004748                     l9234:
 11669                           
 11670                           ; BSR set to: 0
 11671  004748  51B5               	movf	___fldiv@a& (0+255),w,b
 11672  00474A  5DBD               	subwf	___fldiv@rem& (0+255),w,b
 11673  00474C  51B6               	movf	(___fldiv@a+1)& (0+255),w,b
 11674  00474E  59BE               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11675  004750  51B7               	movf	(___fldiv@a+2)& (0+255),w,b
 11676  004752  59BF               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11677  004754  51B8               	movf	(___fldiv@a+3)& (0+255),w,b
 11678  004756  59C0               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11679  004758  A0D8               	btfss	status,0,c
 11680  00475A  EFB1  F023         	goto	u12301
 11681  00475E  EFB3  F023         	goto	u12300
 11682  004762                     u12301:
 11683  004762  EFBC  F023         	goto	l9240
 11684  004766                     u12300:
 11685  004766                     
 11686                           ; BSR set to: 0
 11687  004766  8DC7               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11688  004768                     
 11689                           ; BSR set to: 0
 11690  004768  51B5               	movf	___fldiv@a& (0+255),w,b
 11691  00476A  5FBD               	subwf	___fldiv@rem& (0+255),f,b
 11692  00476C  51B6               	movf	(___fldiv@a+1)& (0+255),w,b
 11693  00476E  5BBE               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11694  004770  51B7               	movf	(___fldiv@a+2)& (0+255),w,b
 11695  004772  5BBF               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11696  004774  51B8               	movf	(___fldiv@a+3)& (0+255),w,b
 11697  004776  5BC0               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11698  004778                     l9240:
 11699                           
 11700                           ; BSR set to: 0
 11701  004778  2BC9               	incf	___fldiv@aexp& (0+255),f,b
 11702  00477A                     l1238:
 11703                           
 11704                           ; BSR set to: 0
 11705  00477A  0E19               	movlw	25
 11706  00477C  65C9               	cpfsgt	___fldiv@aexp& (0+255),b
 11707  00477E  EFC3  F023         	goto	u12311
 11708  004782  EFC5  F023         	goto	u12310
 11709  004786                     u12311:
 11710  004786  EF85  F023         	goto	l9226
 11711  00478A                     u12310:
 11712  00478A                     
 11713                           ; BSR set to: 0
 11714  00478A  51BD               	movf	___fldiv@rem& (0+255),w,b
 11715  00478C  11BE               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11716  00478E  11BF               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11717  004790  11C0               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11718  004792  B4D8               	btfsc	status,2,c
 11719  004794  EFCE  F023         	goto	u12321
 11720  004798  EFD0  F023         	goto	u12320
 11721  00479C                     u12321:
 11722  00479C  EFE8  F023         	goto	l9252
 11723  0047A0                     u12320:
 11724  0047A0                     
 11725                           ; BSR set to: 0
 11726  0047A0  81C4               	bsf	___fldiv@grs& (0+255),0,b
 11727  0047A2  EFE8  F023         	goto	l9252
 11728  0047A6                     l9246:
 11729                           
 11730                           ; BSR set to: 0
 11731  0047A6  90D8               	bcf	status,0,c
 11732  0047A8  37B1               	rlcf	___fldiv@b& (0+255),f,b
 11733  0047AA  37B2               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11734  0047AC  37B3               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11735  0047AE  37B4               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11736  0047B0                     
 11737                           ; BSR set to: 0
 11738  0047B0  AFC7               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11739  0047B2  EFDD  F023         	goto	u12331
 11740  0047B6  EFDF  F023         	goto	u12330
 11741  0047BA                     u12331:
 11742  0047BA  EFE0  F023         	goto	l1247
 11743  0047BE                     u12330:
 11744  0047BE                     
 11745                           ; BSR set to: 0
 11746  0047BE  81B1               	bsf	___fldiv@b& (0+255),0,b
 11747  0047C0                     l1247:
 11748                           
 11749                           ; BSR set to: 0
 11750  0047C0  90D8               	bcf	status,0,c
 11751  0047C2  37C4               	rlcf	___fldiv@grs& (0+255),f,b
 11752  0047C4  37C5               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11753  0047C6  37C6               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11754  0047C8  37C7               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11755  0047CA  07C2               	decf	___fldiv@new_exp& (0+255),f,b
 11756  0047CC  A0D8               	btfss	status,0,c
 11757  0047CE  07C3               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11758  0047D0                     l9252:
 11759                           
 11760                           ; BSR set to: 0
 11761  0047D0  AFB3               	btfss	(___fldiv@b+2)& (0+255),7,b
 11762  0047D2  EFED  F023         	goto	u12341
 11763  0047D6  EFEF  F023         	goto	u12340
 11764  0047DA                     u12341:
 11765  0047DA  EFD3  F023         	goto	l9246
 11766  0047DE                     u12340:
 11767  0047DE                     
 11768                           ; BSR set to: 0
 11769  0047DE  0E00               	movlw	0
 11770  0047E0  6FC9               	movwf	___fldiv@aexp& (0+255),b
 11771  0047E2                     
 11772                           ; BSR set to: 0
 11773  0047E2  AFC7               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11774  0047E4  EFF6  F023         	goto	u12351
 11775  0047E8  EFF8  F023         	goto	u12350
 11776  0047EC                     u12351:
 11777  0047EC  EF1C  F024         	goto	l1249
 11778  0047F0                     u12350:
 11779  0047F0                     
 11780                           ; BSR set to: 0
 11781  0047F0  0EFF               	movlw	255
 11782  0047F2  15C4               	andwf	___fldiv@grs& (0+255),w,b
 11783  0047F4  6FB9               	movwf	??___fldiv& (0+255),b
 11784  0047F6  0EFF               	movlw	255
 11785  0047F8  15C5               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11786  0047FA  6FBA               	movwf	(??___fldiv+1)& (0+255),b
 11787  0047FC  0EFF               	movlw	255
 11788  0047FE  15C6               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11789  004800  6FBB               	movwf	(??___fldiv+2)& (0+255),b
 11790  004802  0E7F               	movlw	127
 11791  004804  15C7               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11792  004806  6FBC               	movwf	(??___fldiv+3)& (0+255),b
 11793  004808  51B9               	movf	??___fldiv& (0+255),w,b
 11794  00480A  11BA               	iorwf	(??___fldiv+1)& (0+255),w,b
 11795  00480C  11BB               	iorwf	(??___fldiv+2)& (0+255),w,b
 11796  00480E  11BC               	iorwf	(??___fldiv+3)& (0+255),w,b
 11797  004810  B4D8               	btfsc	status,2,c
 11798  004812  EF0D  F024         	goto	u12361
 11799  004816  EF0F  F024         	goto	u12360
 11800  00481A                     u12361:
 11801  00481A  EF13  F024         	goto	l1250
 11802  00481E                     u12360:
 11803  00481E                     l9260:
 11804                           
 11805                           ; BSR set to: 0
 11806  00481E  0E01               	movlw	1
 11807  004820  6FC9               	movwf	___fldiv@aexp& (0+255),b
 11808  004822  EF1C  F024         	goto	l1249
 11809  004826                     l1250:
 11810                           
 11811                           ; BSR set to: 0
 11812  004826  A1B1               	btfss	___fldiv@b& (0+255),0,b
 11813  004828  EF18  F024         	goto	u12371
 11814  00482C  EF1A  F024         	goto	u12370
 11815  004830                     u12371:
 11816  004830  EF1C  F024         	goto	l1249
 11817  004834                     u12370:
 11818  004834  EF0F  F024         	goto	l9260
 11819  004838                     l1249:
 11820                           
 11821                           ; BSR set to: 0
 11822  004838  51C9               	movf	___fldiv@aexp& (0+255),w,b
 11823  00483A  B4D8               	btfsc	status,2,c
 11824  00483C  EF22  F024         	goto	u12381
 11825  004840  EF24  F024         	goto	u12380
 11826  004844                     u12381:
 11827  004844  EF48  F024         	goto	l9272
 11828  004848                     u12380:
 11829  004848                     
 11830                           ; BSR set to: 0
 11831  004848  0E01               	movlw	1
 11832  00484A  27B1               	addwf	___fldiv@b& (0+255),f,b
 11833  00484C  0E00               	movlw	0
 11834  00484E  23B2               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11835  004850  23B3               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11836  004852  23B4               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11837  004854                     
 11838                           ; BSR set to: 0
 11839  004854  A1B4               	btfss	(___fldiv@b+3)& (0+255),0,b
 11840  004856  EF2F  F024         	goto	u12391
 11841  00485A  EF31  F024         	goto	u12390
 11842  00485E                     u12391:
 11843  00485E  EF48  F024         	goto	l9272
 11844  004862                     u12390:
 11845  004862                     
 11846                           ; BSR set to: 0
 11847  004862  C0B1  F0B9         	movff	___fldiv@b,??___fldiv
 11848  004866  C0B2  F0BA         	movff	___fldiv@b+1,??___fldiv+1
 11849  00486A  C0B3  F0BB         	movff	___fldiv@b+2,??___fldiv+2
 11850  00486E  C0B4  F0BC         	movff	___fldiv@b+3,??___fldiv+3
 11851  004872  35BC               	rlcf	(??___fldiv+3)& (0+255),w,b
 11852  004874  33BC               	rrcf	(??___fldiv+3)& (0+255),f,b
 11853  004876  33BB               	rrcf	(??___fldiv+2)& (0+255),f,b
 11854  004878  33BA               	rrcf	(??___fldiv+1)& (0+255),f,b
 11855  00487A  33B9               	rrcf	??___fldiv& (0+255),f,b
 11856  00487C  C0B9  F0B1         	movff	??___fldiv,___fldiv@b
 11857  004880  C0BA  F0B2         	movff	??___fldiv+1,___fldiv@b+1
 11858  004884  C0BB  F0B3         	movff	??___fldiv+2,___fldiv@b+2
 11859  004888  C0BC  F0B4         	movff	??___fldiv+3,___fldiv@b+3
 11860  00488C                     
 11861                           ; BSR set to: 0
 11862  00488C  4BC2               	infsnz	___fldiv@new_exp& (0+255),f,b
 11863  00488E  2BC3               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11864  004890                     l9272:
 11865                           
 11866                           ; BSR set to: 0
 11867  004890  BFC3               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11868  004892  EF53  F024         	goto	u12401
 11869  004896  51C3               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11870  004898  E108               	bnz	u12400
 11871  00489A  29C2               	incf	___fldiv@new_exp& (0+255),w,b
 11872  00489C  A0D8               	btfss	status,0,c
 11873  00489E  EF53  F024         	goto	u12401
 11874  0048A2  EF55  F024         	goto	u12400
 11875  0048A6                     u12401:
 11876  0048A6  EF60  F024         	goto	l9276
 11877  0048AA                     u12400:
 11878  0048AA                     
 11879                           ; BSR set to: 0
 11880  0048AA  0E00               	movlw	0
 11881  0048AC  6FC3               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11882  0048AE  69C2               	setf	___fldiv@new_exp& (0+255),b
 11883  0048B0  0E00               	movlw	0
 11884  0048B2  6FB1               	movwf	___fldiv@b& (0+255),b
 11885  0048B4  0E00               	movlw	0
 11886  0048B6  6FB2               	movwf	(___fldiv@b+1)& (0+255),b
 11887  0048B8  0E00               	movlw	0
 11888  0048BA  6FB3               	movwf	(___fldiv@b+2)& (0+255),b
 11889  0048BC  0E00               	movlw	0
 11890  0048BE  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11891  0048C0                     l9276:
 11892                           
 11893                           ; BSR set to: 0
 11894  0048C0  BFC3               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11895  0048C2  EF6D  F024         	goto	u12410
 11896  0048C6  51C3               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11897  0048C8  E106               	bnz	u12411
 11898  0048CA  05C2               	decf	___fldiv@new_exp& (0+255),w,b
 11899  0048CC  B0D8               	btfsc	status,0,c
 11900  0048CE  EF6B  F024         	goto	u12411
 11901  0048D2  EF6D  F024         	goto	u12410
 11902  0048D6                     u12411:
 11903  0048D6  EF7B  F024         	goto	l9280
 11904  0048DA                     u12410:
 11905  0048DA                     
 11906                           ; BSR set to: 0
 11907  0048DA  0E00               	movlw	0
 11908  0048DC  6FC3               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11909  0048DE  0E00               	movlw	0
 11910  0048E0  6FC2               	movwf	___fldiv@new_exp& (0+255),b
 11911  0048E2  0E00               	movlw	0
 11912  0048E4  6FB1               	movwf	___fldiv@b& (0+255),b
 11913  0048E6  0E00               	movlw	0
 11914  0048E8  6FB2               	movwf	(___fldiv@b+1)& (0+255),b
 11915  0048EA  0E00               	movlw	0
 11916  0048EC  6FB3               	movwf	(___fldiv@b+2)& (0+255),b
 11917  0048EE  0E00               	movlw	0
 11918  0048F0  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11919  0048F2  0E00               	movlw	0
 11920  0048F4  6FC1               	movwf	___fldiv@sign& (0+255),b
 11921  0048F6                     l9280:
 11922                           
 11923                           ; BSR set to: 0
 11924  0048F6  C0C2  F0C8         	movff	___fldiv@new_exp,___fldiv@bexp
 11925  0048FA                     
 11926                           ; BSR set to: 0
 11927  0048FA  A1C8               	btfss	___fldiv@bexp& (0+255),0,b
 11928  0048FC  EF82  F024         	goto	u12421
 11929  004900  EF84  F024         	goto	u12420
 11930  004904                     u12421:
 11931  004904  EF87  F024         	goto	l9286
 11932  004908                     u12420:
 11933  004908                     
 11934                           ; BSR set to: 0
 11935  004908  8FB3               	bsf	(___fldiv@b+2)& (0+255),7,b
 11936  00490A  EF88  F024         	goto	l9288
 11937  00490E                     l9286:
 11938                           
 11939                           ; BSR set to: 0
 11940  00490E  9FB3               	bcf	(___fldiv@b+2)& (0+255),7,b
 11941  004910                     l9288:
 11942                           
 11943                           ; BSR set to: 0
 11944  004910  90D8               	bcf	status,0,c
 11945  004912  31C8               	rrcf	___fldiv@bexp& (0+255),w,b
 11946  004914  6FB4               	movwf	(___fldiv@b+3)& (0+255),b
 11947  004916  EF3E  F023         	goto	l9202
 11948  00491A                     l1236:
 11949                           
 11950                           ; BSR set to: 0
 11951  00491A  0012               	return		;funcret
 11952  00491C                     __end_of___fldiv:
 11953                           	callstack 0
 11954                           
 11955 ;; *************** function _Lcd_Out *****************
 11956 ;; Defined at:
 11957 ;;		line 96 in file "flexlcd.h"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  y               1    wreg     unsigned char 
 11960 ;;  x               1   13[BANK0 ] unsigned char 
 11961 ;;  buffer          2   14[BANK0 ] PTR const unsigned char 
 11962 ;;		 -> STR_5(9), STR_4(9), STR_3(11), STR_2(7), 
 11963 ;;		 -> txt3e(17), txt2e(17), txt0(17), txt43(17), 
 11964 ;;		 -> txt33(12), txt23(12), txt13(17), txt42(17), 
 11965 ;;		 -> txt32(13), txt22(13), txt12(17), txt41(17), 
 11966 ;;		 -> txt31(9), txt21(7), txt11(17), str(4), 
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;  y               1   16[BANK0 ] unsigned char 
 11969 ;;  data            1   17[BANK0 ] unsigned char 
 11970 ;; Return value:  Size  Location     Type
 11971 ;;                  1    wreg      void 
 11972 ;; Registers used:
 11973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11974 ;; Tracked objects:
 11975 ;;		On entry : 0/0
 11976 ;;		On exit  : 0/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11979 ;;      Params:         0       3       0       0       0       0       0
 11980 ;;      Locals:         0       2       0       0       0       0       0
 11981 ;;      Temps:          0       0       0       0       0       0       0
 11982 ;;      Totals:         0       5       0       0       0       0       0
 11983 ;;Total ram usage:        5 bytes
 11984 ;; Hardware stack levels used:    1
 11985 ;; Hardware stack levels required when called:    6
 11986 ;; This function calls:
 11987 ;;		_Lcd_Chr_CP
 11988 ;;		_Lcd_Cmd
 11989 ;; This function is called by:
 11990 ;;		_maketela
 11991 ;;		_atualizatela
 11992 ;; This function uses a non-reentrant model
 11993 ;;
 11994                           
 11995                           	psect	text33
 11996  007016                     __ptext33:
 11997                           	callstack 0
 11998  007016                     _Lcd_Out:
 11999                           	callstack 23
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;incstack = 0
 12003                           ;Lcd_Out@y stored from wreg
 12004  007016  0100               	movlb	0	; () banked
 12005  007018  6F90               	movwf	Lcd_Out@y& (0+255),b
 12006  00701A                     
 12007                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
 12008  00701A  EF23  F038         	goto	l9482
 12009  00701E                     l9472:
 12010                           
 12011                           ; BSR set to: 0
 12012  00701E  518D               	movf	Lcd_Out@x& (0+255),w,b
 12013  007020  0F80               	addlw	128
 12014  007022  6F91               	movwf	Lcd_Out@data& (0+255),b
 12015  007024  EF37  F038         	goto	l9484
 12016  007028                     l9474:
 12017                           
 12018                           ; BSR set to: 0
 12019  007028  518D               	movf	Lcd_Out@x& (0+255),w,b
 12020  00702A  0FC0               	addlw	192
 12021  00702C  6F91               	movwf	Lcd_Out@data& (0+255),b
 12022  00702E  EF37  F038         	goto	l9484
 12023  007032                     l9476:
 12024                           
 12025                           ; BSR set to: 0
 12026  007032  518D               	movf	Lcd_Out@x& (0+255),w,b
 12027  007034  0F90               	addlw	144
 12028  007036  6F91               	movwf	Lcd_Out@data& (0+255),b
 12029  007038  EF37  F038         	goto	l9484
 12030  00703C                     l9478:
 12031                           
 12032                           ; BSR set to: 0
 12033  00703C  518D               	movf	Lcd_Out@x& (0+255),w,b
 12034  00703E  0FD0               	addlw	208
 12035  007040  6F91               	movwf	Lcd_Out@data& (0+255),b
 12036  007042  EF37  F038         	goto	l9484
 12037  007046                     l9482:
 12038  007046  0100               	movlb	0	; () banked
 12039  007048  5190               	movf	Lcd_Out@y& (0+255),w,b
 12040                           
 12041                           ; Switch size 1, requested type "simple"
 12042                           ; Number of cases is 4, Range of values is 1 to 4
 12043                           ; switch strategies available:
 12044                           ; Name         Instructions Cycles
 12045                           ; simple_byte           13     7 (average)
 12046                           ;	Chosen strategy is simple_byte
 12047  00704A  0A01               	xorlw	1	; case 1
 12048  00704C  B4D8               	btfsc	status,2,c
 12049  00704E  EF0F  F038         	goto	l9472
 12050  007052  0A03               	xorlw	3	; case 2
 12051  007054  B4D8               	btfsc	status,2,c
 12052  007056  EF14  F038         	goto	l9474
 12053  00705A  0A01               	xorlw	1	; case 3
 12054  00705C  B4D8               	btfsc	status,2,c
 12055  00705E  EF19  F038         	goto	l9476
 12056  007062  0A07               	xorlw	7	; case 4
 12057  007064  B4D8               	btfsc	status,2,c
 12058  007066  EF1E  F038         	goto	l9478
 12059  00706A  EF37  F038         	goto	l9484
 12060  00706E                     l9484:
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;flexlcd.h: 107: Lcd_Cmd(data);
 12064  00706E  5191               	movf	Lcd_Out@data& (0+255),w,b
 12065  007070  EC54  F031         	call	_Lcd_Cmd
 12066                           
 12067                           ;flexlcd.h: 108: while(*buffer)
 12068  007074  EF51  F038         	goto	l9490
 12069  007078                     l9486:
 12070                           
 12071                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
 12072  007078  C08E  FFF6         	movff	Lcd_Out@buffer,tblptrl
 12073  00707C  C08F  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 12074  007080  6AF8               	clrf	tblptru,c
 12075  007082  0E05               	movlw	(high __ramtop+-1)
 12076  007084  64F7               	cpfsgt	tblptrh,c
 12077  007086  D003               	bra	u12747
 12078  007088  0008               	tblrd		*
 12079  00708A  50F5               	movf	tablat,w,c
 12080  00708C  D005               	bra	u12740
 12081  00708E                     u12747:
 12082  00708E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12083  007092  CFF7 FFEA          	movff	tblptrh,fsr0h
 12084  007096  50EF               	movf	indf0,w,c
 12085  007098                     u12740:
 12086  007098  ECB5  F030         	call	_Lcd_Chr_CP
 12087  00709C                     
 12088                           ;flexlcd.h: 111: buffer++;
 12089  00709C  0100               	movlb	0	; () banked
 12090  00709E  4B8E               	infsnz	Lcd_Out@buffer& (0+255),f,b
 12091  0070A0  2B8F               	incf	(Lcd_Out@buffer+1)& (0+255),f,b
 12092  0070A2                     l9490:
 12093  0070A2  C08E  FFF6         	movff	Lcd_Out@buffer,tblptrl
 12094  0070A6  C08F  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 12095  0070AA  6AF8               	clrf	tblptru,c
 12096  0070AC  0E05               	movlw	(high __ramtop+-1)
 12097  0070AE  64F7               	cpfsgt	tblptrh,c
 12098  0070B0  D003               	bra	u12757
 12099  0070B2  0008               	tblrd		*
 12100  0070B4  50F5               	movf	tablat,w,c
 12101  0070B6  D005               	bra	u12750
 12102  0070B8                     u12757:
 12103  0070B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 12104  0070BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 12105  0070C0  50EF               	movf	indf0,w,c
 12106  0070C2                     u12750:
 12107  0070C2  0900               	iorlw	0
 12108  0070C4  A4D8               	btfss	status,2,c
 12109  0070C6  EF67  F038         	goto	u12761
 12110  0070CA  EF69  F038         	goto	u12760
 12111  0070CE                     u12761:
 12112  0070CE  EF3C  F038         	goto	l9486
 12113  0070D2                     u12760:
 12114  0070D2  0012               	return		;funcret
 12115  0070D4                     __end_of_Lcd_Out:
 12116                           	callstack 0
 12117                           
 12118 ;; *************** function _Lcd_Chr_CP *****************
 12119 ;; Defined at:
 12120 ;;		line 138 in file "flexlcd.h"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;  data            1    wreg     unsigned char 
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;  data            1   12[BANK0 ] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      void 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12134 ;;      Params:         0       0       0       0       0       0       0
 12135 ;;      Locals:         0       1       0       0       0       0       0
 12136 ;;      Temps:          0       2       0       0       0       0       0
 12137 ;;      Totals:         0       3       0       0       0       0       0
 12138 ;;Total ram usage:        3 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    5
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_Lcd_Out
 12145 ;;		_Lcd_Out2
 12146 ;; This function uses a non-reentrant model
 12147 ;;
 12148                           
 12149                           	psect	text34
 12150  00616A                     __ptext34:
 12151                           	callstack 0
 12152  00616A                     _Lcd_Chr_CP:
 12153                           	callstack 23
 12154                           
 12155                           ;incstack = 0
 12156                           ;Lcd_Chr_CP@data stored from wreg
 12157  00616A  0100               	movlb	0	; () banked
 12158  00616C  6F8C               	movwf	Lcd_Chr_CP@data& (0+255),b
 12159  00616E                     
 12160                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
 12161  00616E  9284               	bcf	132,1,c	;volatile
 12162  006170  8484               	bsf	132,2,c	;volatile
 12163  006172                     
 12164                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
 12165  006172  0100               	movlb	0	; () banked
 12166  006174  6B8A               	clrf	??_Lcd_Chr_CP& (0+255),b
 12167  006176  AF8C               	btfss	Lcd_Chr_CP@data& (0+255),7,b
 12168  006178  D001               	bra	u11895
 12169  00617A  2B8A               	incf	??_Lcd_Chr_CP& (0+255),f,b
 12170  00617C                     u11895:
 12171  00617C  0E01               	movlw	1
 12172  00617E  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12173  006180  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12174  006182  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12175  006184  5083               	movf	131,w,c	;volatile
 12176  006186  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12177  006188  0B7F               	andlw	-129
 12178  00618A  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12179  00618C  6E83               	movwf	131,c	;volatile
 12180  00618E  C08C  F08A         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12181  006192  0E06               	movlw	6
 12182  006194  6F8B               	movwf	(??_Lcd_Chr_CP+1)& (0+255),b
 12183  006196                     u11905:
 12184  006196  90D8               	bcf	status,0,c
 12185  006198  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12186  00619A  2F8B               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,b
 12187  00619C  EFCB  F030         	goto	u11905
 12188  0061A0  0E01               	movlw	1
 12189  0061A2  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12190  0061A4  3B8A               	swapf	??_Lcd_Chr_CP& (0+255),f,b
 12191  0061A6  478A               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
 12192  0061A8  478A               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
 12193  0061AA  5083               	movf	131,w,c	;volatile
 12194  0061AC  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12195  0061AE  0BBF               	andlw	-65
 12196  0061B0  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12197  0061B2  6E83               	movwf	131,c	;volatile
 12198                           
 12199                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
 12200  0061B4  C08C  F08A         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12201  0061B8  0E05               	movlw	5
 12202  0061BA  6F8B               	movwf	(??_Lcd_Chr_CP+1)& (0+255),b
 12203  0061BC                     u11915:
 12204  0061BC  90D8               	bcf	status,0,c
 12205  0061BE  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12206  0061C0  2F8B               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,b
 12207  0061C2  EFDE  F030         	goto	u11915
 12208  0061C6  0E01               	movlw	1
 12209  0061C8  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12210  0061CA  3B8A               	swapf	??_Lcd_Chr_CP& (0+255),f,b
 12211  0061CC  478A               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
 12212  0061CE  5083               	movf	131,w,c	;volatile
 12213  0061D0  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12214  0061D2  0BDF               	andlw	-33
 12215  0061D4  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12216  0061D6  6E83               	movwf	131,c	;volatile
 12217  0061D8  C08C  F08A         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12218  0061DC  3B8A               	swapf	??_Lcd_Chr_CP& (0+255),f,b
 12219  0061DE  0E0F               	movlw	15
 12220  0061E0  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12221  0061E2  0E01               	movlw	1
 12222  0061E4  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12223  0061E6  3B8A               	swapf	??_Lcd_Chr_CP& (0+255),f,b
 12224  0061E8  5083               	movf	131,w,c	;volatile
 12225  0061EA  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12226  0061EC  0BEF               	andlw	-17
 12227  0061EE  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12228  0061F0  6E83               	movwf	131,c	;volatile
 12229  0061F2                     
 12230                           ; BSR set to: 0
 12231                           ;flexlcd.h: 142: _delay(10);
 12232  0061F2  0E03               	movlw	3
 12233  0061F4                     u14197:
 12234  0061F4  2EE8               	decfsz	wreg,f,c
 12235  0061F6  D7FE               	bra	u14197
 12236  0061F8  F000               	nop	
 12237  0061FA                     
 12238                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 12239  0061FA  8284               	bsf	132,1,c	;volatile
 12240  0061FC  0E03               	movlw	3
 12241  0061FE                     u14207:
 12242  0061FE  2EE8               	decfsz	wreg,f,c
 12243  006200  D7FE               	bra	u14207
 12244  006202  F000               	nop	
 12245  006204  9284               	bcf	132,1,c	;volatile
 12246                           
 12247                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
 12248  006206  C08C  F08A         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12249  00620A  0100               	movlb	0	; () banked
 12250  00620C  90D8               	bcf	status,0,c
 12251  00620E  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12252  006210  90D8               	bcf	status,0,c
 12253  006212  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12254  006214  90D8               	bcf	status,0,c
 12255  006216  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12256  006218  0E01               	movlw	1
 12257  00621A  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12258  00621C  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12259  00621E  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12260  006220  5083               	movf	131,w,c	;volatile
 12261  006222  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12262  006224  0B7F               	andlw	-129
 12263  006226  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12264  006228  6E83               	movwf	131,c	;volatile
 12265  00622A  C08C  F08A         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12266  00622E  90D8               	bcf	status,0,c
 12267  006230  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12268  006232  90D8               	bcf	status,0,c
 12269  006234  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12270  006236  0E01               	movlw	1
 12271  006238  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12272  00623A  3B8A               	swapf	??_Lcd_Chr_CP& (0+255),f,b
 12273  00623C  478A               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
 12274  00623E  478A               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
 12275  006240  5083               	movf	131,w,c	;volatile
 12276  006242  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12277  006244  0BBF               	andlw	-65
 12278  006246  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12279  006248  6E83               	movwf	131,c	;volatile
 12280                           
 12281                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
 12282  00624A  C08C  F08A         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12283  00624E  90D8               	bcf	status,0,c
 12284  006250  338A               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
 12285  006252  0E01               	movlw	1
 12286  006254  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12287  006256  3B8A               	swapf	??_Lcd_Chr_CP& (0+255),f,b
 12288  006258  478A               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
 12289  00625A  5083               	movf	131,w,c	;volatile
 12290  00625C  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12291  00625E  0BDF               	andlw	-33
 12292  006260  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12293  006262  6E83               	movwf	131,c	;volatile
 12294  006264  C08C  F08A         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12295  006268  0E01               	movlw	1
 12296  00626A  178A               	andwf	??_Lcd_Chr_CP& (0+255),f,b
 12297  00626C  3B8A               	swapf	??_Lcd_Chr_CP& (0+255),f,b
 12298  00626E  5083               	movf	131,w,c	;volatile
 12299  006270  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12300  006272  0BEF               	andlw	-17
 12301  006274  198A               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
 12302  006276  6E83               	movwf	131,c	;volatile
 12303  006278                     
 12304                           ; BSR set to: 0
 12305                           ;flexlcd.h: 146: _delay(10);
 12306  006278  0E03               	movlw	3
 12307  00627A                     u14217:
 12308  00627A  2EE8               	decfsz	wreg,f,c
 12309  00627C  D7FE               	bra	u14217
 12310  00627E  F000               	nop	
 12311  006280                     
 12312                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 12313  006280  8284               	bsf	132,1,c	;volatile
 12314  006282  0E03               	movlw	3
 12315  006284                     u14227:
 12316  006284  2EE8               	decfsz	wreg,f,c
 12317  006286  D7FE               	bra	u14227
 12318  006288  F000               	nop	
 12319  00628A  9284               	bcf	132,1,c	;volatile
 12320  00628C                     
 12321                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
 12322  00628C  0E03               	movlw	3
 12323  00628E                     u14237:
 12324  00628E  2EE8               	decfsz	wreg,f,c
 12325  006290  D7FE               	bra	u14237
 12326  006292  F000               	nop	
 12327  006294  0E0F               	movlw	15
 12328  006296  0100               	movlb	0	; () banked
 12329  006298  6F8A               	movwf	??_Lcd_Chr_CP& (0+255),b
 12330  00629A  0E47               	movlw	71
 12331  00629C                     u14247:
 12332  00629C  2EE8               	decfsz	wreg,f,c
 12333  00629E  D7FE               	bra	u14247
 12334  0062A0  2F8A               	decfsz	??_Lcd_Chr_CP& (0+255),f,b
 12335  0062A2  D7FC               	bra	u14247
 12336  0062A4  D000               	nop2	
 12337  0062A6  0012               	return		;funcret
 12338  0062A8                     __end_of_Lcd_Chr_CP:
 12339                           	callstack 0
 12340                           
 12341 ;; *************** function _adc_init *****************
 12342 ;; Defined at:
 12343 ;;		line 30 in file "adc.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;		None
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  1    wreg      void 
 12350 ;; Registers used:
 12351 ;;		wreg, status,2
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12357 ;;      Params:         0       0       0       0       0       0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0
 12359 ;;      Temps:          0       0       0       0       0       0       0
 12360 ;;      Totals:         0       0       0       0       0       0       0
 12361 ;;Total ram usage:        0 bytes
 12362 ;; Hardware stack levels used:    1
 12363 ;; Hardware stack levels required when called:    5
 12364 ;; This function calls:
 12365 ;;		Nothing
 12366 ;; This function is called by:
 12367 ;;		_main
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text35
 12372  00011A                     __ptext35:
 12373                           	callstack 0
 12374  00011A                     _adc_init:
 12375                           	callstack 25
 12376  00011A                     
 12377                           ;adc.c: 36: ADCON0=0x01;
 12378  00011A  0E01               	movlw	1
 12379  00011C  6EC2               	movwf	194,c	;volatile
 12380                           
 12381                           ;adc.c: 37: ADCON1=0x0B;
 12382  00011E  0E0B               	movlw	11
 12383  000120  6EC1               	movwf	193,c	;volatile
 12384                           
 12385                           ;adc.c: 38: ADCON2=0x01;
 12386  000122  0E01               	movlw	1
 12387  000124  6EC0               	movwf	192,c	;volatile
 12388  000126  0012               	return		;funcret
 12389  000128                     __end_of_adc_init:
 12390                           	callstack 0
 12391                           
 12392 ;; *************** function _PWM1_Start *****************
 12393 ;; Defined at:
 12394 ;;		line 71 in file "pwm.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;		None
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;		None
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      void 
 12401 ;; Registers used:
 12402 ;;		wreg, status,2
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12408 ;;      Params:         0       0       0       0       0       0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0
 12411 ;;      Totals:         0       0       0       0       0       0       0
 12412 ;;Total ram usage:        0 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:    5
 12415 ;; This function calls:
 12416 ;;		Nothing
 12417 ;; This function is called by:
 12418 ;;		_main
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text36
 12423  00007A                     __ptext36:
 12424                           	callstack 0
 12425  00007A                     _PWM1_Start:
 12426                           	callstack 25
 12427  00007A                     
 12428                           ;pwm.c: 74: TRISCbits.TRISC2=0;
 12429  00007A  9494               	bcf	148,2,c	;volatile
 12430                           
 12431                           ;pwm.c: 75: TRISDbits.TRISD5=0;
 12432  00007C  9A95               	bcf	149,5,c	;volatile
 12433  00007E                     
 12434                           ;pwm.c: 77: CCP1CON=0x0F;
 12435  00007E  0E0F               	movlw	15
 12436  000080  6EBD               	movwf	189,c	;volatile
 12437  000082                     
 12438                           ;pwm.c: 79: T2CONbits.TMR2ON=1;
 12439  000082  84CA               	bsf	202,2,c	;volatile
 12440  000084                     
 12441                           ;pwm.c: 87: PIR1bits.TMR2IF=0;
 12442  000084  929E               	bcf	158,1,c	;volatile
 12443  000086                     l57:
 12444  000086  A29E               	btfss	158,1,c	;volatile
 12445  000088  EF48  F000         	goto	u13411
 12446  00008C  EF4A  F000         	goto	u13410
 12447  000090                     u13411:
 12448  000090  EF43  F000         	goto	l57
 12449  000094                     u13410:
 12450  000094                     
 12451                           ;pwm.c: 89: PIR1bits.TMR2IF=0;
 12452  000094  929E               	bcf	158,1,c	;volatile
 12453  000096                     l60:
 12454  000096  A29E               	btfss	158,1,c	;volatile
 12455  000098  EF50  F000         	goto	u13421
 12456  00009C  EF52  F000         	goto	u13420
 12457  0000A0                     u13421:
 12458  0000A0  EF4B  F000         	goto	l60
 12459  0000A4                     u13420:
 12460  0000A4  0012               	return		;funcret
 12461  0000A6                     __end_of_PWM1_Start:
 12462                           	callstack 0
 12463                           
 12464 ;; *************** function _PWM1_Init *****************
 12465 ;; Defined at:
 12466 ;;		line 30 in file "pwm.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  f               2   24[BANK0 ] unsigned int 
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;  temp            2   30[BANK0 ] unsigned int 
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  1    wreg      void 
 12473 ;; Registers used:
 12474 ;;		wreg, status,2, status,0, cstack
 12475 ;; Tracked objects:
 12476 ;;		On entry : 0/0
 12477 ;;		On exit  : 0/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12480 ;;      Params:         0       2       0       0       0       0       0
 12481 ;;      Locals:         0       2       0       0       0       0       0
 12482 ;;      Temps:          0       4       0       0       0       0       0
 12483 ;;      Totals:         0       8       0       0       0       0       0
 12484 ;;Total ram usage:        8 bytes
 12485 ;; Hardware stack levels used:    1
 12486 ;; Hardware stack levels required when called:    6
 12487 ;; This function calls:
 12488 ;;		___aldiv
 12489 ;; This function is called by:
 12490 ;;		_main
 12491 ;; This function uses a non-reentrant model
 12492 ;;
 12493                           
 12494                           	psect	text37
 12495  006D96                     __ptext37:
 12496                           	callstack 0
 12497  006D96                     _PWM1_Init:
 12498                           	callstack 24
 12499  006D96                     
 12500                           ;pwm.c: 32: unsigned int temp;;pwm.c: 37: CCP1CON=0x00;
 12501  006D96  0E00               	movlw	0
 12502  006D98  6EBD               	movwf	189,c	;volatile
 12503  006D9A                     
 12504                           ;pwm.c: 38: TRISCbits.TRISC2=1;
 12505  006D9A  8494               	bsf	148,2,c	;volatile
 12506  006D9C                     
 12507                           ;pwm.c: 39: TRISDbits.TRISD5=1;
 12508  006D9C  8A95               	bsf	149,5,c	;volatile
 12509  006D9E                     
 12510                           ;pwm.c: 41: PORTCbits.RC2=0;
 12511  006D9E  9482               	bcf	130,2,c	;volatile
 12512  006DA0                     
 12513                           ;pwm.c: 42: PORTDbits.RD5=0;
 12514  006DA0  9A83               	bcf	131,5,c	;volatile
 12515                           
 12516                           ;pwm.c: 44: CCPR1L=0;
 12517  006DA2  0E00               	movlw	0
 12518  006DA4  6EBE               	movwf	190,c	;volatile
 12519  006DA6                     
 12520                           ;pwm.c: 48: T2CONbits.TMR2ON=0;
 12521  006DA6  94CA               	bcf	202,2,c	;volatile
 12522  006DA8                     
 12523                           ;pwm.c: 50: temp=8000000/(f*4l);
 12524  006DA8  0E00               	movlw	0
 12525  006DAA  0100               	movlb	0	; () banked
 12526  006DAC  6F8A               	movwf	___aldiv@dividend& (0+255),b
 12527  006DAE  0E12               	movlw	18
 12528  006DB0  6F8B               	movwf	(___aldiv@dividend+1)& (0+255),b
 12529  006DB2  0E7A               	movlw	122
 12530  006DB4  6F8C               	movwf	(___aldiv@dividend+2)& (0+255),b
 12531  006DB6  0E00               	movlw	0
 12532  006DB8  6F8D               	movwf	(___aldiv@dividend+3)& (0+255),b
 12533  006DBA  5198               	movf	PWM1_Init@f& (0+255),w,b
 12534  006DBC  6F9A               	movwf	??_PWM1_Init& (0+255),b
 12535  006DBE  5199               	movf	(PWM1_Init@f+1)& (0+255),w,b
 12536  006DC0  6F9B               	movwf	(??_PWM1_Init+1)& (0+255),b
 12537  006DC2  6B9C               	clrf	(??_PWM1_Init+2)& (0+255),b
 12538  006DC4  6B9D               	clrf	(??_PWM1_Init+3)& (0+255),b
 12539  006DC6  0E02               	movlw	2
 12540  006DC8                     u13375:
 12541  006DC8  90D8               	bcf	status,0,c
 12542  006DCA  379A               	rlcf	??_PWM1_Init& (0+255),f,b
 12543  006DCC  379B               	rlcf	(??_PWM1_Init+1)& (0+255),f,b
 12544  006DCE  379C               	rlcf	(??_PWM1_Init+2)& (0+255),f,b
 12545  006DD0  379D               	rlcf	(??_PWM1_Init+3)& (0+255),f,b
 12546  006DD2  2EE8               	decfsz	wreg,f,c
 12547  006DD4  EFE4  F036         	goto	u13375
 12548  006DD8  C09A  F08E         	movff	??_PWM1_Init,___aldiv@divisor
 12549  006DDC  C09B  F08F         	movff	??_PWM1_Init+1,___aldiv@divisor+1
 12550  006DE0  C09C  F090         	movff	??_PWM1_Init+2,___aldiv@divisor+2
 12551  006DE4  C09D  F091         	movff	??_PWM1_Init+3,___aldiv@divisor+3
 12552  006DE8  ECB9  F033         	call	___aldiv	;wreg free
 12553  006DEC  C08A  F09E         	movff	?___aldiv,PWM1_Init@temp
 12554  006DF0  C08B  F09F         	movff	?___aldiv+1,PWM1_Init@temp+1
 12555  006DF4                     
 12556                           ;pwm.c: 52: if (temp < 256)
 12557  006DF4  0100               	movlb	0	; () banked
 12558  006DF6  059F               	decf	(PWM1_Init@temp+1)& (0+255),w,b
 12559  006DF8  B0D8               	btfsc	status,0,c
 12560  006DFA  EF01  F037         	goto	u13381
 12561  006DFE  EF03  F037         	goto	u13380
 12562  006E02                     u13381:
 12563  006E02  EF09  F037         	goto	l9900
 12564  006E06                     u13380:
 12565  006E06                     
 12566                           ; BSR set to: 0
 12567                           ;pwm.c: 53: {;pwm.c: 54: T2CONbits.T2CKPS=0;
 12568  006E06  0EFC               	movlw	-4
 12569  006E08  16CA               	andwf	202,f,c	;volatile
 12570  006E0A                     
 12571                           ; BSR set to: 0
 12572                           ;pwm.c: 55: PR2=temp;
 12573  006E0A  C09E  FFCB         	movff	PWM1_Init@temp,4043	;volatile
 12574                           
 12575                           ;pwm.c: 56: }
 12576  006E0E  EF43  F037         	goto	l9910
 12577  006E12                     l9900:
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;pwm.c: 57: else if(temp/4 < 256 )
 12581  006E12  C09E  F09A         	movff	PWM1_Init@temp,??_PWM1_Init
 12582  006E16  C09F  F09B         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
 12583  006E1A  90D8               	bcf	status,0,c
 12584  006E1C  339B               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
 12585  006E1E  339A               	rrcf	??_PWM1_Init& (0+255),f,b
 12586  006E20  90D8               	bcf	status,0,c
 12587  006E22  339B               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
 12588  006E24  339A               	rrcf	??_PWM1_Init& (0+255),f,b
 12589  006E26  059B               	decf	(??_PWM1_Init+1)& (0+255),w,b
 12590  006E28  B0D8               	btfsc	status,0,c
 12591  006E2A  EF19  F037         	goto	u13391
 12592  006E2E  EF1B  F037         	goto	u13390
 12593  006E32                     u13391:
 12594  006E32  EF2F  F037         	goto	l9906
 12595  006E36                     u13390:
 12596  006E36                     
 12597                           ; BSR set to: 0
 12598                           ;pwm.c: 58: {;pwm.c: 59: T2CONbits.T2CKPS=1;
 12599  006E36  50CA               	movf	202,w,c	;volatile
 12600  006E38  0BFC               	andlw	-4
 12601  006E3A  0901               	iorlw	1
 12602  006E3C  6ECA               	movwf	202,c	;volatile
 12603  006E3E                     
 12604                           ; BSR set to: 0
 12605                           ;pwm.c: 60: PR2=(temp+2)/4;
 12606  006E3E  0E02               	movlw	2
 12607  006E40  259E               	addwf	PWM1_Init@temp& (0+255),w,b
 12608  006E42  6F9A               	movwf	??_PWM1_Init& (0+255),b
 12609  006E44  0E00               	movlw	0
 12610  006E46  219F               	addwfc	(PWM1_Init@temp+1)& (0+255),w,b
 12611  006E48  6F9B               	movwf	(??_PWM1_Init+1)& (0+255),b
 12612  006E4A  90D8               	bcf	status,0,c
 12613  006E4C  339B               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
 12614  006E4E  339A               	rrcf	??_PWM1_Init& (0+255),f,b
 12615  006E50  90D8               	bcf	status,0,c
 12616  006E52  339B               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
 12617  006E54  339A               	rrcf	??_PWM1_Init& (0+255),f,b
 12618  006E56  519A               	movf	??_PWM1_Init& (0+255),w,b
 12619  006E58  6ECB               	movwf	203,c	;volatile
 12620                           
 12621                           ;pwm.c: 61: }
 12622  006E5A  EF43  F037         	goto	l9910
 12623  006E5E                     l9906:
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;pwm.c: 62: else;pwm.c: 63: {;pwm.c: 64: PR2=(temp+8)/16;
 12627  006E5E  0E08               	movlw	8
 12628  006E60  259E               	addwf	PWM1_Init@temp& (0+255),w,b
 12629  006E62  6F9A               	movwf	??_PWM1_Init& (0+255),b
 12630  006E64  0E00               	movlw	0
 12631  006E66  219F               	addwfc	(PWM1_Init@temp+1)& (0+255),w,b
 12632  006E68  6F9B               	movwf	(??_PWM1_Init+1)& (0+255),b
 12633  006E6A  0E04               	movlw	4
 12634  006E6C  6F9C               	movwf	(??_PWM1_Init+2)& (0+255),b
 12635  006E6E                     u13405:
 12636  006E6E  90D8               	bcf	status,0,c
 12637  006E70  339B               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
 12638  006E72  339A               	rrcf	??_PWM1_Init& (0+255),f,b
 12639  006E74  2F9C               	decfsz	(??_PWM1_Init+2)& (0+255),f,b
 12640  006E76  EF37  F037         	goto	u13405
 12641  006E7A  519A               	movf	??_PWM1_Init& (0+255),w,b
 12642  006E7C  6ECB               	movwf	203,c	;volatile
 12643  006E7E                     
 12644                           ; BSR set to: 0
 12645                           ;pwm.c: 65: T2CONbits.T2CKPS=2;
 12646  006E7E  50CA               	movf	202,w,c	;volatile
 12647  006E80  0BFC               	andlw	-4
 12648  006E82  0902               	iorlw	2
 12649  006E84  6ECA               	movwf	202,c	;volatile
 12650  006E86                     l9910:
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;pwm.c: 66: };pwm.c: 68: T2CONbits.T2OUTPS=0;
 12654  006E86  0E87               	movlw	-121
 12655  006E88  16CA               	andwf	202,f,c	;volatile
 12656  006E8A                     
 12657                           ; BSR set to: 0
 12658  006E8A  0012               	return		;funcret
 12659  006E8C                     __end_of_PWM1_Init:
 12660                           	callstack 0
 12661                           
 12662 ;; *************** function ___aldiv *****************
 12663 ;; Defined at:
 12664 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  dividend        4   10[BANK0 ] long 
 12667 ;;  divisor         4   14[BANK0 ] long 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  quotient        4   20[BANK0 ] long 
 12670 ;;  sign            1   19[BANK0 ] unsigned char 
 12671 ;;  counter         1   18[BANK0 ] unsigned char 
 12672 ;; Return value:  Size  Location     Type
 12673 ;;                  4   10[BANK0 ] long 
 12674 ;; Registers used:
 12675 ;;		wreg, status,2, status,0
 12676 ;; Tracked objects:
 12677 ;;		On entry : 0/0
 12678 ;;		On exit  : 0/0
 12679 ;;		Unchanged: 0/0
 12680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12681 ;;      Params:         0       8       0       0       0       0       0
 12682 ;;      Locals:         0       6       0       0       0       0       0
 12683 ;;      Temps:          0       0       0       0       0       0       0
 12684 ;;      Totals:         0      14       0       0       0       0       0
 12685 ;;Total ram usage:       14 bytes
 12686 ;; Hardware stack levels used:    1
 12687 ;; Hardware stack levels required when called:    5
 12688 ;; This function calls:
 12689 ;;		Nothing
 12690 ;; This function is called by:
 12691 ;;		_PWM1_Init
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text38
 12696  006772                     __ptext38:
 12697                           	callstack 0
 12698  006772                     ___aldiv:
 12699                           	callstack 24
 12700  006772  0E00               	movlw	0
 12701  006774  0100               	movlb	0	; () banked
 12702  006776  6F93               	movwf	___aldiv@sign& (0+255),b
 12703  006778                     
 12704                           ; BSR set to: 0
 12705  006778  BF91               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 12706  00677A  EFC3  F033         	goto	u13310
 12707  00677E  EFC1  F033         	goto	u13311
 12708  006782                     u13311:
 12709  006782  EFCD  F033         	goto	l9842
 12710  006786                     u13310:
 12711  006786                     
 12712                           ; BSR set to: 0
 12713  006786  1F91               	comf	(___aldiv@divisor+3)& (0+255),f,b
 12714  006788  1F90               	comf	(___aldiv@divisor+2)& (0+255),f,b
 12715  00678A  1F8F               	comf	(___aldiv@divisor+1)& (0+255),f,b
 12716  00678C  6D8E               	negf	___aldiv@divisor& (0+255),b
 12717  00678E  0E00               	movlw	0
 12718  006790  238F               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 12719  006792  2390               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 12720  006794  2391               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 12721  006796                     
 12722                           ; BSR set to: 0
 12723  006796  0E01               	movlw	1
 12724  006798  6F93               	movwf	___aldiv@sign& (0+255),b
 12725  00679A                     l9842:
 12726                           
 12727                           ; BSR set to: 0
 12728  00679A  BF8D               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
 12729  00679C  EFD4  F033         	goto	u13320
 12730  0067A0  EFD2  F033         	goto	u13321
 12731  0067A4                     u13321:
 12732  0067A4  EFDE  F033         	goto	l9848
 12733  0067A8                     u13320:
 12734  0067A8                     
 12735                           ; BSR set to: 0
 12736  0067A8  1F8D               	comf	(___aldiv@dividend+3)& (0+255),f,b
 12737  0067AA  1F8C               	comf	(___aldiv@dividend+2)& (0+255),f,b
 12738  0067AC  1F8B               	comf	(___aldiv@dividend+1)& (0+255),f,b
 12739  0067AE  6D8A               	negf	___aldiv@dividend& (0+255),b
 12740  0067B0  0E00               	movlw	0
 12741  0067B2  238B               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 12742  0067B4  238C               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 12743  0067B6  238D               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 12744  0067B8                     
 12745                           ; BSR set to: 0
 12746  0067B8  0E01               	movlw	1
 12747  0067BA  1B93               	xorwf	___aldiv@sign& (0+255),f,b
 12748  0067BC                     l9848:
 12749                           
 12750                           ; BSR set to: 0
 12751  0067BC  0E00               	movlw	0
 12752  0067BE  6F94               	movwf	___aldiv@quotient& (0+255),b
 12753  0067C0  0E00               	movlw	0
 12754  0067C2  6F95               	movwf	(___aldiv@quotient+1)& (0+255),b
 12755  0067C4  0E00               	movlw	0
 12756  0067C6  6F96               	movwf	(___aldiv@quotient+2)& (0+255),b
 12757  0067C8  0E00               	movlw	0
 12758  0067CA  6F97               	movwf	(___aldiv@quotient+3)& (0+255),b
 12759  0067CC                     
 12760                           ; BSR set to: 0
 12761  0067CC  518E               	movf	___aldiv@divisor& (0+255),w,b
 12762  0067CE  118F               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 12763  0067D0  1190               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 12764  0067D2  1191               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 12765  0067D4  B4D8               	btfsc	status,2,c
 12766  0067D6  EFEF  F033         	goto	u13331
 12767  0067DA  EFF1  F033         	goto	u13330
 12768  0067DE                     u13331:
 12769  0067DE  EF27  F034         	goto	l9870
 12770  0067E2                     u13330:
 12771  0067E2                     
 12772                           ; BSR set to: 0
 12773  0067E2  0E01               	movlw	1
 12774  0067E4  6F92               	movwf	___aldiv@counter& (0+255),b
 12775  0067E6  EFFB  F033         	goto	l9856
 12776  0067EA                     l9854:
 12777                           
 12778                           ; BSR set to: 0
 12779  0067EA  90D8               	bcf	status,0,c
 12780  0067EC  378E               	rlcf	___aldiv@divisor& (0+255),f,b
 12781  0067EE  378F               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 12782  0067F0  3790               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 12783  0067F2  3791               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 12784  0067F4  2B92               	incf	___aldiv@counter& (0+255),f,b
 12785  0067F6                     l9856:
 12786                           
 12787                           ; BSR set to: 0
 12788  0067F6  AF91               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 12789  0067F8  EF00  F034         	goto	u13341
 12790  0067FC  EF02  F034         	goto	u13340
 12791  006800                     u13341:
 12792  006800  EFF5  F033         	goto	l9854
 12793  006804                     u13340:
 12794  006804                     l9858:
 12795                           
 12796                           ; BSR set to: 0
 12797  006804  90D8               	bcf	status,0,c
 12798  006806  3794               	rlcf	___aldiv@quotient& (0+255),f,b
 12799  006808  3795               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 12800  00680A  3796               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 12801  00680C  3797               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 12802  00680E                     
 12803                           ; BSR set to: 0
 12804  00680E  518E               	movf	___aldiv@divisor& (0+255),w,b
 12805  006810  5D8A               	subwf	___aldiv@dividend& (0+255),w,b
 12806  006812  518F               	movf	(___aldiv@divisor+1)& (0+255),w,b
 12807  006814  598B               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 12808  006816  5190               	movf	(___aldiv@divisor+2)& (0+255),w,b
 12809  006818  598C               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 12810  00681A  5191               	movf	(___aldiv@divisor+3)& (0+255),w,b
 12811  00681C  598D               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 12812  00681E  A0D8               	btfss	status,0,c
 12813  006820  EF14  F034         	goto	u13351
 12814  006824  EF16  F034         	goto	u13350
 12815  006828                     u13351:
 12816  006828  EF1F  F034         	goto	l9866
 12817  00682C                     u13350:
 12818  00682C                     
 12819                           ; BSR set to: 0
 12820  00682C  518E               	movf	___aldiv@divisor& (0+255),w,b
 12821  00682E  5F8A               	subwf	___aldiv@dividend& (0+255),f,b
 12822  006830  518F               	movf	(___aldiv@divisor+1)& (0+255),w,b
 12823  006832  5B8B               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 12824  006834  5190               	movf	(___aldiv@divisor+2)& (0+255),w,b
 12825  006836  5B8C               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 12826  006838  5191               	movf	(___aldiv@divisor+3)& (0+255),w,b
 12827  00683A  5B8D               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 12828  00683C                     
 12829                           ; BSR set to: 0
 12830  00683C  8194               	bsf	___aldiv@quotient& (0+255),0,b
 12831  00683E                     l9866:
 12832                           
 12833                           ; BSR set to: 0
 12834  00683E  90D8               	bcf	status,0,c
 12835  006840  3391               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 12836  006842  3390               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 12837  006844  338F               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 12838  006846  338E               	rrcf	___aldiv@divisor& (0+255),f,b
 12839  006848                     
 12840                           ; BSR set to: 0
 12841  006848  2F92               	decfsz	___aldiv@counter& (0+255),f,b
 12842  00684A  EF02  F034         	goto	l9858
 12843  00684E                     l9870:
 12844                           
 12845                           ; BSR set to: 0
 12846  00684E  5193               	movf	___aldiv@sign& (0+255),w,b
 12847  006850  B4D8               	btfsc	status,2,c
 12848  006852  EF2D  F034         	goto	u13361
 12849  006856  EF2F  F034         	goto	u13360
 12850  00685A                     u13361:
 12851  00685A  EF37  F034         	goto	l9874
 12852  00685E                     u13360:
 12853  00685E                     
 12854                           ; BSR set to: 0
 12855  00685E  1F97               	comf	(___aldiv@quotient+3)& (0+255),f,b
 12856  006860  1F96               	comf	(___aldiv@quotient+2)& (0+255),f,b
 12857  006862  1F95               	comf	(___aldiv@quotient+1)& (0+255),f,b
 12858  006864  6D94               	negf	___aldiv@quotient& (0+255),b
 12859  006866  0E00               	movlw	0
 12860  006868  2395               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 12861  00686A  2396               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 12862  00686C  2397               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 12863  00686E                     l9874:
 12864                           
 12865                           ; BSR set to: 0
 12866  00686E  C094  F08A         	movff	___aldiv@quotient,?___aldiv
 12867  006872  C095  F08B         	movff	___aldiv@quotient+1,?___aldiv+1
 12868  006876  C096  F08C         	movff	___aldiv@quotient+2,?___aldiv+2
 12869  00687A  C097  F08D         	movff	___aldiv@quotient+3,?___aldiv+3
 12870  00687E                     
 12871                           ; BSR set to: 0
 12872  00687E  0012               	return		;funcret
 12873  006880                     __end_of___aldiv:
 12874                           	callstack 0
 12875                           
 12876 ;; *************** function _Lcd_Init *****************
 12877 ;; Defined at:
 12878 ;;		line 54 in file "flexlcd.h"
 12879 ;; Parameters:    Size  Location     Type
 12880 ;;		None
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;  data            1   14[BANK0 ] unsigned char 
 12883 ;; Return value:  Size  Location     Type
 12884 ;;                  1    wreg      void 
 12885 ;; Registers used:
 12886 ;;		wreg, status,2, status,0, cstack
 12887 ;; Tracked objects:
 12888 ;;		On entry : 0/0
 12889 ;;		On exit  : 0/0
 12890 ;;		Unchanged: 0/0
 12891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12892 ;;      Params:         0       0       0       0       0       0       0
 12893 ;;      Locals:         0       1       0       0       0       0       0
 12894 ;;      Temps:          0       1       0       0       0       0       0
 12895 ;;      Totals:         0       2       0       0       0       0       0
 12896 ;;Total ram usage:        2 bytes
 12897 ;; Hardware stack levels used:    1
 12898 ;; Hardware stack levels required when called:    6
 12899 ;; This function calls:
 12900 ;;		_Lcd_Cmd
 12901 ;; This function is called by:
 12902 ;;		_main
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text39
 12907  0063DE                     __ptext39:
 12908                           	callstack 0
 12909  0063DE                     _Lcd_Init:
 12910                           	callstack 24
 12911  0063DE                     
 12912                           ;flexlcd.h: 55: unsigned char data;;flexlcd.h: 56: TRISDbits.TRISD7 = 0;
 12913  0063DE  9E95               	bcf	149,7,c	;volatile
 12914                           
 12915                           ;flexlcd.h: 57: TRISDbits.TRISD6 = 0;
 12916  0063E0  9C95               	bcf	149,6,c	;volatile
 12917                           
 12918                           ;flexlcd.h: 58: TRISDbits.TRISD5 = 0;
 12919  0063E2  9A95               	bcf	149,5,c	;volatile
 12920                           
 12921                           ;flexlcd.h: 59: TRISDbits.TRISD4 = 0;
 12922  0063E4  9895               	bcf	149,4,c	;volatile
 12923                           
 12924                           ;flexlcd.h: 60: TRISEbits.TRISE2 = 0;
 12925  0063E6  9496               	bcf	150,2,c	;volatile
 12926                           
 12927                           ;flexlcd.h: 61: TRISEbits.TRISE1 = 0;
 12928  0063E8  9296               	bcf	150,1,c	;volatile
 12929                           
 12930                           ;flexlcd.h: 62: PORTDbits.RD7 = 0;
 12931  0063EA  9E83               	bcf	131,7,c	;volatile
 12932                           
 12933                           ;flexlcd.h: 63: PORTDbits.RD6 = 0;
 12934  0063EC  9C83               	bcf	131,6,c	;volatile
 12935                           
 12936                           ;flexlcd.h: 64: PORTDbits.RD5 = 0;
 12937  0063EE  9A83               	bcf	131,5,c	;volatile
 12938                           
 12939                           ;flexlcd.h: 65: PORTDbits.RD4 = 0;
 12940  0063F0  9883               	bcf	131,4,c	;volatile
 12941                           
 12942                           ;flexlcd.h: 66: PORTEbits.RE1 = 0;
 12943  0063F2  9284               	bcf	132,1,c	;volatile
 12944                           
 12945                           ;flexlcd.h: 67: PORTEbits.RE2 = 0;
 12946  0063F4  9484               	bcf	132,2,c	;volatile
 12947  0063F6                     
 12948                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 12949  0063F6  0E0F               	movlw	15
 12950  0063F8  0100               	movlb	0	; () banked
 12951  0063FA  6F8D               	movwf	??_Lcd_Init& (0+255),b
 12952  0063FC  0E47               	movlw	71
 12953  0063FE                     u14257:
 12954  0063FE  2EE8               	decfsz	wreg,f,c
 12955  006400  D7FE               	bra	u14257
 12956  006402  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 12957  006404  D7FC               	bra	u14257
 12958  006406  D000               	nop2	
 12959                           
 12960                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 12961  006408  0E0F               	movlw	15
 12962  00640A  0100               	movlb	0	; () banked
 12963  00640C  6F8D               	movwf	??_Lcd_Init& (0+255),b
 12964  00640E  0E47               	movlw	71
 12965  006410                     u14267:
 12966  006410  2EE8               	decfsz	wreg,f,c
 12967  006412  D7FE               	bra	u14267
 12968  006414  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 12969  006416  D7FC               	bra	u14267
 12970  006418  D000               	nop2	
 12971                           
 12972                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 12973  00641A  0E0F               	movlw	15
 12974  00641C  0100               	movlb	0	; () banked
 12975  00641E  6F8D               	movwf	??_Lcd_Init& (0+255),b
 12976  006420  0E47               	movlw	71
 12977  006422                     u14277:
 12978  006422  2EE8               	decfsz	wreg,f,c
 12979  006424  D7FE               	bra	u14277
 12980  006426  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 12981  006428  D7FC               	bra	u14277
 12982  00642A  D000               	nop2	
 12983                           
 12984                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 12985  00642C  0E0F               	movlw	15
 12986  00642E  0100               	movlb	0	; () banked
 12987  006430  6F8D               	movwf	??_Lcd_Init& (0+255),b
 12988  006432  0E47               	movlw	71
 12989  006434                     u14287:
 12990  006434  2EE8               	decfsz	wreg,f,c
 12991  006436  D7FE               	bra	u14287
 12992  006438  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 12993  00643A  D7FC               	bra	u14287
 12994  00643C  D000               	nop2	
 12995                           
 12996                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 12997  00643E  0E0F               	movlw	15
 12998  006440  0100               	movlb	0	; () banked
 12999  006442  6F8D               	movwf	??_Lcd_Init& (0+255),b
 13000  006444  0E47               	movlw	71
 13001  006446                     u14297:
 13002  006446  2EE8               	decfsz	wreg,f,c
 13003  006448  D7FE               	bra	u14297
 13004  00644A  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 13005  00644C  D7FC               	bra	u14297
 13006  00644E  D000               	nop2	
 13007                           
 13008                           ;flexlcd.h: 73: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13009  006450  0E0F               	movlw	15
 13010  006452  0100               	movlb	0	; () banked
 13011  006454  6F8D               	movwf	??_Lcd_Init& (0+255),b
 13012  006456  0E47               	movlw	71
 13013  006458                     u14307:
 13014  006458  2EE8               	decfsz	wreg,f,c
 13015  00645A  D7FE               	bra	u14307
 13016  00645C  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 13017  00645E  D7FC               	bra	u14307
 13018  006460  D000               	nop2	
 13019  006462                     
 13020                           ;flexlcd.h: 74: for(data = 1; data < 4; data ++)
 13021  006462  0E01               	movlw	1
 13022  006464  0100               	movlb	0	; () banked
 13023  006466  6F8E               	movwf	Lcd_Init@data& (0+255),b
 13024  006468                     l258:
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;flexlcd.h: 75: {;flexlcd.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
 13028  006468  9E83               	bcf	131,7,c	;volatile
 13029  00646A  9C83               	bcf	131,6,c	;volatile
 13030  00646C  8A83               	bsf	131,5,c	;volatile
 13031  00646E  8883               	bsf	131,4,c	;volatile
 13032  006470  9284               	bcf	132,1,c	;volatile
 13033                           
 13034                           ;flexlcd.h: 77: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
 13035  006472  9484               	bcf	132,2,c	;volatile
 13036  006474  9E83               	bcf	131,7,c	;volatile
 13037  006476  9C83               	bcf	131,6,c	;volatile
 13038  006478  8A83               	bsf	131,5,c	;volatile
 13039  00647A  8883               	bsf	131,4,c	;volatile
 13040                           
 13041                           ;flexlcd.h: 78: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
 13042  00647C  8284               	bsf	132,1,c	;volatile
 13043  00647E  9484               	bcf	132,2,c	;volatile
 13044  006480                     
 13045                           ; BSR set to: 0
 13046                           ;flexlcd.h: 79: _delay((unsigned long)((5)*(8000000/4000000.0)));
 13047  006480  0E03               	movlw	3
 13048  006482                     u14317:
 13049  006482  2EE8               	decfsz	wreg,f,c
 13050  006484  D7FE               	bra	u14317
 13051  006486  F000               	nop	
 13052  006488                     
 13053                           ;flexlcd.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
 13054  006488  9E83               	bcf	131,7,c	;volatile
 13055  00648A  9C83               	bcf	131,6,c	;volatile
 13056  00648C  8A83               	bsf	131,5,c	;volatile
 13057  00648E  8883               	bsf	131,4,c	;volatile
 13058  006490  9284               	bcf	132,1,c	;volatile
 13059  006492                     
 13060                           ;flexlcd.h: 81: PORTEbits.RE2 = 0;
 13061  006492  9484               	bcf	132,2,c	;volatile
 13062                           
 13063                           ;flexlcd.h: 82: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13064  006494  0E0F               	movlw	15
 13065  006496  0100               	movlb	0	; () banked
 13066  006498  6F8D               	movwf	??_Lcd_Init& (0+255),b
 13067  00649A  0E47               	movlw	71
 13068  00649C                     u14327:
 13069  00649C  2EE8               	decfsz	wreg,f,c
 13070  00649E  D7FE               	bra	u14327
 13071  0064A0  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 13072  0064A2  D7FC               	bra	u14327
 13073  0064A4  D000               	nop2	
 13074  0064A6  0100               	movlb	0	; () banked
 13075  0064A8  2B8E               	incf	Lcd_Init@data& (0+255),f,b
 13076  0064AA  0E03               	movlw	3
 13077  0064AC  658E               	cpfsgt	Lcd_Init@data& (0+255),b
 13078  0064AE  EF5B  F032         	goto	u13491
 13079  0064B2  EF5D  F032         	goto	u13490
 13080  0064B6                     u13491:
 13081  0064B6  EF34  F032         	goto	l258
 13082  0064BA                     u13490:
 13083  0064BA                     
 13084                           ; BSR set to: 0
 13085                           ;flexlcd.h: 83: };flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 13086  0064BA  9E83               	bcf	131,7,c	;volatile
 13087  0064BC  9C83               	bcf	131,6,c	;volatile
 13088  0064BE  8A83               	bsf	131,5,c	;volatile
 13089  0064C0  9883               	bcf	131,4,c	;volatile
 13090  0064C2  9284               	bcf	132,1,c	;volatile
 13091  0064C4  9484               	bcf	132,2,c	;volatile
 13092                           
 13093                           ;flexlcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
 13094  0064C6  9E83               	bcf	131,7,c	;volatile
 13095  0064C8  9C83               	bcf	131,6,c	;volatile
 13096  0064CA  8A83               	bsf	131,5,c	;volatile
 13097  0064CC  9883               	bcf	131,4,c	;volatile
 13098  0064CE  8284               	bsf	132,1,c	;volatile
 13099  0064D0  9484               	bcf	132,2,c	;volatile
 13100  0064D2                     
 13101                           ; BSR set to: 0
 13102                           ;flexlcd.h: 86: _delay((unsigned long)((5)*(8000000/4000000.0)));
 13103  0064D2  0E03               	movlw	3
 13104  0064D4                     u14337:
 13105  0064D4  2EE8               	decfsz	wreg,f,c
 13106  0064D6  D7FE               	bra	u14337
 13107  0064D8  F000               	nop	
 13108  0064DA                     
 13109                           ;flexlcd.h: 87: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 13110  0064DA  9E83               	bcf	131,7,c	;volatile
 13111  0064DC  9C83               	bcf	131,6,c	;volatile
 13112  0064DE  8A83               	bsf	131,5,c	;volatile
 13113  0064E0  9883               	bcf	131,4,c	;volatile
 13114  0064E2  9284               	bcf	132,1,c	;volatile
 13115  0064E4  9484               	bcf	132,2,c	;volatile
 13116                           
 13117                           ;flexlcd.h: 88: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13118  0064E6  0E0F               	movlw	15
 13119  0064E8  0100               	movlb	0	; () banked
 13120  0064EA  6F8D               	movwf	??_Lcd_Init& (0+255),b
 13121  0064EC  0E47               	movlw	71
 13122  0064EE                     u14347:
 13123  0064EE  2EE8               	decfsz	wreg,f,c
 13124  0064F0  D7FE               	bra	u14347
 13125  0064F2  2F8D               	decfsz	??_Lcd_Init& (0+255),f,b
 13126  0064F4  D7FC               	bra	u14347
 13127  0064F6  D000               	nop2	
 13128  0064F8  0E28               	movlw	40
 13129  0064FA  EC54  F031         	call	_Lcd_Cmd
 13130  0064FE  0E10               	movlw	16
 13131  006500  EC54  F031         	call	_Lcd_Cmd
 13132  006504  0E01               	movlw	1
 13133  006506  EC54  F031         	call	_Lcd_Cmd
 13134  00650A  0E0F               	movlw	15
 13135  00650C  EC54  F031         	call	_Lcd_Cmd
 13136  006510  0012               	return		;funcret
 13137  006512                     __end_of_Lcd_Init:
 13138                           	callstack 0
 13139                           
 13140 ;; *************** function _Lcd_Cmd *****************
 13141 ;; Defined at:
 13142 ;;		line 152 in file "flexlcd.h"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;  data            1    wreg     unsigned char 
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;  data            1   12[BANK0 ] unsigned char 
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  1    wreg      void 
 13149 ;; Registers used:
 13150 ;;		wreg, status,2, status,0
 13151 ;; Tracked objects:
 13152 ;;		On entry : 0/0
 13153 ;;		On exit  : 0/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13156 ;;      Params:         0       0       0       0       0       0       0
 13157 ;;      Locals:         0       1       0       0       0       0       0
 13158 ;;      Temps:          0       2       0       0       0       0       0
 13159 ;;      Totals:         0       3       0       0       0       0       0
 13160 ;;Total ram usage:        3 bytes
 13161 ;; Hardware stack levels used:    1
 13162 ;; Hardware stack levels required when called:    5
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_Lcd_Init
 13167 ;;		_Lcd_Out
 13168 ;;		_maketela
 13169 ;;		_Lcd_Out2
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text40
 13174  0062A8                     __ptext40:
 13175                           	callstack 0
 13176  0062A8                     _Lcd_Cmd:
 13177                           	callstack 23
 13178                           
 13179                           ;incstack = 0
 13180                           ;Lcd_Cmd@data stored from wreg
 13181  0062A8  0100               	movlb	0	; () banked
 13182  0062AA  6F8C               	movwf	Lcd_Cmd@data& (0+255),b
 13183  0062AC                     
 13184                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 13185  0062AC  9284               	bcf	132,1,c	;volatile
 13186  0062AE  9484               	bcf	132,2,c	;volatile
 13187  0062B0                     
 13188                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
 13189  0062B0  0100               	movlb	0	; () banked
 13190  0062B2  6B8A               	clrf	??_Lcd_Cmd& (0+255),b
 13191  0062B4  AF8C               	btfss	Lcd_Cmd@data& (0+255),7,b
 13192  0062B6  D001               	bra	u11865
 13193  0062B8  2B8A               	incf	??_Lcd_Cmd& (0+255),f,b
 13194  0062BA                     u11865:
 13195  0062BA  0E01               	movlw	1
 13196  0062BC  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13197  0062BE  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13198  0062C0  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13199  0062C2  5083               	movf	131,w,c	;volatile
 13200  0062C4  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13201  0062C6  0B7F               	andlw	-129
 13202  0062C8  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13203  0062CA  6E83               	movwf	131,c	;volatile
 13204  0062CC  C08C  F08A         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13205  0062D0  0E06               	movlw	6
 13206  0062D2  6F8B               	movwf	(??_Lcd_Cmd+1)& (0+255),b
 13207  0062D4                     u11875:
 13208  0062D4  90D8               	bcf	status,0,c
 13209  0062D6  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13210  0062D8  2F8B               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,b
 13211  0062DA  EF6A  F031         	goto	u11875
 13212  0062DE  0E01               	movlw	1
 13213  0062E0  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13214  0062E2  3B8A               	swapf	??_Lcd_Cmd& (0+255),f,b
 13215  0062E4  478A               	rlncf	??_Lcd_Cmd& (0+255),f,b
 13216  0062E6  478A               	rlncf	??_Lcd_Cmd& (0+255),f,b
 13217  0062E8  5083               	movf	131,w,c	;volatile
 13218  0062EA  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13219  0062EC  0BBF               	andlw	-65
 13220  0062EE  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13221  0062F0  6E83               	movwf	131,c	;volatile
 13222                           
 13223                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
 13224  0062F2  C08C  F08A         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13225  0062F6  0E05               	movlw	5
 13226  0062F8  6F8B               	movwf	(??_Lcd_Cmd+1)& (0+255),b
 13227  0062FA                     u11885:
 13228  0062FA  90D8               	bcf	status,0,c
 13229  0062FC  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13230  0062FE  2F8B               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,b
 13231  006300  EF7D  F031         	goto	u11885
 13232  006304  0E01               	movlw	1
 13233  006306  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13234  006308  3B8A               	swapf	??_Lcd_Cmd& (0+255),f,b
 13235  00630A  478A               	rlncf	??_Lcd_Cmd& (0+255),f,b
 13236  00630C  5083               	movf	131,w,c	;volatile
 13237  00630E  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13238  006310  0BDF               	andlw	-33
 13239  006312  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13240  006314  6E83               	movwf	131,c	;volatile
 13241  006316  C08C  F08A         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13242  00631A  3B8A               	swapf	??_Lcd_Cmd& (0+255),f,b
 13243  00631C  0E0F               	movlw	15
 13244  00631E  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13245  006320  0E01               	movlw	1
 13246  006322  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13247  006324  3B8A               	swapf	??_Lcd_Cmd& (0+255),f,b
 13248  006326  5083               	movf	131,w,c	;volatile
 13249  006328  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13250  00632A  0BEF               	andlw	-17
 13251  00632C  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13252  00632E  6E83               	movwf	131,c	;volatile
 13253  006330                     
 13254                           ; BSR set to: 0
 13255                           ;flexlcd.h: 156: _delay(10);
 13256  006330  0E03               	movlw	3
 13257  006332                     u14357:
 13258  006332  2EE8               	decfsz	wreg,f,c
 13259  006334  D7FE               	bra	u14357
 13260  006336  F000               	nop	
 13261  006338                     
 13262                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 13263  006338  8284               	bsf	132,1,c	;volatile
 13264  00633A  0E03               	movlw	3
 13265  00633C                     u14367:
 13266  00633C  2EE8               	decfsz	wreg,f,c
 13267  00633E  D7FE               	bra	u14367
 13268  006340  F000               	nop	
 13269  006342  9284               	bcf	132,1,c	;volatile
 13270                           
 13271                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
 13272  006344  C08C  F08A         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13273  006348  0100               	movlb	0	; () banked
 13274  00634A  90D8               	bcf	status,0,c
 13275  00634C  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13276  00634E  90D8               	bcf	status,0,c
 13277  006350  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13278  006352  90D8               	bcf	status,0,c
 13279  006354  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13280  006356  0E01               	movlw	1
 13281  006358  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13282  00635A  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13283  00635C  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13284  00635E  5083               	movf	131,w,c	;volatile
 13285  006360  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13286  006362  0B7F               	andlw	-129
 13287  006364  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13288  006366  6E83               	movwf	131,c	;volatile
 13289  006368  C08C  F08A         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13290  00636C  90D8               	bcf	status,0,c
 13291  00636E  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13292  006370  90D8               	bcf	status,0,c
 13293  006372  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13294  006374  0E01               	movlw	1
 13295  006376  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13296  006378  3B8A               	swapf	??_Lcd_Cmd& (0+255),f,b
 13297  00637A  478A               	rlncf	??_Lcd_Cmd& (0+255),f,b
 13298  00637C  478A               	rlncf	??_Lcd_Cmd& (0+255),f,b
 13299  00637E  5083               	movf	131,w,c	;volatile
 13300  006380  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13301  006382  0BBF               	andlw	-65
 13302  006384  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13303  006386  6E83               	movwf	131,c	;volatile
 13304                           
 13305                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
 13306  006388  C08C  F08A         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13307  00638C  90D8               	bcf	status,0,c
 13308  00638E  338A               	rrcf	??_Lcd_Cmd& (0+255),f,b
 13309  006390  0E01               	movlw	1
 13310  006392  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13311  006394  3B8A               	swapf	??_Lcd_Cmd& (0+255),f,b
 13312  006396  478A               	rlncf	??_Lcd_Cmd& (0+255),f,b
 13313  006398  5083               	movf	131,w,c	;volatile
 13314  00639A  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13315  00639C  0BDF               	andlw	-33
 13316  00639E  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13317  0063A0  6E83               	movwf	131,c	;volatile
 13318  0063A2  C08C  F08A         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13319  0063A6  0E01               	movlw	1
 13320  0063A8  178A               	andwf	??_Lcd_Cmd& (0+255),f,b
 13321  0063AA  3B8A               	swapf	??_Lcd_Cmd& (0+255),f,b
 13322  0063AC  5083               	movf	131,w,c	;volatile
 13323  0063AE  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13324  0063B0  0BEF               	andlw	-17
 13325  0063B2  198A               	xorwf	??_Lcd_Cmd& (0+255),w,b
 13326  0063B4  6E83               	movwf	131,c	;volatile
 13327  0063B6                     
 13328                           ; BSR set to: 0
 13329                           ;flexlcd.h: 160: _delay(10);
 13330  0063B6  0E03               	movlw	3
 13331  0063B8                     u14377:
 13332  0063B8  2EE8               	decfsz	wreg,f,c
 13333  0063BA  D7FE               	bra	u14377
 13334  0063BC  F000               	nop	
 13335  0063BE                     
 13336                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 13337  0063BE  8284               	bsf	132,1,c	;volatile
 13338  0063C0  0E03               	movlw	3
 13339  0063C2                     u14387:
 13340  0063C2  2EE8               	decfsz	wreg,f,c
 13341  0063C4  D7FE               	bra	u14387
 13342  0063C6  F000               	nop	
 13343  0063C8  9284               	bcf	132,1,c	;volatile
 13344  0063CA                     
 13345                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13346  0063CA  0E0F               	movlw	15
 13347  0063CC  0100               	movlb	0	; () banked
 13348  0063CE  6F8A               	movwf	??_Lcd_Cmd& (0+255),b
 13349  0063D0  0E47               	movlw	71
 13350  0063D2                     u14397:
 13351  0063D2  2EE8               	decfsz	wreg,f,c
 13352  0063D4  D7FE               	bra	u14397
 13353  0063D6  2F8A               	decfsz	??_Lcd_Cmd& (0+255),f,b
 13354  0063D8  D7FC               	bra	u14397
 13355  0063DA  D000               	nop2	
 13356  0063DC  0012               	return		;funcret
 13357  0063DE                     __end_of_Lcd_Cmd:
 13358                           	callstack 0
 13359                           
 13360 ;; *************** function _isr *****************
 13361 ;; Defined at:
 13362 ;;		line 309 in file "main.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  1    wreg      void 
 13369 ;; Registers used:
 13370 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13376 ;;      Params:         0       0       0       0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0
 13378 ;;      Temps:          0      10       0       0       0       0       0
 13379 ;;      Totals:         0      10       0       0       0       0       0
 13380 ;;Total ram usage:       10 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; Hardware stack levels required when called:    4
 13383 ;; This function calls:
 13384 ;;		_transmitedados
 13385 ;;		i2_atualizatela
 13386 ;; This function is called by:
 13387 ;;		Interrupt level 2
 13388 ;; This function uses a non-reentrant model
 13389 ;;
 13390                           
 13391                           	psect	intcode
 13392  000008                     __pintcode:
 13393                           	callstack 0
 13394  000008                     _isr:
 13395                           	callstack 22
 13396                           
 13397                           ;incstack = 0
 13398  000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13399  00000A  ED7C  F039         	call	int_func,f	;refresh shadow registers
 13400                           
 13401                           	psect	intcode_body
 13402  0072F8                     __pintcode_body:
 13403                           	callstack 22
 13404  0072F8                     int_func:
 13405                           	callstack 22
 13406  0072F8  0006               	pop		; remove dummy address from shadow register refresh
 13407  0072FA  CFE9 F080          	movff	fsr0l,??_isr
 13408  0072FE  CFEA F081          	movff	fsr0h,??_isr+1
 13409  007302  CFD9 F082          	movff	fsr2l,??_isr+2
 13410  007306  CFDA F083          	movff	fsr2h,??_isr+3
 13411  00730A  CFF3 F084          	movff	prodl,??_isr+4
 13412  00730E  CFF4 F085          	movff	prodh,??_isr+5
 13413  007312  CFF6 F086          	movff	tblptrl,??_isr+6
 13414  007316  CFF7 F087          	movff	tblptrh,??_isr+7
 13415  00731A  CFF8 F088          	movff	tblptru,??_isr+8
 13416  00731E  CFF5 F089          	movff	tablat,??_isr+9
 13417  007322                     
 13418                           ;main.c: 311: if (INTCONbits.INT0F == 1)
 13419  007322  A2F2               	btfss	242,1,c	;volatile
 13420  007324  EF96  F039         	goto	i2u1105_41
 13421  007328  EF98  F039         	goto	i2u1105_40
 13422  00732C                     i2u1105_41:
 13423  00732C  EF99  F039         	goto	i2l447
 13424  007330                     i2u1105_40:
 13425  007330                     
 13426                           ;main.c: 312: {;main.c: 313: INTCONbits.INT0F = 0;
 13427  007330  92F2               	bcf	242,1,c	;volatile
 13428  007332                     i2l447:
 13429                           
 13430                           ;main.c: 314: };main.c: 315: if (INTCONbits.TMR0IF == 1)
 13431  007332  A4F2               	btfss	242,2,c	;volatile
 13432  007334  EF9E  F039         	goto	i2u1106_41
 13433  007338  EFA0  F039         	goto	i2u1106_40
 13434  00733C                     i2u1106_41:
 13435  00733C  EFBE  F039         	goto	i2l450
 13436  007340                     i2u1106_40:
 13437  007340                     
 13438                           ;main.c: 316: {;main.c: 317: INTCONbits.TMR0IF = 0;
 13439  007340  94F2               	bcf	242,2,c	;volatile
 13440  007342                     
 13441                           ;main.c: 318: TMR0 = 131;
 13442  007342  0E00               	movlw	0
 13443  007344  6ED7               	movwf	215,c	;volatile
 13444  007346  0E83               	movlw	131
 13445  007348  6ED6               	movwf	214,c	;volatile
 13446  00734A                     
 13447                           ;main.c: 319: count ++;
 13448  00734A  0101               	movlb	1	; () banked
 13449  00734C  4BC1               	infsnz	_count& (0+255),f,b
 13450  00734E  2BC2               	incf	(_count+1)& (0+255),f,b
 13451  007350                     
 13452                           ; BSR set to: 1
 13453                           ;main.c: 320: if (count == 250)
 13454  007350  0EFA               	movlw	250
 13455  007352  19C1               	xorwf	_count& (0+255),w,b
 13456  007354  11C2               	iorwf	(_count+1)& (0+255),w,b
 13457  007356  A4D8               	btfss	status,2,c
 13458  007358  EFB0  F039         	goto	i2u1107_41
 13459  00735C  EFB2  F039         	goto	i2u1107_40
 13460  007360                     i2u1107_41:
 13461  007360  EFBE  F039         	goto	i2l450
 13462  007364                     i2u1107_40:
 13463  007364                     
 13464                           ; BSR set to: 1
 13465                           ;main.c: 321: {;main.c: 322: count = 0;
 13466  007364  0E00               	movlw	0
 13467  007366  6FC2               	movwf	(_count+1)& (0+255),b
 13468  007368  0E00               	movlw	0
 13469  00736A  6FC1               	movwf	_count& (0+255),b
 13470  00736C                     
 13471                           ; BSR set to: 1
 13472                           ;main.c: 323: atualizatela(states);
 13473  00736C  0EF0               	movlw	low _states
 13474  00736E  6E74               	movwf	i2atualizatela@estados^0,c
 13475  007370  0E00               	movlw	high _states
 13476  007372  6E75               	movwf	(i2atualizatela@estados+1)^0,c
 13477  007374  EC5B  F026         	call	i2_atualizatela	;wreg free
 13478  007378                     
 13479                           ;main.c: 324: transmitedados();
 13480  007378  EC4C  F036         	call	_transmitedados	;wreg free
 13481  00737C                     i2l450:
 13482  00737C  C089  FFF5         	movff	??_isr+9,tablat
 13483  007380  C088  FFF8         	movff	??_isr+8,tblptru
 13484  007384  C087  FFF7         	movff	??_isr+7,tblptrh
 13485  007388  C086  FFF6         	movff	??_isr+6,tblptrl
 13486  00738C  C085  FFF4         	movff	??_isr+5,prodh
 13487  007390  C084  FFF3         	movff	??_isr+4,prodl
 13488  007394  C083  FFDA         	movff	??_isr+3,fsr2h
 13489  007398  C082  FFD9         	movff	??_isr+2,fsr2l
 13490  00739C  C081  FFEA         	movff	??_isr+1,fsr0h
 13491  0073A0  C080  FFE9         	movff	??_isr,fsr0l
 13492  0073A4  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13493  0073A6  0011               	retfie		f
 13494  0073A8                     __end_of_isr:
 13495                           	callstack 0
 13496                           
 13497 ;; *************** function i2_atualizatela *****************
 13498 ;; Defined at:
 13499 ;;		line 247 in file "main.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  estados         2  115[COMRAM] PTR unsigned int 
 13502 ;;		 -> states(6), 
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;		None
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      void 
 13507 ;; Registers used:
 13508 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13514 ;;      Params:         2       0       0       0       0       0       0
 13515 ;;      Locals:         4       0       0       0       0       0       0
 13516 ;;      Temps:          2       0       0       0       0       0       0
 13517 ;;      Totals:         8       0       0       0       0       0       0
 13518 ;;Total ram usage:        8 bytes
 13519 ;; Hardware stack levels used:    1
 13520 ;; Hardware stack levels required when called:    3
 13521 ;; This function calls:
 13522 ;;		i2_Lcd_Out
 13523 ;;		i2___fldiv
 13524 ;;		i2___flmul
 13525 ;;		i2_leituraCXI
 13526 ;;		i2_leituraCXS
 13527 ;;		i2_sprintf
 13528 ;; This function is called by:
 13529 ;;		_isr
 13530 ;; This function uses a non-reentrant model
 13531 ;;
 13532                           
 13533                           	psect	text42
 13534  004CB6                     __ptext42:
 13535                           	callstack 0
 13536  004CB6                     i2_atualizatela:
 13537                           	callstack 22
 13538  004CB6                     
 13539                           ;main.c: 249: if (estados[1] == 2)
 13540  004CB6  EE20 F002          	lfsr	2,2
 13541  004CBA  5074               	movf	i2atualizatela@estados^0,w,c
 13542  004CBC  26D9               	addwf	fsr2l,f,c
 13543  004CBE  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13544  004CC0  22DA               	addwfc	fsr2h,f,c
 13545  004CC2  0E02               	movlw	2
 13546  004CC4  18DE               	xorwf	postinc2,w,c
 13547  004CC6  10DE               	iorwf	postinc2,w,c
 13548  004CC8  A4D8               	btfss	status,2,c
 13549  004CCA  EF69  F026         	goto	i2u1062_41
 13550  004CCE  EF6B  F026         	goto	i2u1062_40
 13551  004CD2                     i2u1062_41:
 13552  004CD2  EF8F  F026         	goto	i2l8134
 13553  004CD6                     i2u1062_40:
 13554  004CD6                     
 13555                           ;main.c: 250: {;main.c: 251: Lcd_Out(1, 0, txt0);
 13556  004CD6  0E00               	movlw	0
 13557  004CD8  6E04               	movwf	i2Lcd_Out@x^0,c
 13558  004CDA  0E00               	movlw	low _txt0
 13559  004CDC  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13560  004CDE  0E01               	movlw	high _txt0
 13561  004CE0  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13562  004CE2  0E01               	movlw	1
 13563  004CE4  ECC7  F038         	call	i2_Lcd_Out
 13564                           
 13565                           ;main.c: 252: Lcd_Out(2, 0, txt2e);
 13566  004CE8  0E00               	movlw	0
 13567  004CEA  6E04               	movwf	i2Lcd_Out@x^0,c
 13568  004CEC  0E22               	movlw	low _txt2e
 13569  004CEE  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13570  004CF0  0E01               	movlw	high _txt2e
 13571  004CF2  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13572  004CF4  0E02               	movlw	2
 13573  004CF6  ECC7  F038         	call	i2_Lcd_Out
 13574                           
 13575                           ;main.c: 253: Lcd_Out(3, 0, txt3e);
 13576  004CFA  0E00               	movlw	0
 13577  004CFC  6E04               	movwf	i2Lcd_Out@x^0,c
 13578  004CFE  0E11               	movlw	low _txt3e
 13579  004D00  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13580  004D02  0E01               	movlw	high _txt3e
 13581  004D04  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13582  004D06  0E03               	movlw	3
 13583  004D08  ECC7  F038         	call	i2_Lcd_Out
 13584                           
 13585                           ;main.c: 254: Lcd_Out(4, 0, txt0);
 13586  004D0C  0E00               	movlw	0
 13587  004D0E  6E04               	movwf	i2Lcd_Out@x^0,c
 13588  004D10  0E00               	movlw	low _txt0
 13589  004D12  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13590  004D14  0E01               	movlw	high _txt0
 13591  004D16  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13592  004D18  0E04               	movlw	4
 13593  004D1A  ECC7  F038         	call	i2_Lcd_Out
 13594  004D1E                     i2l8134:
 13595                           
 13596                           ;main.c: 255: };main.c: 256: if ((estados[0] == 2) && (estados[1] != 2))
 13597  004D1E  C074  FFD9         	movff	i2atualizatela@estados,fsr2l
 13598  004D22  C075  FFDA         	movff	i2atualizatela@estados+1,fsr2h
 13599  004D26  0E02               	movlw	2
 13600  004D28  18DE               	xorwf	postinc2,w,c
 13601  004D2A  10DE               	iorwf	postinc2,w,c
 13602  004D2C  A4D8               	btfss	status,2,c
 13603  004D2E  EF9B  F026         	goto	i2u1063_41
 13604  004D32  EF9D  F026         	goto	i2u1063_40
 13605  004D36                     i2u1063_41:
 13606  004D36  EF13  F027         	goto	i2l8154
 13607  004D3A                     i2u1063_40:
 13608  004D3A  EE20 F002          	lfsr	2,2
 13609  004D3E  5074               	movf	i2atualizatela@estados^0,w,c
 13610  004D40  26D9               	addwf	fsr2l,f,c
 13611  004D42  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13612  004D44  22DA               	addwfc	fsr2h,f,c
 13613  004D46  0E02               	movlw	2
 13614  004D48  18DE               	xorwf	postinc2,w,c
 13615  004D4A  10DE               	iorwf	postinc2,w,c
 13616  004D4C  B4D8               	btfsc	status,2,c
 13617  004D4E  EFAB  F026         	goto	i2u1064_41
 13618  004D52  EFAD  F026         	goto	i2u1064_40
 13619  004D56                     i2u1064_41:
 13620  004D56  EF13  F027         	goto	i2l8154
 13621  004D5A                     i2u1064_40:
 13622  004D5A                     
 13623                           ;main.c: 257: {;main.c: 258: if (estados[1] == 0)
 13624  004D5A  EE20 F002          	lfsr	2,2
 13625  004D5E  5074               	movf	i2atualizatela@estados^0,w,c
 13626  004D60  26D9               	addwf	fsr2l,f,c
 13627  004D62  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13628  004D64  22DA               	addwfc	fsr2h,f,c
 13629  004D66  50DE               	movf	postinc2,w,c
 13630  004D68  10DE               	iorwf	postinc2,w,c
 13631  004D6A  A4D8               	btfss	status,2,c
 13632  004D6C  EFBA  F026         	goto	i2u1065_41
 13633  004D70  EFBC  F026         	goto	i2u1065_40
 13634  004D74                     i2u1065_41:
 13635  004D74  EFC7  F026         	goto	i2l8142
 13636  004D78                     i2u1065_40:
 13637  004D78                     
 13638                           ;main.c: 259: {;main.c: 260: Lcd_Out(2, 6, "AUTO  ");
 13639  004D78  0E06               	movlw	6
 13640  004D7A  6E04               	movwf	i2Lcd_Out@x^0,c
 13641  004D7C  0EB2               	movlw	low STR_2
 13642  004D7E  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13643  004D80  0E06               	movlw	high STR_2
 13644  004D82  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13645  004D84  0E02               	movlw	2
 13646  004D86  ECC7  F038         	call	i2_Lcd_Out
 13647                           
 13648                           ;main.c: 261: }
 13649  004D8A  EFDF  F026         	goto	i2l8146
 13650  004D8E                     i2l8142:
 13651                           
 13652                           ;main.c: 262: else if (estados[1] == 1)
 13653  004D8E  EE20 F002          	lfsr	2,2
 13654  004D92  5074               	movf	i2atualizatela@estados^0,w,c
 13655  004D94  26D9               	addwf	fsr2l,f,c
 13656  004D96  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13657  004D98  22DA               	addwfc	fsr2h,f,c
 13658  004D9A  04DE               	decf	postinc2,w,c
 13659  004D9C  10DE               	iorwf	postinc2,w,c
 13660  004D9E  A4D8               	btfss	status,2,c
 13661  004DA0  EFD4  F026         	goto	i2u1066_41
 13662  004DA4  EFD6  F026         	goto	i2u1066_40
 13663  004DA8                     i2u1066_41:
 13664  004DA8  EFDF  F026         	goto	i2l8146
 13665  004DAC                     i2u1066_40:
 13666  004DAC                     
 13667                           ;main.c: 263: {;main.c: 264: Lcd_Out(2, 6, "MANUAL    ");
 13668  004DAC  0E06               	movlw	6
 13669  004DAE  6E04               	movwf	i2Lcd_Out@x^0,c
 13670  004DB0  0E95               	movlw	low STR_3
 13671  004DB2  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13672  004DB4  0E06               	movlw	high STR_3
 13673  004DB6  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13674  004DB8  0E02               	movlw	2
 13675  004DBA  ECC7  F038         	call	i2_Lcd_Out
 13676  004DBE                     i2l8146:
 13677                           
 13678                           ;main.c: 265: };main.c: 266: if (estados[2] == 0)
 13679  004DBE  EE20 F004          	lfsr	2,4
 13680  004DC2  5074               	movf	i2atualizatela@estados^0,w,c
 13681  004DC4  26D9               	addwf	fsr2l,f,c
 13682  004DC6  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13683  004DC8  22DA               	addwfc	fsr2h,f,c
 13684  004DCA  50DE               	movf	postinc2,w,c
 13685  004DCC  10DE               	iorwf	postinc2,w,c
 13686  004DCE  A4D8               	btfss	status,2,c
 13687  004DD0  EFEC  F026         	goto	i2u1067_41
 13688  004DD4  EFEE  F026         	goto	i2u1067_40
 13689  004DD8                     i2u1067_41:
 13690  004DD8  EFF9  F026         	goto	i2l8150
 13691  004DDC                     i2u1067_40:
 13692  004DDC                     
 13693                           ;main.c: 267: {;main.c: 268: Lcd_Out(3, 8, "DESL    ");
 13694  004DDC  0E08               	movlw	8
 13695  004DDE  6E04               	movwf	i2Lcd_Out@x^0,c
 13696  004DE0  0EA9               	movlw	low STR_4
 13697  004DE2  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13698  004DE4  0E06               	movlw	high STR_4
 13699  004DE6  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13700  004DE8  0E03               	movlw	3
 13701  004DEA  ECC7  F038         	call	i2_Lcd_Out
 13702                           
 13703                           ;main.c: 269: }
 13704  004DEE  EF10  F028         	goto	i2l8178
 13705  004DF2                     i2l8150:
 13706                           
 13707                           ;main.c: 270: else if (estados[2] == 1)
 13708  004DF2  EE20 F004          	lfsr	2,4
 13709  004DF6  5074               	movf	i2atualizatela@estados^0,w,c
 13710  004DF8  26D9               	addwf	fsr2l,f,c
 13711  004DFA  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13712  004DFC  22DA               	addwfc	fsr2h,f,c
 13713  004DFE  04DE               	decf	postinc2,w,c
 13714  004E00  10DE               	iorwf	postinc2,w,c
 13715  004E02  A4D8               	btfss	status,2,c
 13716  004E04  EF06  F027         	goto	i2u1068_41
 13717  004E08  EF08  F027         	goto	i2u1068_40
 13718  004E0C                     i2u1068_41:
 13719  004E0C  EF10  F028         	goto	i2l8178
 13720  004E10                     i2u1068_40:
 13721  004E10                     
 13722                           ;main.c: 271: {;main.c: 272: Lcd_Out(3, 8, "LIG     ");
 13723  004E10  0E08               	movlw	8
 13724  004E12  6E04               	movwf	i2Lcd_Out@x^0,c
 13725  004E14  0EA0               	movlw	low STR_5
 13726  004E16  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13727  004E18  0E06               	movlw	high STR_5
 13728  004E1A  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13729  004E1C  0E03               	movlw	3
 13730  004E1E  ECC7  F038         	call	i2_Lcd_Out
 13731  004E22  EF10  F028         	goto	i2l8178
 13732  004E26                     i2l8154:
 13733                           
 13734                           ;main.c: 275: else if (estados[0] == 1 && (estados[1] != 2))
 13735  004E26  C074  FFD9         	movff	i2atualizatela@estados,fsr2l
 13736  004E2A  C075  FFDA         	movff	i2atualizatela@estados+1,fsr2h
 13737  004E2E  04DE               	decf	postinc2,w,c
 13738  004E30  10DE               	iorwf	postinc2,w,c
 13739  004E32  A4D8               	btfss	status,2,c
 13740  004E34  EF1E  F027         	goto	i2u1069_41
 13741  004E38  EF20  F027         	goto	i2u1069_40
 13742  004E3C                     i2u1069_41:
 13743  004E3C  EF60  F027         	goto	i2l8164
 13744  004E40                     i2u1069_40:
 13745  004E40  EE20 F002          	lfsr	2,2
 13746  004E44  5074               	movf	i2atualizatela@estados^0,w,c
 13747  004E46  26D9               	addwf	fsr2l,f,c
 13748  004E48  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13749  004E4A  22DA               	addwfc	fsr2h,f,c
 13750  004E4C  0E02               	movlw	2
 13751  004E4E  18DE               	xorwf	postinc2,w,c
 13752  004E50  10DE               	iorwf	postinc2,w,c
 13753  004E52  B4D8               	btfsc	status,2,c
 13754  004E54  EF2E  F027         	goto	i2u1070_41
 13755  004E58  EF30  F027         	goto	i2u1070_40
 13756  004E5C                     i2u1070_41:
 13757  004E5C  EF60  F027         	goto	i2l8164
 13758  004E60                     i2u1070_40:
 13759  004E60                     
 13760                           ;main.c: 276: {;main.c: 277: sprintf(str, "%02d", minCXI);
 13761  004E60  0ED9               	movlw	low _str
 13762  004E62  6E4D               	movwf	i2sprintf@sp^0,c
 13763  004E64  0E01               	movlw	high _str
 13764  004E66  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 13765  004E68  0ED4               	movlw	low (STR_12+1)
 13766  004E6A  6E4F               	movwf	i2sprintf@f^0,c
 13767  004E6C  0E06               	movlw	high (STR_12+1)
 13768  004E6E  6E50               	movwf	(i2sprintf@f+1)^0,c
 13769  004E70  C0ED  F051         	movff	_minCXI,?i2_sprintf+4
 13770  004E74  C0EE  F052         	movff	_minCXI+1,?i2_sprintf+5
 13771  004E78  ECA1  F00A         	call	i2_sprintf	;wreg free
 13772  004E7C                     
 13773                           ;main.c: 278: Lcd_Out(2, 12, str);
 13774  004E7C  0E0C               	movlw	12
 13775  004E7E  6E04               	movwf	i2Lcd_Out@x^0,c
 13776  004E80  0ED9               	movlw	low _str
 13777  004E82  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13778  004E84  0E01               	movlw	high _str
 13779  004E86  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13780  004E88  0E02               	movlw	2
 13781  004E8A  ECC7  F038         	call	i2_Lcd_Out
 13782  004E8E                     
 13783                           ;main.c: 279: sprintf(str, "%02d", minCXS);
 13784  004E8E  0ED9               	movlw	low _str
 13785  004E90  6E4D               	movwf	i2sprintf@sp^0,c
 13786  004E92  0E01               	movlw	high _str
 13787  004E94  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 13788  004E96  0ED4               	movlw	low (STR_12+1)
 13789  004E98  6E4F               	movwf	i2sprintf@f^0,c
 13790  004E9A  0E06               	movlw	high (STR_12+1)
 13791  004E9C  6E50               	movwf	(i2sprintf@f+1)^0,c
 13792  004E9E  C0EB  F051         	movff	_minCXS,?i2_sprintf+4
 13793  004EA2  C0EC  F052         	movff	_minCXS+1,?i2_sprintf+5
 13794  004EA6  ECA1  F00A         	call	i2_sprintf	;wreg free
 13795                           
 13796                           ;main.c: 280: Lcd_Out(3, 12, str);
 13797  004EAA  0E0C               	movlw	12
 13798  004EAC  6E04               	movwf	i2Lcd_Out@x^0,c
 13799  004EAE  0ED9               	movlw	low _str
 13800  004EB0  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13801  004EB2  0E01               	movlw	high _str
 13802  004EB4  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13803  004EB6  0E03               	movlw	3
 13804  004EB8  ECC7  F038         	call	i2_Lcd_Out
 13805                           
 13806                           ;main.c: 281: }
 13807  004EBC  EF10  F028         	goto	i2l8178
 13808  004EC0                     i2l8164:
 13809                           
 13810                           ;main.c: 282: else if (estados[0] == 3 && (estados[1] != 2))
 13811  004EC0  C074  FFD9         	movff	i2atualizatela@estados,fsr2l
 13812  004EC4  C075  FFDA         	movff	i2atualizatela@estados+1,fsr2h
 13813  004EC8  0E03               	movlw	3
 13814  004ECA  18DE               	xorwf	postinc2,w,c
 13815  004ECC  10DE               	iorwf	postinc2,w,c
 13816  004ECE  A4D8               	btfss	status,2,c
 13817  004ED0  EF6C  F027         	goto	i2u1071_41
 13818  004ED4  EF6E  F027         	goto	i2u1071_40
 13819  004ED8                     i2u1071_41:
 13820  004ED8  EF10  F028         	goto	i2l8178
 13821  004EDC                     i2u1071_40:
 13822  004EDC  EE20 F002          	lfsr	2,2
 13823  004EE0  5074               	movf	i2atualizatela@estados^0,w,c
 13824  004EE2  26D9               	addwf	fsr2l,f,c
 13825  004EE4  5075               	movf	(i2atualizatela@estados+1)^0,w,c
 13826  004EE6  22DA               	addwfc	fsr2h,f,c
 13827  004EE8  0E02               	movlw	2
 13828  004EEA  18DE               	xorwf	postinc2,w,c
 13829  004EEC  10DE               	iorwf	postinc2,w,c
 13830  004EEE  B4D8               	btfsc	status,2,c
 13831  004EF0  EF7C  F027         	goto	i2u1072_41
 13832  004EF4  EF7E  F027         	goto	i2u1072_40
 13833  004EF8                     i2u1072_41:
 13834  004EF8  EF10  F028         	goto	i2l8178
 13835  004EFC                     i2u1072_40:
 13836  004EFC                     
 13837                           ;main.c: 283: {;main.c: 284: leituraCXI();
 13838  004EFC  EC12  F03E         	call	i2_leituraCXI	;wreg free
 13839                           
 13840                           ;main.c: 285: leituraCXS();
 13841  004F00  ECD5  F03D         	call	i2_leituraCXS	;wreg free
 13842                           
 13843                           ;main.c: 286: sprintf(str, "%04.2f", (tensaoCXI*100.0)/5.0);
 13844  004F04  0E00               	movlw	0
 13845  004F06  6E13               	movwf	i2___flmul@a^0,c
 13846  004F08  0E00               	movlw	0
 13847  004F0A  6E14               	movwf	(i2___flmul@a+1)^0,c
 13848  004F0C  0EC8               	movlw	200
 13849  004F0E  6E15               	movwf	(i2___flmul@a+2)^0,c
 13850  004F10  0E42               	movlw	66
 13851  004F12  6E16               	movwf	(i2___flmul@a+3)^0,c
 13852  004F14  C0E7  F00F         	movff	_tensaoCXI,i2___flmul@b
 13853  004F18  C0E8  F010         	movff	_tensaoCXI+1,i2___flmul@b+1
 13854  004F1C  C0E9  F011         	movff	_tensaoCXI+2,i2___flmul@b+2
 13855  004F20  C0EA  F012         	movff	_tensaoCXI+3,i2___flmul@b+3
 13856  004F24  ECB9  F01A         	call	i2___flmul	;wreg free
 13857  004F28  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 13858  004F2C  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 13859  004F30  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 13860  004F34  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 13861  004F38  0E00               	movlw	0
 13862  004F3A  6E2C               	movwf	i2___fldiv@a^0,c
 13863  004F3C  0E00               	movlw	0
 13864  004F3E  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 13865  004F40  0EA0               	movlw	160
 13866  004F42  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 13867  004F44  0E40               	movlw	64
 13868  004F46  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 13869  004F48  EC8E  F024         	call	i2___fldiv	;wreg free
 13870  004F4C  C028  F078         	movff	?i2___fldiv,i2_atualizatela$2224
 13871  004F50  C029  F079         	movff	?i2___fldiv+1,i2_atualizatela$2224+1
 13872  004F54  C02A  F07A         	movff	?i2___fldiv+2,i2_atualizatela$2224+2
 13873  004F58  C02B  F07B         	movff	?i2___fldiv+3,i2_atualizatela$2224+3
 13874  004F5C                     
 13875                           ;main.c: 286: sprintf(str, "%04.2f", (tensaoCXI*100.0)/5.0);
 13876  004F5C  0ED9               	movlw	low _str
 13877  004F5E  6E4D               	movwf	i2sprintf@sp^0,c
 13878  004F60  0E01               	movlw	high _str
 13879  004F62  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 13880  004F64  0EC0               	movlw	low STR_8
 13881  004F66  6E4F               	movwf	i2sprintf@f^0,c
 13882  004F68  0E06               	movlw	high STR_8
 13883  004F6A  6E50               	movwf	(i2sprintf@f+1)^0,c
 13884  004F6C  C078  F051         	movff	i2_atualizatela$2224,?i2_sprintf+4
 13885  004F70  C079  F052         	movff	i2_atualizatela$2224+1,?i2_sprintf+5
 13886  004F74  C07A  F053         	movff	i2_atualizatela$2224+2,?i2_sprintf+6
 13887  004F78  C07B  F054         	movff	i2_atualizatela$2224+3,?i2_sprintf+7
 13888  004F7C  ECA1  F00A         	call	i2_sprintf	;wreg free
 13889  004F80                     
 13890                           ;main.c: 287: Lcd_Out(2, 11, str);
 13891  004F80  0E0B               	movlw	11
 13892  004F82  6E04               	movwf	i2Lcd_Out@x^0,c
 13893  004F84  0ED9               	movlw	low _str
 13894  004F86  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13895  004F88  0E01               	movlw	high _str
 13896  004F8A  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13897  004F8C  0E02               	movlw	2
 13898  004F8E  ECC7  F038         	call	i2_Lcd_Out
 13899  004F92                     
 13900                           ;main.c: 288: sprintf(str, "%04.2f", (tensaoCXS*100.0)/5.0);
 13901  004F92  0E00               	movlw	0
 13902  004F94  6E13               	movwf	i2___flmul@a^0,c
 13903  004F96  0E00               	movlw	0
 13904  004F98  6E14               	movwf	(i2___flmul@a+1)^0,c
 13905  004F9A  0EC8               	movlw	200
 13906  004F9C  6E15               	movwf	(i2___flmul@a+2)^0,c
 13907  004F9E  0E42               	movlw	66
 13908  004FA0  6E16               	movwf	(i2___flmul@a+3)^0,c
 13909  004FA2  C0E3  F00F         	movff	_tensaoCXS,i2___flmul@b
 13910  004FA6  C0E4  F010         	movff	_tensaoCXS+1,i2___flmul@b+1
 13911  004FAA  C0E5  F011         	movff	_tensaoCXS+2,i2___flmul@b+2
 13912  004FAE  C0E6  F012         	movff	_tensaoCXS+3,i2___flmul@b+3
 13913  004FB2  ECB9  F01A         	call	i2___flmul	;wreg free
 13914  004FB6  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 13915  004FBA  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 13916  004FBE  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 13917  004FC2  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 13918  004FC6  0E00               	movlw	0
 13919  004FC8  6E2C               	movwf	i2___fldiv@a^0,c
 13920  004FCA  0E00               	movlw	0
 13921  004FCC  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 13922  004FCE  0EA0               	movlw	160
 13923  004FD0  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 13924  004FD2  0E40               	movlw	64
 13925  004FD4  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 13926  004FD6  EC8E  F024         	call	i2___fldiv	;wreg free
 13927  004FDA  C028  F078         	movff	?i2___fldiv,i2_atualizatela$2224
 13928  004FDE  C029  F079         	movff	?i2___fldiv+1,i2_atualizatela$2224+1
 13929  004FE2  C02A  F07A         	movff	?i2___fldiv+2,i2_atualizatela$2224+2
 13930  004FE6  C02B  F07B         	movff	?i2___fldiv+3,i2_atualizatela$2224+3
 13931  004FEA                     
 13932                           ;main.c: 288: sprintf(str, "%04.2f", (tensaoCXS*100.0)/5.0);
 13933  004FEA  0ED9               	movlw	low _str
 13934  004FEC  6E4D               	movwf	i2sprintf@sp^0,c
 13935  004FEE  0E01               	movlw	high _str
 13936  004FF0  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 13937  004FF2  0EC0               	movlw	low STR_8
 13938  004FF4  6E4F               	movwf	i2sprintf@f^0,c
 13939  004FF6  0E06               	movlw	high STR_8
 13940  004FF8  6E50               	movwf	(i2sprintf@f+1)^0,c
 13941  004FFA  C078  F051         	movff	i2_atualizatela$2224,?i2_sprintf+4
 13942  004FFE  C079  F052         	movff	i2_atualizatela$2224+1,?i2_sprintf+5
 13943  005002  C07A  F053         	movff	i2_atualizatela$2224+2,?i2_sprintf+6
 13944  005006  C07B  F054         	movff	i2_atualizatela$2224+3,?i2_sprintf+7
 13945  00500A  ECA1  F00A         	call	i2_sprintf	;wreg free
 13946                           
 13947                           ;main.c: 289: Lcd_Out(3, 11, str);
 13948  00500E  0E0B               	movlw	11
 13949  005010  6E04               	movwf	i2Lcd_Out@x^0,c
 13950  005012  0ED9               	movlw	low _str
 13951  005014  6E05               	movwf	i2Lcd_Out@buffer^0,c
 13952  005016  0E01               	movlw	high _str
 13953  005018  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
 13954  00501A  0E03               	movlw	3
 13955  00501C  ECC7  F038         	call	i2_Lcd_Out
 13956  005020                     i2l8178:
 13957                           
 13958                           ;main.c: 290: };main.c: 291: _delay((unsigned long)((25)*(8000000/4000.0)));
 13959  005020  0E41               	movlw	65
 13960  005022  6E76               	movwf	??i2_atualizatela^0,c
 13961  005024  0EEE               	movlw	238
 13962  005026                     i2u1440_47:
 13963  005026  2EE8               	decfsz	wreg,f,c
 13964  005028  D7FE               	bra	i2u1440_47
 13965  00502A  2E76               	decfsz	??i2_atualizatela^0,f,c
 13966  00502C  D7FC               	bra	i2u1440_47
 13967  00502E  D000               	nop2	
 13968  005030  0012               	return		;funcret
 13969  005032                     __end_ofi2_atualizatela:
 13970                           	callstack 0
 13971                           
 13972 ;; *************** function i2_leituraCXS *****************
 13973 ;; Defined at:
 13974 ;;		line 202 in file "main.c"
 13975 ;; Parameters:    Size  Location     Type
 13976 ;;		None
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;		None
 13979 ;; Return value:  Size  Location     Type
 13980 ;;                  1    wreg      void 
 13981 ;; Registers used:
 13982 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13983 ;; Tracked objects:
 13984 ;;		On entry : 0/0
 13985 ;;		On exit  : 0/0
 13986 ;;		Unchanged: 0/0
 13987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13988 ;;      Params:         0       0       0       0       0       0       0
 13989 ;;      Locals:         0       0       0       0       0       0       0
 13990 ;;      Temps:          0       0       0       0       0       0       0
 13991 ;;      Totals:         0       0       0       0       0       0       0
 13992 ;;Total ram usage:        0 bytes
 13993 ;; Hardware stack levels used:    1
 13994 ;; Hardware stack levels required when called:    1
 13995 ;; This function calls:
 13996 ;;		i2___fldiv
 13997 ;;		i2___flmul
 13998 ;;		i2___xxtofl
 13999 ;;		i2_adc_amostra
 14000 ;; This function is called by:
 14001 ;;		i2_atualizatela
 14002 ;; This function uses a non-reentrant model
 14003 ;;
 14004                           
 14005                           	psect	text43
 14006  007BAA                     __ptext43:
 14007                           	callstack 0
 14008  007BAA                     i2_leituraCXS:
 14009                           	callstack 23
 14010  007BAA                     
 14011                           ;main.c: 204: nivelCXS = (adc_amostra(1));
 14012  007BAA  0E01               	movlw	1
 14013  007BAC  EC97  F03D         	call	i2_adc_amostra
 14014  007BB0  C001  F1B9         	movff	?i2_adc_amostra,_nivelCXS
 14015  007BB4  C002  F1BA         	movff	?i2_adc_amostra+1,_nivelCXS+1
 14016  007BB8                     
 14017                           ;main.c: 205: tensaoCXS = (nivelCXS*5.0)/1023;
 14018  007BB8  0E00               	movlw	0
 14019  007BBA  6E13               	movwf	i2___flmul@a^0,c
 14020  007BBC  0E00               	movlw	0
 14021  007BBE  6E14               	movwf	(i2___flmul@a+1)^0,c
 14022  007BC0  0EA0               	movlw	160
 14023  007BC2  6E15               	movwf	(i2___flmul@a+2)^0,c
 14024  007BC4  0E40               	movlw	64
 14025  007BC6  6E16               	movwf	(i2___flmul@a+3)^0,c
 14026  007BC8  C1B9  F001         	movff	_nivelCXS,i2___xxtofl@val
 14027  007BCC  C1BA  F002         	movff	_nivelCXS+1,i2___xxtofl@val+1
 14028  007BD0  6A03               	clrf	(i2___xxtofl@val+2)^0,c
 14029  007BD2  6A04               	clrf	(i2___xxtofl@val+3)^0,c
 14030  007BD4  0E00               	movlw	0
 14031  007BD6  EC90  F02C         	call	i2___xxtofl
 14032  007BDA  C001  F00F         	movff	?i2___xxtofl,i2___flmul@b
 14033  007BDE  C002  F010         	movff	?i2___xxtofl+1,i2___flmul@b+1
 14034  007BE2  C003  F011         	movff	?i2___xxtofl+2,i2___flmul@b+2
 14035  007BE6  C004  F012         	movff	?i2___xxtofl+3,i2___flmul@b+3
 14036  007BEA  ECB9  F01A         	call	i2___flmul	;wreg free
 14037  007BEE  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 14038  007BF2  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 14039  007BF6  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 14040  007BFA  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 14041  007BFE  0E00               	movlw	0
 14042  007C00  6E2C               	movwf	i2___fldiv@a^0,c
 14043  007C02  0EC0               	movlw	192
 14044  007C04  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 14045  007C06  0E7F               	movlw	127
 14046  007C08  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 14047  007C0A  0E44               	movlw	68
 14048  007C0C  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 14049  007C0E  EC8E  F024         	call	i2___fldiv	;wreg free
 14050  007C12  C028  F0E3         	movff	?i2___fldiv,_tensaoCXS
 14051  007C16  C029  F0E4         	movff	?i2___fldiv+1,_tensaoCXS+1
 14052  007C1A  C02A  F0E5         	movff	?i2___fldiv+2,_tensaoCXS+2
 14053  007C1E  C02B  F0E6         	movff	?i2___fldiv+3,_tensaoCXS+3
 14054  007C22  0012               	return		;funcret
 14055  007C24                     __end_ofi2_leituraCXS:
 14056                           	callstack 0
 14057                           
 14058 ;; *************** function i2_leituraCXI *****************
 14059 ;; Defined at:
 14060 ;;		line 197 in file "main.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;		None
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;		None
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14074 ;;      Params:         0       0       0       0       0       0       0
 14075 ;;      Locals:         0       0       0       0       0       0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0
 14077 ;;      Totals:         0       0       0       0       0       0       0
 14078 ;;Total ram usage:        0 bytes
 14079 ;; Hardware stack levels used:    1
 14080 ;; Hardware stack levels required when called:    1
 14081 ;; This function calls:
 14082 ;;		i2___fldiv
 14083 ;;		i2___flmul
 14084 ;;		i2___xxtofl
 14085 ;;		i2_adc_amostra
 14086 ;; This function is called by:
 14087 ;;		i2_atualizatela
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091                           	psect	text44
 14092  007C24                     __ptext44:
 14093                           	callstack 0
 14094  007C24                     i2_leituraCXI:
 14095                           	callstack 23
 14096  007C24                     
 14097                           ;main.c: 199: nivelCXI = (adc_amostra(0));
 14098  007C24  0E00               	movlw	0
 14099  007C26  EC97  F03D         	call	i2_adc_amostra
 14100  007C2A  C001  F1BB         	movff	?i2_adc_amostra,_nivelCXI
 14101  007C2E  C002  F1BC         	movff	?i2_adc_amostra+1,_nivelCXI+1
 14102  007C32                     
 14103                           ;main.c: 200: tensaoCXI = (nivelCXI*5.0)/1023;
 14104  007C32  0E00               	movlw	0
 14105  007C34  6E13               	movwf	i2___flmul@a^0,c
 14106  007C36  0E00               	movlw	0
 14107  007C38  6E14               	movwf	(i2___flmul@a+1)^0,c
 14108  007C3A  0EA0               	movlw	160
 14109  007C3C  6E15               	movwf	(i2___flmul@a+2)^0,c
 14110  007C3E  0E40               	movlw	64
 14111  007C40  6E16               	movwf	(i2___flmul@a+3)^0,c
 14112  007C42  C1BB  F001         	movff	_nivelCXI,i2___xxtofl@val
 14113  007C46  C1BC  F002         	movff	_nivelCXI+1,i2___xxtofl@val+1
 14114  007C4A  6A03               	clrf	(i2___xxtofl@val+2)^0,c
 14115  007C4C  6A04               	clrf	(i2___xxtofl@val+3)^0,c
 14116  007C4E  0E00               	movlw	0
 14117  007C50  EC90  F02C         	call	i2___xxtofl
 14118  007C54  C001  F00F         	movff	?i2___xxtofl,i2___flmul@b
 14119  007C58  C002  F010         	movff	?i2___xxtofl+1,i2___flmul@b+1
 14120  007C5C  C003  F011         	movff	?i2___xxtofl+2,i2___flmul@b+2
 14121  007C60  C004  F012         	movff	?i2___xxtofl+3,i2___flmul@b+3
 14122  007C64  ECB9  F01A         	call	i2___flmul	;wreg free
 14123  007C68  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 14124  007C6C  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 14125  007C70  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 14126  007C74  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 14127  007C78  0E00               	movlw	0
 14128  007C7A  6E2C               	movwf	i2___fldiv@a^0,c
 14129  007C7C  0EC0               	movlw	192
 14130  007C7E  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 14131  007C80  0E7F               	movlw	127
 14132  007C82  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 14133  007C84  0E44               	movlw	68
 14134  007C86  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 14135  007C88  EC8E  F024         	call	i2___fldiv	;wreg free
 14136  007C8C  C028  F0E7         	movff	?i2___fldiv,_tensaoCXI
 14137  007C90  C029  F0E8         	movff	?i2___fldiv+1,_tensaoCXI+1
 14138  007C94  C02A  F0E9         	movff	?i2___fldiv+2,_tensaoCXI+2
 14139  007C98  C02B  F0EA         	movff	?i2___fldiv+3,_tensaoCXI+3
 14140  007C9C  0012               	return		;funcret
 14141  007C9E                     __end_ofi2_leituraCXI:
 14142                           	callstack 0
 14143                           
 14144 ;; *************** function i2___fldiv *****************
 14145 ;; Defined at:
 14146 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  b               4   39[COMRAM] void 
 14149 ;;  a               4   43[COMRAM] void 
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  grs             4   58[COMRAM] unsigned long 
 14152 ;;  rem             4   51[COMRAM] unsigned long 
 14153 ;;  new_exp         2   56[COMRAM] int 
 14154 ;;  aexp            1   63[COMRAM] unsigned char 
 14155 ;;  bexp            1   62[COMRAM] unsigned char 
 14156 ;;  sign            1   55[COMRAM] unsigned char 
 14157 ;; Return value:  Size  Location     Type
 14158 ;;                  4   39[COMRAM] unsigned char 
 14159 ;; Registers used:
 14160 ;;		wreg, status,2, status,0
 14161 ;; Tracked objects:
 14162 ;;		On entry : 0/0
 14163 ;;		On exit  : 0/0
 14164 ;;		Unchanged: 0/0
 14165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14166 ;;      Params:         8       0       0       0       0       0       0
 14167 ;;      Locals:        13       0       0       0       0       0       0
 14168 ;;      Temps:          4       0       0       0       0       0       0
 14169 ;;      Totals:        25       0       0       0       0       0       0
 14170 ;;Total ram usage:       25 bytes
 14171 ;; Hardware stack levels used:    1
 14172 ;; This function calls:
 14173 ;;		Nothing
 14174 ;; This function is called by:
 14175 ;;		i2_leituraCXI
 14176 ;;		i2_leituraCXS
 14177 ;;		i2_atualizatela
 14178 ;; This function uses a non-reentrant model
 14179 ;;
 14180                           
 14181                           	psect	text45
 14182  00491C                     __ptext45:
 14183                           	callstack 0
 14184  00491C                     i2___fldiv:
 14185                           	callstack 23
 14186  00491C  502B               	movf	(i2___fldiv@b+3)^0,w,c
 14187  00491E  0B80               	andlw	128
 14188  004920  6E38               	movwf	i2___fldiv@sign^0,c
 14189  004922  502B               	movf	(i2___fldiv@b+3)^0,w,c
 14190  004924  242B               	addwf	(i2___fldiv@b+3)^0,w,c
 14191  004926  6E3F               	movwf	i2___fldiv@bexp^0,c
 14192  004928  AE2A               	btfss	(i2___fldiv@b+2)^0,7,c
 14193  00492A  EF99  F024         	goto	i2u857_41
 14194  00492E  EF9B  F024         	goto	i2u857_40
 14195  004932                     i2u857_41:
 14196  004932  EF9C  F024         	goto	i2l6838
 14197  004936                     i2u857_40:
 14198  004936  803F               	bsf	i2___fldiv@bexp^0,0,c
 14199  004938                     i2l6838:
 14200  004938  503F               	movf	i2___fldiv@bexp^0,w,c
 14201  00493A  B4D8               	btfsc	status,2,c
 14202  00493C  EFA2  F024         	goto	i2u858_41
 14203  004940  EFA4  F024         	goto	i2u858_40
 14204  004944                     i2u858_41:
 14205  004944  EFB9  F024         	goto	i2l6848
 14206  004948                     i2u858_40:
 14207  004948  283F               	incf	i2___fldiv@bexp^0,w,c
 14208  00494A  A4D8               	btfss	status,2,c
 14209  00494C  EFAA  F024         	goto	i2u859_41
 14210  004950  EFAC  F024         	goto	i2u859_40
 14211  004954                     i2u859_41:
 14212  004954  EFB4  F024         	goto	i2l6844
 14213  004958                     i2u859_40:
 14214  004958  0E00               	movlw	0
 14215  00495A  6E28               	movwf	i2___fldiv@b^0,c
 14216  00495C  0E00               	movlw	0
 14217  00495E  6E29               	movwf	(i2___fldiv@b+1)^0,c
 14218  004960  0E00               	movlw	0
 14219  004962  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 14220  004964  0E00               	movlw	0
 14221  004966  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14222  004968                     i2l6844:
 14223  004968  8E2A               	bsf	(i2___fldiv@b+2)^0,7,c
 14224  00496A  0E00               	movlw	0
 14225  00496C  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14226  00496E  EFC1  F024         	goto	i2l6850
 14227  004972                     i2l6848:
 14228  004972  0E00               	movlw	0
 14229  004974  6E28               	movwf	i2___fldiv@b^0,c
 14230  004976  0E00               	movlw	0
 14231  004978  6E29               	movwf	(i2___fldiv@b+1)^0,c
 14232  00497A  0E00               	movlw	0
 14233  00497C  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 14234  00497E  0E00               	movlw	0
 14235  004980  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14236  004982                     i2l6850:
 14237  004982  502F               	movf	(i2___fldiv@a+3)^0,w,c
 14238  004984  0B80               	andlw	128
 14239  004986  1A38               	xorwf	i2___fldiv@sign^0,f,c
 14240  004988  502F               	movf	(i2___fldiv@a+3)^0,w,c
 14241  00498A  242F               	addwf	(i2___fldiv@a+3)^0,w,c
 14242  00498C  6E40               	movwf	i2___fldiv@aexp^0,c
 14243  00498E  AE2E               	btfss	(i2___fldiv@a+2)^0,7,c
 14244  004990  EFCC  F024         	goto	i2u860_41
 14245  004994  EFCE  F024         	goto	i2u860_40
 14246  004998                     i2u860_41:
 14247  004998  EFCF  F024         	goto	i2l6858
 14248  00499C                     i2u860_40:
 14249  00499C  8040               	bsf	i2___fldiv@aexp^0,0,c
 14250  00499E                     i2l6858:
 14251  00499E  5040               	movf	i2___fldiv@aexp^0,w,c
 14252  0049A0  B4D8               	btfsc	status,2,c
 14253  0049A2  EFD5  F024         	goto	i2u861_41
 14254  0049A6  EFD7  F024         	goto	i2u861_40
 14255  0049AA                     i2u861_41:
 14256  0049AA  EFEC  F024         	goto	i2l6868
 14257  0049AE                     i2u861_40:
 14258  0049AE  2840               	incf	i2___fldiv@aexp^0,w,c
 14259  0049B0  A4D8               	btfss	status,2,c
 14260  0049B2  EFDD  F024         	goto	i2u862_41
 14261  0049B6  EFDF  F024         	goto	i2u862_40
 14262  0049BA                     i2u862_41:
 14263  0049BA  EFE7  F024         	goto	i2l6864
 14264  0049BE                     i2u862_40:
 14265  0049BE  0E00               	movlw	0
 14266  0049C0  6E2C               	movwf	i2___fldiv@a^0,c
 14267  0049C2  0E00               	movlw	0
 14268  0049C4  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 14269  0049C6  0E00               	movlw	0
 14270  0049C8  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 14271  0049CA  0E00               	movlw	0
 14272  0049CC  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 14273  0049CE                     i2l6864:
 14274  0049CE  8E2E               	bsf	(i2___fldiv@a+2)^0,7,c
 14275  0049D0  0E00               	movlw	0
 14276  0049D2  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 14277  0049D4  EFF4  F024         	goto	i2l6870
 14278  0049D8                     i2l6868:
 14279  0049D8  0E00               	movlw	0
 14280  0049DA  6E2C               	movwf	i2___fldiv@a^0,c
 14281  0049DC  0E00               	movlw	0
 14282  0049DE  6E2D               	movwf	(i2___fldiv@a+1)^0,c
 14283  0049E0  0E00               	movlw	0
 14284  0049E2  6E2E               	movwf	(i2___fldiv@a+2)^0,c
 14285  0049E4  0E00               	movlw	0
 14286  0049E6  6E2F               	movwf	(i2___fldiv@a+3)^0,c
 14287  0049E8                     i2l6870:
 14288  0049E8  502C               	movf	i2___fldiv@a^0,w,c
 14289  0049EA  102D               	iorwf	(i2___fldiv@a+1)^0,w,c
 14290  0049EC  102E               	iorwf	(i2___fldiv@a+2)^0,w,c
 14291  0049EE  102F               	iorwf	(i2___fldiv@a+3)^0,w,c
 14292  0049F0  A4D8               	btfss	status,2,c
 14293  0049F2  EFFD  F024         	goto	i2u863_41
 14294  0049F6  EFFF  F024         	goto	i2u863_40
 14295  0049FA                     i2u863_41:
 14296  0049FA  EF17  F025         	goto	i2l6882
 14297  0049FE                     i2u863_40:
 14298  0049FE  0E00               	movlw	0
 14299  004A00  6E28               	movwf	i2___fldiv@b^0,c
 14300  004A02  0E00               	movlw	0
 14301  004A04  6E29               	movwf	(i2___fldiv@b+1)^0,c
 14302  004A06  0E00               	movlw	0
 14303  004A08  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 14304  004A0A  0E00               	movlw	0
 14305  004A0C  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14306  004A0E  0E80               	movlw	128
 14307  004A10  122A               	iorwf	(i2___fldiv@b+2)^0,f,c
 14308  004A12  0E7F               	movlw	127
 14309  004A14  122B               	iorwf	(i2___fldiv@b+3)^0,f,c
 14310  004A16                     i2l6876:
 14311  004A16  5038               	movf	i2___fldiv@sign^0,w,c
 14312  004A18  122B               	iorwf	(i2___fldiv@b+3)^0,f,c
 14313  004A1A  C028  F028         	movff	i2___fldiv@b,?i2___fldiv
 14314  004A1E  C029  F029         	movff	i2___fldiv@b+1,?i2___fldiv+1
 14315  004A22  C02A  F02A         	movff	i2___fldiv@b+2,?i2___fldiv+2
 14316  004A26  C02B  F02B         	movff	i2___fldiv@b+3,?i2___fldiv+3
 14317  004A2A  EF5A  F026         	goto	i2l1236
 14318  004A2E                     i2l6882:
 14319  004A2E  503F               	movf	i2___fldiv@bexp^0,w,c
 14320  004A30  A4D8               	btfss	status,2,c
 14321  004A32  EF1D  F025         	goto	i2u864_41
 14322  004A36  EF1F  F025         	goto	i2u864_40
 14323  004A3A                     i2u864_41:
 14324  004A3A  EF29  F025         	goto	i2l6890
 14325  004A3E                     i2u864_40:
 14326  004A3E  0E00               	movlw	0
 14327  004A40  6E28               	movwf	?i2___fldiv^0,c
 14328  004A42  0E00               	movlw	0
 14329  004A44  6E29               	movwf	(?i2___fldiv+1)^0,c
 14330  004A46  0E00               	movlw	0
 14331  004A48  6E2A               	movwf	(?i2___fldiv+2)^0,c
 14332  004A4A  0E00               	movlw	0
 14333  004A4C  6E2B               	movwf	(?i2___fldiv+3)^0,c
 14334  004A4E  EF5A  F026         	goto	i2l1236
 14335  004A52                     i2l6890:
 14336  004A52  5040               	movf	i2___fldiv@aexp^0,w,c
 14337  004A54  C03F  F030         	movff	i2___fldiv@bexp,??i2___fldiv
 14338  004A58  6A31               	clrf	(??i2___fldiv+1)^0,c
 14339  004A5A  5E30               	subwf	??i2___fldiv^0,f,c
 14340  004A5C  0E00               	movlw	0
 14341  004A5E  5A31               	subwfb	(??i2___fldiv+1)^0,f,c
 14342  004A60  0E7F               	movlw	127
 14343  004A62  2430               	addwf	??i2___fldiv^0,w,c
 14344  004A64  6E39               	movwf	i2___fldiv@new_exp^0,c
 14345  004A66  0E00               	movlw	0
 14346  004A68  2031               	addwfc	(??i2___fldiv+1)^0,w,c
 14347  004A6A  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 14348  004A6C  C028  F034         	movff	i2___fldiv@b,i2___fldiv@rem
 14349  004A70  C029  F035         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 14350  004A74  C02A  F036         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 14351  004A78  C02B  F037         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 14352  004A7C  0E00               	movlw	0
 14353  004A7E  6E28               	movwf	i2___fldiv@b^0,c
 14354  004A80  0E00               	movlw	0
 14355  004A82  6E29               	movwf	(i2___fldiv@b+1)^0,c
 14356  004A84  0E00               	movlw	0
 14357  004A86  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 14358  004A88  0E00               	movlw	0
 14359  004A8A  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14360  004A8C  0E00               	movlw	0
 14361  004A8E  6E3B               	movwf	i2___fldiv@grs^0,c
 14362  004A90  0E00               	movlw	0
 14363  004A92  6E3C               	movwf	(i2___fldiv@grs+1)^0,c
 14364  004A94  0E00               	movlw	0
 14365  004A96  6E3D               	movwf	(i2___fldiv@grs+2)^0,c
 14366  004A98  0E00               	movlw	0
 14367  004A9A  6E3E               	movwf	(i2___fldiv@grs+3)^0,c
 14368  004A9C  0E00               	movlw	0
 14369  004A9E  6E40               	movwf	i2___fldiv@aexp^0,c
 14370  004AA0  EF8A  F025         	goto	i2l1238
 14371  004AA4                     i2l6900:
 14372  004AA4  5040               	movf	i2___fldiv@aexp^0,w,c
 14373  004AA6  B4D8               	btfsc	status,2,c
 14374  004AA8  EF58  F025         	goto	i2u865_41
 14375  004AAC  EF5A  F025         	goto	i2u865_40
 14376  004AB0                     i2u865_41:
 14377  004AB0  EF71  F025         	goto	i2l6908
 14378  004AB4                     i2u865_40:
 14379  004AB4  90D8               	bcf	status,0,c
 14380  004AB6  3634               	rlcf	i2___fldiv@rem^0,f,c
 14381  004AB8  3635               	rlcf	(i2___fldiv@rem+1)^0,f,c
 14382  004ABA  3636               	rlcf	(i2___fldiv@rem+2)^0,f,c
 14383  004ABC  3637               	rlcf	(i2___fldiv@rem+3)^0,f,c
 14384  004ABE  90D8               	bcf	status,0,c
 14385  004AC0  3628               	rlcf	i2___fldiv@b^0,f,c
 14386  004AC2  3629               	rlcf	(i2___fldiv@b+1)^0,f,c
 14387  004AC4  362A               	rlcf	(i2___fldiv@b+2)^0,f,c
 14388  004AC6  362B               	rlcf	(i2___fldiv@b+3)^0,f,c
 14389  004AC8  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 14390  004ACA  EF69  F025         	goto	i2u866_41
 14391  004ACE  EF6B  F025         	goto	i2u866_40
 14392  004AD2                     i2u866_41:
 14393  004AD2  EF6C  F025         	goto	i2l1241
 14394  004AD6                     i2u866_40:
 14395  004AD6  8028               	bsf	i2___fldiv@b^0,0,c
 14396  004AD8                     i2l1241:
 14397  004AD8  90D8               	bcf	status,0,c
 14398  004ADA  363B               	rlcf	i2___fldiv@grs^0,f,c
 14399  004ADC  363C               	rlcf	(i2___fldiv@grs+1)^0,f,c
 14400  004ADE  363D               	rlcf	(i2___fldiv@grs+2)^0,f,c
 14401  004AE0  363E               	rlcf	(i2___fldiv@grs+3)^0,f,c
 14402  004AE2                     i2l6908:
 14403  004AE2  502C               	movf	i2___fldiv@a^0,w,c
 14404  004AE4  5C34               	subwf	i2___fldiv@rem^0,w,c
 14405  004AE6  502D               	movf	(i2___fldiv@a+1)^0,w,c
 14406  004AE8  5835               	subwfb	(i2___fldiv@rem+1)^0,w,c
 14407  004AEA  502E               	movf	(i2___fldiv@a+2)^0,w,c
 14408  004AEC  5836               	subwfb	(i2___fldiv@rem+2)^0,w,c
 14409  004AEE  502F               	movf	(i2___fldiv@a+3)^0,w,c
 14410  004AF0  5837               	subwfb	(i2___fldiv@rem+3)^0,w,c
 14411  004AF2  A0D8               	btfss	status,0,c
 14412  004AF4  EF7E  F025         	goto	i2u867_41
 14413  004AF8  EF80  F025         	goto	i2u867_40
 14414  004AFC                     i2u867_41:
 14415  004AFC  EF89  F025         	goto	i2l6914
 14416  004B00                     i2u867_40:
 14417  004B00  8C3E               	bsf	(i2___fldiv@grs+3)^0,6,c
 14418  004B02  502C               	movf	i2___fldiv@a^0,w,c
 14419  004B04  5E34               	subwf	i2___fldiv@rem^0,f,c
 14420  004B06  502D               	movf	(i2___fldiv@a+1)^0,w,c
 14421  004B08  5A35               	subwfb	(i2___fldiv@rem+1)^0,f,c
 14422  004B0A  502E               	movf	(i2___fldiv@a+2)^0,w,c
 14423  004B0C  5A36               	subwfb	(i2___fldiv@rem+2)^0,f,c
 14424  004B0E  502F               	movf	(i2___fldiv@a+3)^0,w,c
 14425  004B10  5A37               	subwfb	(i2___fldiv@rem+3)^0,f,c
 14426  004B12                     i2l6914:
 14427  004B12  2A40               	incf	i2___fldiv@aexp^0,f,c
 14428  004B14                     i2l1238:
 14429  004B14  0E19               	movlw	25
 14430  004B16  6440               	cpfsgt	i2___fldiv@aexp^0,c
 14431  004B18  EF90  F025         	goto	i2u868_41
 14432  004B1C  EF92  F025         	goto	i2u868_40
 14433  004B20                     i2u868_41:
 14434  004B20  EF52  F025         	goto	i2l6900
 14435  004B24                     i2u868_40:
 14436  004B24  5034               	movf	i2___fldiv@rem^0,w,c
 14437  004B26  1035               	iorwf	(i2___fldiv@rem+1)^0,w,c
 14438  004B28  1036               	iorwf	(i2___fldiv@rem+2)^0,w,c
 14439  004B2A  1037               	iorwf	(i2___fldiv@rem+3)^0,w,c
 14440  004B2C  B4D8               	btfsc	status,2,c
 14441  004B2E  EF9B  F025         	goto	i2u869_41
 14442  004B32  EF9D  F025         	goto	i2u869_40
 14443  004B36                     i2u869_41:
 14444  004B36  EFB5  F025         	goto	i2l6926
 14445  004B3A                     i2u869_40:
 14446  004B3A  803B               	bsf	i2___fldiv@grs^0,0,c
 14447  004B3C  EFB5  F025         	goto	i2l6926
 14448  004B40                     i2l6920:
 14449  004B40  90D8               	bcf	status,0,c
 14450  004B42  3628               	rlcf	i2___fldiv@b^0,f,c
 14451  004B44  3629               	rlcf	(i2___fldiv@b+1)^0,f,c
 14452  004B46  362A               	rlcf	(i2___fldiv@b+2)^0,f,c
 14453  004B48  362B               	rlcf	(i2___fldiv@b+3)^0,f,c
 14454  004B4A  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 14455  004B4C  EFAA  F025         	goto	i2u870_41
 14456  004B50  EFAC  F025         	goto	i2u870_40
 14457  004B54                     i2u870_41:
 14458  004B54  EFAD  F025         	goto	i2l1247
 14459  004B58                     i2u870_40:
 14460  004B58  8028               	bsf	i2___fldiv@b^0,0,c
 14461  004B5A                     i2l1247:
 14462  004B5A  90D8               	bcf	status,0,c
 14463  004B5C  363B               	rlcf	i2___fldiv@grs^0,f,c
 14464  004B5E  363C               	rlcf	(i2___fldiv@grs+1)^0,f,c
 14465  004B60  363D               	rlcf	(i2___fldiv@grs+2)^0,f,c
 14466  004B62  363E               	rlcf	(i2___fldiv@grs+3)^0,f,c
 14467  004B64  0639               	decf	i2___fldiv@new_exp^0,f,c
 14468  004B66  A0D8               	btfss	status,0,c
 14469  004B68  063A               	decf	(i2___fldiv@new_exp+1)^0,f,c
 14470  004B6A                     i2l6926:
 14471  004B6A  AE2A               	btfss	(i2___fldiv@b+2)^0,7,c
 14472  004B6C  EFBA  F025         	goto	i2u871_41
 14473  004B70  EFBC  F025         	goto	i2u871_40
 14474  004B74                     i2u871_41:
 14475  004B74  EFA0  F025         	goto	i2l6920
 14476  004B78                     i2u871_40:
 14477  004B78  0E00               	movlw	0
 14478  004B7A  6E40               	movwf	i2___fldiv@aexp^0,c
 14479  004B7C  AE3E               	btfss	(i2___fldiv@grs+3)^0,7,c
 14480  004B7E  EFC3  F025         	goto	i2u872_41
 14481  004B82  EFC5  F025         	goto	i2u872_40
 14482  004B86                     i2u872_41:
 14483  004B86  EFE9  F025         	goto	i2l1249
 14484  004B8A                     i2u872_40:
 14485  004B8A  0EFF               	movlw	255
 14486  004B8C  143B               	andwf	i2___fldiv@grs^0,w,c
 14487  004B8E  6E30               	movwf	??i2___fldiv^0,c
 14488  004B90  0EFF               	movlw	255
 14489  004B92  143C               	andwf	(i2___fldiv@grs+1)^0,w,c
 14490  004B94  6E31               	movwf	(??i2___fldiv+1)^0,c
 14491  004B96  0EFF               	movlw	255
 14492  004B98  143D               	andwf	(i2___fldiv@grs+2)^0,w,c
 14493  004B9A  6E32               	movwf	(??i2___fldiv+2)^0,c
 14494  004B9C  0E7F               	movlw	127
 14495  004B9E  143E               	andwf	(i2___fldiv@grs+3)^0,w,c
 14496  004BA0  6E33               	movwf	(??i2___fldiv+3)^0,c
 14497  004BA2  5030               	movf	??i2___fldiv^0,w,c
 14498  004BA4  1031               	iorwf	(??i2___fldiv+1)^0,w,c
 14499  004BA6  1032               	iorwf	(??i2___fldiv+2)^0,w,c
 14500  004BA8  1033               	iorwf	(??i2___fldiv+3)^0,w,c
 14501  004BAA  B4D8               	btfsc	status,2,c
 14502  004BAC  EFDA  F025         	goto	i2u873_41
 14503  004BB0  EFDC  F025         	goto	i2u873_40
 14504  004BB4                     i2u873_41:
 14505  004BB4  EFE0  F025         	goto	i2l1250
 14506  004BB8                     i2u873_40:
 14507  004BB8                     i2l6934:
 14508  004BB8  0E01               	movlw	1
 14509  004BBA  6E40               	movwf	i2___fldiv@aexp^0,c
 14510  004BBC  EFE9  F025         	goto	i2l1249
 14511  004BC0                     i2l1250:
 14512  004BC0  A028               	btfss	i2___fldiv@b^0,0,c
 14513  004BC2  EFE5  F025         	goto	i2u874_41
 14514  004BC6  EFE7  F025         	goto	i2u874_40
 14515  004BCA                     i2u874_41:
 14516  004BCA  EFE9  F025         	goto	i2l1249
 14517  004BCE                     i2u874_40:
 14518  004BCE  EFDC  F025         	goto	i2l6934
 14519  004BD2                     i2l1249:
 14520  004BD2  5040               	movf	i2___fldiv@aexp^0,w,c
 14521  004BD4  B4D8               	btfsc	status,2,c
 14522  004BD6  EFEF  F025         	goto	i2u875_41
 14523  004BDA  EFF1  F025         	goto	i2u875_40
 14524  004BDE                     i2u875_41:
 14525  004BDE  EF15  F026         	goto	i2l6946
 14526  004BE2                     i2u875_40:
 14527  004BE2  0E01               	movlw	1
 14528  004BE4  2628               	addwf	i2___fldiv@b^0,f,c
 14529  004BE6  0E00               	movlw	0
 14530  004BE8  2229               	addwfc	(i2___fldiv@b+1)^0,f,c
 14531  004BEA  222A               	addwfc	(i2___fldiv@b+2)^0,f,c
 14532  004BEC  222B               	addwfc	(i2___fldiv@b+3)^0,f,c
 14533  004BEE  A02B               	btfss	(i2___fldiv@b+3)^0,0,c
 14534  004BF0  EFFC  F025         	goto	i2u876_41
 14535  004BF4  EFFE  F025         	goto	i2u876_40
 14536  004BF8                     i2u876_41:
 14537  004BF8  EF15  F026         	goto	i2l6946
 14538  004BFC                     i2u876_40:
 14539  004BFC  C028  F030         	movff	i2___fldiv@b,??i2___fldiv
 14540  004C00  C029  F031         	movff	i2___fldiv@b+1,??i2___fldiv+1
 14541  004C04  C02A  F032         	movff	i2___fldiv@b+2,??i2___fldiv+2
 14542  004C08  C02B  F033         	movff	i2___fldiv@b+3,??i2___fldiv+3
 14543  004C0C  3433               	rlcf	(??i2___fldiv+3)^0,w,c
 14544  004C0E  3233               	rrcf	(??i2___fldiv+3)^0,f,c
 14545  004C10  3232               	rrcf	(??i2___fldiv+2)^0,f,c
 14546  004C12  3231               	rrcf	(??i2___fldiv+1)^0,f,c
 14547  004C14  3230               	rrcf	??i2___fldiv^0,f,c
 14548  004C16  C030  F028         	movff	??i2___fldiv,i2___fldiv@b
 14549  004C1A  C031  F029         	movff	??i2___fldiv+1,i2___fldiv@b+1
 14550  004C1E  C032  F02A         	movff	??i2___fldiv+2,i2___fldiv@b+2
 14551  004C22  C033  F02B         	movff	??i2___fldiv+3,i2___fldiv@b+3
 14552  004C26  4A39               	infsnz	i2___fldiv@new_exp^0,f,c
 14553  004C28  2A3A               	incf	(i2___fldiv@new_exp+1)^0,f,c
 14554  004C2A                     i2l6946:
 14555  004C2A  BE3A               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 14556  004C2C  EF20  F026         	goto	i2u877_41
 14557  004C30  503A               	movf	(i2___fldiv@new_exp+1)^0,w,c
 14558  004C32  E108               	bnz	i2u877_40
 14559  004C34  2839               	incf	i2___fldiv@new_exp^0,w,c
 14560  004C36  A0D8               	btfss	status,0,c
 14561  004C38  EF20  F026         	goto	i2u877_41
 14562  004C3C  EF22  F026         	goto	i2u877_40
 14563  004C40                     i2u877_41:
 14564  004C40  EF2D  F026         	goto	i2l6950
 14565  004C44                     i2u877_40:
 14566  004C44  0E00               	movlw	0
 14567  004C46  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 14568  004C48  6839               	setf	i2___fldiv@new_exp^0,c
 14569  004C4A  0E00               	movlw	0
 14570  004C4C  6E28               	movwf	i2___fldiv@b^0,c
 14571  004C4E  0E00               	movlw	0
 14572  004C50  6E29               	movwf	(i2___fldiv@b+1)^0,c
 14573  004C52  0E00               	movlw	0
 14574  004C54  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 14575  004C56  0E00               	movlw	0
 14576  004C58  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14577  004C5A                     i2l6950:
 14578  004C5A  BE3A               	btfsc	(i2___fldiv@new_exp+1)^0,7,c
 14579  004C5C  EF3A  F026         	goto	i2u878_40
 14580  004C60  503A               	movf	(i2___fldiv@new_exp+1)^0,w,c
 14581  004C62  E106               	bnz	i2u878_41
 14582  004C64  0439               	decf	i2___fldiv@new_exp^0,w,c
 14583  004C66  B0D8               	btfsc	status,0,c
 14584  004C68  EF38  F026         	goto	i2u878_41
 14585  004C6C  EF3A  F026         	goto	i2u878_40
 14586  004C70                     i2u878_41:
 14587  004C70  EF48  F026         	goto	i2l6954
 14588  004C74                     i2u878_40:
 14589  004C74  0E00               	movlw	0
 14590  004C76  6E3A               	movwf	(i2___fldiv@new_exp+1)^0,c
 14591  004C78  0E00               	movlw	0
 14592  004C7A  6E39               	movwf	i2___fldiv@new_exp^0,c
 14593  004C7C  0E00               	movlw	0
 14594  004C7E  6E28               	movwf	i2___fldiv@b^0,c
 14595  004C80  0E00               	movlw	0
 14596  004C82  6E29               	movwf	(i2___fldiv@b+1)^0,c
 14597  004C84  0E00               	movlw	0
 14598  004C86  6E2A               	movwf	(i2___fldiv@b+2)^0,c
 14599  004C88  0E00               	movlw	0
 14600  004C8A  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14601  004C8C  0E00               	movlw	0
 14602  004C8E  6E38               	movwf	i2___fldiv@sign^0,c
 14603  004C90                     i2l6954:
 14604  004C90  C039  F03F         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 14605  004C94  A03F               	btfss	i2___fldiv@bexp^0,0,c
 14606  004C96  EF4F  F026         	goto	i2u879_41
 14607  004C9A  EF51  F026         	goto	i2u879_40
 14608  004C9E                     i2u879_41:
 14609  004C9E  EF54  F026         	goto	i2l6960
 14610  004CA2                     i2u879_40:
 14611  004CA2  8E2A               	bsf	(i2___fldiv@b+2)^0,7,c
 14612  004CA4  EF55  F026         	goto	i2l6962
 14613  004CA8                     i2l6960:
 14614  004CA8  9E2A               	bcf	(i2___fldiv@b+2)^0,7,c
 14615  004CAA                     i2l6962:
 14616  004CAA  90D8               	bcf	status,0,c
 14617  004CAC  303F               	rrcf	i2___fldiv@bexp^0,w,c
 14618  004CAE  6E2B               	movwf	(i2___fldiv@b+3)^0,c
 14619  004CB0  EF0B  F025         	goto	i2l6876
 14620  004CB4                     i2l1236:
 14621  004CB4  0012               	return		;funcret
 14622  004CB6                     __end_ofi2___fldiv:
 14623                           	callstack 0
 14624                           
 14625 ;; *************** function i2_Lcd_Out *****************
 14626 ;; Defined at:
 14627 ;;		line 96 in file "flexlcd.h"
 14628 ;; Parameters:    Size  Location     Type
 14629 ;;  y               1    wreg     unsigned char 
 14630 ;;  x               1    3[COMRAM] unsigned char 
 14631 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
 14632 ;;		 -> STR_5(9), STR_4(9), STR_3(11), STR_2(7), 
 14633 ;;		 -> txt3e(17), txt2e(17), txt0(17), txt43(17), 
 14634 ;;		 -> txt33(12), txt23(12), txt13(17), txt42(17), 
 14635 ;;		 -> txt32(13), txt22(13), txt12(17), txt41(17), 
 14636 ;;		 -> txt31(9), txt21(7), txt11(17), str(4), 
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;  y               1    6[COMRAM] unsigned char 
 14639 ;;  data            1    7[COMRAM] unsigned char 
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  1    wreg      void 
 14642 ;; Registers used:
 14643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14649 ;;      Params:         3       0       0       0       0       0       0
 14650 ;;      Locals:         2       0       0       0       0       0       0
 14651 ;;      Temps:          0       0       0       0       0       0       0
 14652 ;;      Totals:         5       0       0       0       0       0       0
 14653 ;;Total ram usage:        5 bytes
 14654 ;; Hardware stack levels used:    1
 14655 ;; Hardware stack levels required when called:    1
 14656 ;; This function calls:
 14657 ;;		i2_Lcd_Chr_CP
 14658 ;;		i2_Lcd_Cmd
 14659 ;; This function is called by:
 14660 ;;		i2_atualizatela
 14661 ;; This function uses a non-reentrant model
 14662 ;;
 14663                           
 14664                           	psect	text46
 14665  00718E                     __ptext46:
 14666                           	callstack 0
 14667  00718E                     i2_Lcd_Out:
 14668                           	callstack 23
 14669                           
 14670                           ;incstack = 0
 14671                           ;i2Lcd_Out@y stored from wreg
 14672  00718E  6E07               	movwf	i2Lcd_Out@y^0,c
 14673  007190                     
 14674                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
 14675  007190  EFDE  F038         	goto	i2l7472
 14676  007194                     i2l7462:
 14677  007194  5004               	movf	i2Lcd_Out@x^0,w,c
 14678  007196  0F80               	addlw	128
 14679  007198  6E08               	movwf	i2Lcd_Out@data^0,c
 14680  00719A  EFF1  F038         	goto	i2l7474
 14681  00719E                     i2l7464:
 14682  00719E  5004               	movf	i2Lcd_Out@x^0,w,c
 14683  0071A0  0FC0               	addlw	192
 14684  0071A2  6E08               	movwf	i2Lcd_Out@data^0,c
 14685  0071A4  EFF1  F038         	goto	i2l7474
 14686  0071A8                     i2l7466:
 14687  0071A8  5004               	movf	i2Lcd_Out@x^0,w,c
 14688  0071AA  0F90               	addlw	144
 14689  0071AC  6E08               	movwf	i2Lcd_Out@data^0,c
 14690  0071AE  EFF1  F038         	goto	i2l7474
 14691  0071B2                     i2l7468:
 14692  0071B2  5004               	movf	i2Lcd_Out@x^0,w,c
 14693  0071B4  0FD0               	addlw	208
 14694  0071B6  6E08               	movwf	i2Lcd_Out@data^0,c
 14695  0071B8  EFF1  F038         	goto	i2l7474
 14696  0071BC                     i2l7472:
 14697  0071BC  5007               	movf	i2Lcd_Out@y^0,w,c
 14698                           
 14699                           ; Switch size 1, requested type "simple"
 14700                           ; Number of cases is 4, Range of values is 1 to 4
 14701                           ; switch strategies available:
 14702                           ; Name         Instructions Cycles
 14703                           ; simple_byte           13     7 (average)
 14704                           ;	Chosen strategy is simple_byte
 14705  0071BE  0A01               	xorlw	1	; case 1
 14706  0071C0  B4D8               	btfsc	status,2,c
 14707  0071C2  EFCA  F038         	goto	i2l7462
 14708  0071C6  0A03               	xorlw	3	; case 2
 14709  0071C8  B4D8               	btfsc	status,2,c
 14710  0071CA  EFCF  F038         	goto	i2l7464
 14711  0071CE  0A01               	xorlw	1	; case 3
 14712  0071D0  B4D8               	btfsc	status,2,c
 14713  0071D2  EFD4  F038         	goto	i2l7466
 14714  0071D6  0A07               	xorlw	7	; case 4
 14715  0071D8  B4D8               	btfsc	status,2,c
 14716  0071DA  EFD9  F038         	goto	i2l7468
 14717  0071DE  EFF1  F038         	goto	i2l7474
 14718  0071E2                     i2l7474:
 14719                           
 14720                           ;flexlcd.h: 107: Lcd_Cmd(data);
 14721  0071E2  5008               	movf	i2Lcd_Out@data^0,w,c
 14722  0071E4  EC23  F033         	call	i2_Lcd_Cmd
 14723                           
 14724                           ;flexlcd.h: 108: while(*buffer)
 14725  0071E8  EF0A  F039         	goto	i2l7480
 14726  0071EC                     i2l7476:
 14727                           
 14728                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
 14729  0071EC  C005  FFF6         	movff	i2Lcd_Out@buffer,tblptrl
 14730  0071F0  C006  FFF7         	movff	i2Lcd_Out@buffer+1,tblptrh
 14731  0071F4  6AF8               	clrf	tblptru,c
 14732  0071F6  0E05               	movlw	(high __ramtop+-1)
 14733  0071F8  64F7               	cpfsgt	tblptrh,c
 14734  0071FA  D003               	bra	i2u958_47
 14735  0071FC  0008               	tblrd		*
 14736  0071FE  50F5               	movf	tablat,w,c
 14737  007200  D005               	bra	i2u958_40
 14738  007202                     i2u958_47:
 14739  007202  CFF6 FFE9          	movff	tblptrl,fsr0l
 14740  007206  CFF7 FFEA          	movff	tblptrh,fsr0h
 14741  00720A  50EF               	movf	indf0,w,c
 14742  00720C                     i2u958_40:
 14743  00720C  EC89  F032         	call	i2_Lcd_Chr_CP
 14744  007210                     
 14745                           ;flexlcd.h: 111: buffer++;
 14746  007210  4A05               	infsnz	i2Lcd_Out@buffer^0,f,c
 14747  007212  2A06               	incf	(i2Lcd_Out@buffer+1)^0,f,c
 14748  007214                     i2l7480:
 14749  007214  C005  FFF6         	movff	i2Lcd_Out@buffer,tblptrl
 14750  007218  C006  FFF7         	movff	i2Lcd_Out@buffer+1,tblptrh
 14751  00721C  6AF8               	clrf	tblptru,c
 14752  00721E  0E05               	movlw	(high __ramtop+-1)
 14753  007220  64F7               	cpfsgt	tblptrh,c
 14754  007222  D003               	bra	i2u959_47
 14755  007224  0008               	tblrd		*
 14756  007226  50F5               	movf	tablat,w,c
 14757  007228  D005               	bra	i2u959_40
 14758  00722A                     i2u959_47:
 14759  00722A  CFF6 FFE9          	movff	tblptrl,fsr0l
 14760  00722E  CFF7 FFEA          	movff	tblptrh,fsr0h
 14761  007232  50EF               	movf	indf0,w,c
 14762  007234                     i2u959_40:
 14763  007234  0900               	iorlw	0
 14764  007236  A4D8               	btfss	status,2,c
 14765  007238  EF20  F039         	goto	i2u960_41
 14766  00723C  EF22  F039         	goto	i2u960_40
 14767  007240                     i2u960_41:
 14768  007240  EFF6  F038         	goto	i2l7476
 14769  007244                     i2u960_40:
 14770  007244  0012               	return		;funcret
 14771  007246                     __end_ofi2_Lcd_Out:
 14772                           	callstack 0
 14773                           
 14774 ;; *************** function i2_Lcd_Cmd *****************
 14775 ;; Defined at:
 14776 ;;		line 152 in file "flexlcd.h"
 14777 ;; Parameters:    Size  Location     Type
 14778 ;;  data            1    wreg     unsigned char 
 14779 ;; Auto vars:     Size  Location     Type
 14780 ;;  data            1    2[COMRAM] unsigned char 
 14781 ;; Return value:  Size  Location     Type
 14782 ;;                  1    wreg      void 
 14783 ;; Registers used:
 14784 ;;		wreg, status,2, status,0
 14785 ;; Tracked objects:
 14786 ;;		On entry : 0/0
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14790 ;;      Params:         0       0       0       0       0       0       0
 14791 ;;      Locals:         1       0       0       0       0       0       0
 14792 ;;      Temps:          2       0       0       0       0       0       0
 14793 ;;      Totals:         3       0       0       0       0       0       0
 14794 ;;Total ram usage:        3 bytes
 14795 ;; Hardware stack levels used:    1
 14796 ;; This function calls:
 14797 ;;		Nothing
 14798 ;; This function is called by:
 14799 ;;		i2_Lcd_Out
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           	psect	text47
 14804  006646                     __ptext47:
 14805                           	callstack 0
 14806  006646                     i2_Lcd_Cmd:
 14807                           	callstack 23
 14808                           
 14809                           ;incstack = 0
 14810                           ;i2Lcd_Cmd@data stored from wreg
 14811  006646  6E03               	movwf	i2Lcd_Cmd@data^0,c
 14812  006648                     
 14813                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 14814  006648  9284               	bcf	132,1,c	;volatile
 14815  00664A  9484               	bcf	132,2,c	;volatile
 14816  00664C                     
 14817                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
 14818  00664C  6A01               	clrf	??i2_Lcd_Cmd^0,c
 14819  00664E  AE03               	btfss	i2Lcd_Cmd@data^0,7,c
 14820  006650  D001               	bra	i2u809_45
 14821  006652  2A01               	incf	??i2_Lcd_Cmd^0,f,c
 14822  006654                     i2u809_45:
 14823  006654  0E01               	movlw	1
 14824  006656  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14825  006658  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14826  00665A  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14827  00665C  5083               	movf	131,w,c	;volatile
 14828  00665E  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14829  006660  0B7F               	andlw	-129
 14830  006662  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14831  006664  6E83               	movwf	131,c	;volatile
 14832  006666  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 14833  00666A  0E06               	movlw	6
 14834  00666C  6E02               	movwf	(??i2_Lcd_Cmd+1)^0,c
 14835  00666E                     i2u810_45:
 14836  00666E  90D8               	bcf	status,0,c
 14837  006670  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14838  006672  2E02               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
 14839  006674  EF37  F033         	goto	i2u810_45
 14840  006678  0E01               	movlw	1
 14841  00667A  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14842  00667C  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 14843  00667E  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 14844  006680  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 14845  006682  5083               	movf	131,w,c	;volatile
 14846  006684  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14847  006686  0BBF               	andlw	-65
 14848  006688  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14849  00668A  6E83               	movwf	131,c	;volatile
 14850                           
 14851                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
 14852  00668C  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 14853  006690  0E05               	movlw	5
 14854  006692  6E02               	movwf	(??i2_Lcd_Cmd+1)^0,c
 14855  006694                     i2u811_45:
 14856  006694  90D8               	bcf	status,0,c
 14857  006696  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14858  006698  2E02               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
 14859  00669A  EF4A  F033         	goto	i2u811_45
 14860  00669E  0E01               	movlw	1
 14861  0066A0  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14862  0066A2  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 14863  0066A4  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 14864  0066A6  5083               	movf	131,w,c	;volatile
 14865  0066A8  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14866  0066AA  0BDF               	andlw	-33
 14867  0066AC  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14868  0066AE  6E83               	movwf	131,c	;volatile
 14869  0066B0  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 14870  0066B4  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 14871  0066B6  0E0F               	movlw	15
 14872  0066B8  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14873  0066BA  0E01               	movlw	1
 14874  0066BC  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14875  0066BE  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 14876  0066C0  5083               	movf	131,w,c	;volatile
 14877  0066C2  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14878  0066C4  0BEF               	andlw	-17
 14879  0066C6  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14880  0066C8  6E83               	movwf	131,c	;volatile
 14881  0066CA                     
 14882                           ;flexlcd.h: 156: _delay(10);
 14883  0066CA  0E03               	movlw	3
 14884  0066CC                     i2u1441_47:
 14885  0066CC  2EE8               	decfsz	wreg,f,c
 14886  0066CE  D7FE               	bra	i2u1441_47
 14887  0066D0  F000               	nop	
 14888  0066D2                     
 14889                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 14890  0066D2  8284               	bsf	132,1,c	;volatile
 14891  0066D4  0E03               	movlw	3
 14892  0066D6                     i2u1442_47:
 14893  0066D6  2EE8               	decfsz	wreg,f,c
 14894  0066D8  D7FE               	bra	i2u1442_47
 14895  0066DA  F000               	nop	
 14896  0066DC  9284               	bcf	132,1,c	;volatile
 14897                           
 14898                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
 14899  0066DE  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 14900  0066E2  90D8               	bcf	status,0,c
 14901  0066E4  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14902  0066E6  90D8               	bcf	status,0,c
 14903  0066E8  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14904  0066EA  90D8               	bcf	status,0,c
 14905  0066EC  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14906  0066EE  0E01               	movlw	1
 14907  0066F0  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14908  0066F2  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14909  0066F4  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14910  0066F6  5083               	movf	131,w,c	;volatile
 14911  0066F8  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14912  0066FA  0B7F               	andlw	-129
 14913  0066FC  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14914  0066FE  6E83               	movwf	131,c	;volatile
 14915  006700  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 14916  006704  90D8               	bcf	status,0,c
 14917  006706  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14918  006708  90D8               	bcf	status,0,c
 14919  00670A  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14920  00670C  0E01               	movlw	1
 14921  00670E  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14922  006710  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 14923  006712  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 14924  006714  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 14925  006716  5083               	movf	131,w,c	;volatile
 14926  006718  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14927  00671A  0BBF               	andlw	-65
 14928  00671C  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14929  00671E  6E83               	movwf	131,c	;volatile
 14930                           
 14931                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
 14932  006720  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 14933  006724  90D8               	bcf	status,0,c
 14934  006726  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 14935  006728  0E01               	movlw	1
 14936  00672A  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14937  00672C  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 14938  00672E  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 14939  006730  5083               	movf	131,w,c	;volatile
 14940  006732  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14941  006734  0BDF               	andlw	-33
 14942  006736  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14943  006738  6E83               	movwf	131,c	;volatile
 14944  00673A  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 14945  00673E  0E01               	movlw	1
 14946  006740  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 14947  006742  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 14948  006744  5083               	movf	131,w,c	;volatile
 14949  006746  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14950  006748  0BEF               	andlw	-17
 14951  00674A  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 14952  00674C  6E83               	movwf	131,c	;volatile
 14953  00674E                     
 14954                           ;flexlcd.h: 160: _delay(10);
 14955  00674E  0E03               	movlw	3
 14956  006750                     i2u1443_47:
 14957  006750  2EE8               	decfsz	wreg,f,c
 14958  006752  D7FE               	bra	i2u1443_47
 14959  006754  F000               	nop	
 14960  006756                     
 14961                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 14962  006756  8284               	bsf	132,1,c	;volatile
 14963  006758  0E03               	movlw	3
 14964  00675A                     i2u1444_47:
 14965  00675A  2EE8               	decfsz	wreg,f,c
 14966  00675C  D7FE               	bra	i2u1444_47
 14967  00675E  F000               	nop	
 14968  006760  9284               	bcf	132,1,c	;volatile
 14969  006762                     
 14970                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 14971  006762  0E0F               	movlw	15
 14972  006764  6E01               	movwf	??i2_Lcd_Cmd^0,c
 14973  006766  0E48               	movlw	72
 14974  006768                     i2u1445_47:
 14975  006768  2EE8               	decfsz	wreg,f,c
 14976  00676A  D7FE               	bra	i2u1445_47
 14977  00676C  2E01               	decfsz	??i2_Lcd_Cmd^0,f,c
 14978  00676E  D7FC               	bra	i2u1445_47
 14979  006770  0012               	return		;funcret
 14980  006772                     __end_ofi2_Lcd_Cmd:
 14981                           	callstack 0
 14982                           
 14983 ;; *************** function i2_Lcd_Chr_CP *****************
 14984 ;; Defined at:
 14985 ;;		line 138 in file "flexlcd.h"
 14986 ;; Parameters:    Size  Location     Type
 14987 ;;  data            1    wreg     unsigned char 
 14988 ;; Auto vars:     Size  Location     Type
 14989 ;;  data            1    2[COMRAM] unsigned char 
 14990 ;; Return value:  Size  Location     Type
 14991 ;;                  1    wreg      void 
 14992 ;; Registers used:
 14993 ;;		wreg, status,2, status,0
 14994 ;; Tracked objects:
 14995 ;;		On entry : 0/0
 14996 ;;		On exit  : 0/0
 14997 ;;		Unchanged: 0/0
 14998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14999 ;;      Params:         0       0       0       0       0       0       0
 15000 ;;      Locals:         1       0       0       0       0       0       0
 15001 ;;      Temps:          2       0       0       0       0       0       0
 15002 ;;      Totals:         3       0       0       0       0       0       0
 15003 ;;Total ram usage:        3 bytes
 15004 ;; Hardware stack levels used:    1
 15005 ;; This function calls:
 15006 ;;		Nothing
 15007 ;; This function is called by:
 15008 ;;		i2_Lcd_Out
 15009 ;; This function uses a non-reentrant model
 15010 ;;
 15011                           
 15012                           	psect	text48
 15013  006512                     __ptext48:
 15014                           	callstack 0
 15015  006512                     i2_Lcd_Chr_CP:
 15016                           	callstack 23
 15017                           
 15018                           ;incstack = 0
 15019                           ;i2Lcd_Chr_CP@data stored from wreg
 15020  006512  6E03               	movwf	i2Lcd_Chr_CP@data^0,c
 15021  006514                     
 15022                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
 15023  006514  9284               	bcf	132,1,c	;volatile
 15024  006516  8484               	bsf	132,2,c	;volatile
 15025  006518                     
 15026                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
 15027  006518  6A01               	clrf	??i2_Lcd_Chr_CP^0,c
 15028  00651A  AE03               	btfss	i2Lcd_Chr_CP@data^0,7,c
 15029  00651C  D001               	bra	i2u806_45
 15030  00651E  2A01               	incf	??i2_Lcd_Chr_CP^0,f,c
 15031  006520                     i2u806_45:
 15032  006520  0E01               	movlw	1
 15033  006522  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15034  006524  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15035  006526  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15036  006528  5083               	movf	131,w,c	;volatile
 15037  00652A  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15038  00652C  0B7F               	andlw	-129
 15039  00652E  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15040  006530  6E83               	movwf	131,c	;volatile
 15041  006532  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
 15042  006536  0E06               	movlw	6
 15043  006538  6E02               	movwf	(??i2_Lcd_Chr_CP+1)^0,c
 15044  00653A                     i2u807_45:
 15045  00653A  90D8               	bcf	status,0,c
 15046  00653C  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15047  00653E  2E02               	decfsz	(??i2_Lcd_Chr_CP+1)^0,f,c
 15048  006540  EF9D  F032         	goto	i2u807_45
 15049  006544  0E01               	movlw	1
 15050  006546  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15051  006548  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
 15052  00654A  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
 15053  00654C  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
 15054  00654E  5083               	movf	131,w,c	;volatile
 15055  006550  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15056  006552  0BBF               	andlw	-65
 15057  006554  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15058  006556  6E83               	movwf	131,c	;volatile
 15059                           
 15060                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
 15061  006558  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
 15062  00655C  0E05               	movlw	5
 15063  00655E  6E02               	movwf	(??i2_Lcd_Chr_CP+1)^0,c
 15064  006560                     i2u808_45:
 15065  006560  90D8               	bcf	status,0,c
 15066  006562  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15067  006564  2E02               	decfsz	(??i2_Lcd_Chr_CP+1)^0,f,c
 15068  006566  EFB0  F032         	goto	i2u808_45
 15069  00656A  0E01               	movlw	1
 15070  00656C  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15071  00656E  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
 15072  006570  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
 15073  006572  5083               	movf	131,w,c	;volatile
 15074  006574  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15075  006576  0BDF               	andlw	-33
 15076  006578  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15077  00657A  6E83               	movwf	131,c	;volatile
 15078  00657C  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
 15079  006580  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
 15080  006582  0E0F               	movlw	15
 15081  006584  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15082  006586  0E01               	movlw	1
 15083  006588  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15084  00658A  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
 15085  00658C  5083               	movf	131,w,c	;volatile
 15086  00658E  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15087  006590  0BEF               	andlw	-17
 15088  006592  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15089  006594  6E83               	movwf	131,c	;volatile
 15090  006596                     
 15091                           ;flexlcd.h: 142: _delay(10);
 15092  006596  0E03               	movlw	3
 15093  006598                     i2u1446_47:
 15094  006598  2EE8               	decfsz	wreg,f,c
 15095  00659A  D7FE               	bra	i2u1446_47
 15096  00659C  F000               	nop	
 15097  00659E                     
 15098                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 15099  00659E  8284               	bsf	132,1,c	;volatile
 15100  0065A0  0E03               	movlw	3
 15101  0065A2                     i2u1447_47:
 15102  0065A2  2EE8               	decfsz	wreg,f,c
 15103  0065A4  D7FE               	bra	i2u1447_47
 15104  0065A6  F000               	nop	
 15105  0065A8  9284               	bcf	132,1,c	;volatile
 15106                           
 15107                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
 15108  0065AA  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
 15109  0065AE  90D8               	bcf	status,0,c
 15110  0065B0  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15111  0065B2  90D8               	bcf	status,0,c
 15112  0065B4  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15113  0065B6  90D8               	bcf	status,0,c
 15114  0065B8  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15115  0065BA  0E01               	movlw	1
 15116  0065BC  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15117  0065BE  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15118  0065C0  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15119  0065C2  5083               	movf	131,w,c	;volatile
 15120  0065C4  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15121  0065C6  0B7F               	andlw	-129
 15122  0065C8  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15123  0065CA  6E83               	movwf	131,c	;volatile
 15124  0065CC  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
 15125  0065D0  90D8               	bcf	status,0,c
 15126  0065D2  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15127  0065D4  90D8               	bcf	status,0,c
 15128  0065D6  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15129  0065D8  0E01               	movlw	1
 15130  0065DA  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15131  0065DC  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
 15132  0065DE  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
 15133  0065E0  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
 15134  0065E2  5083               	movf	131,w,c	;volatile
 15135  0065E4  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15136  0065E6  0BBF               	andlw	-65
 15137  0065E8  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15138  0065EA  6E83               	movwf	131,c	;volatile
 15139                           
 15140                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
 15141  0065EC  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
 15142  0065F0  90D8               	bcf	status,0,c
 15143  0065F2  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
 15144  0065F4  0E01               	movlw	1
 15145  0065F6  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15146  0065F8  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
 15147  0065FA  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
 15148  0065FC  5083               	movf	131,w,c	;volatile
 15149  0065FE  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15150  006600  0BDF               	andlw	-33
 15151  006602  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15152  006604  6E83               	movwf	131,c	;volatile
 15153  006606  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
 15154  00660A  0E01               	movlw	1
 15155  00660C  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
 15156  00660E  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
 15157  006610  5083               	movf	131,w,c	;volatile
 15158  006612  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15159  006614  0BEF               	andlw	-17
 15160  006616  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
 15161  006618  6E83               	movwf	131,c	;volatile
 15162  00661A                     
 15163                           ;flexlcd.h: 146: _delay(10);
 15164  00661A  0E03               	movlw	3
 15165  00661C                     i2u1448_47:
 15166  00661C  2EE8               	decfsz	wreg,f,c
 15167  00661E  D7FE               	bra	i2u1448_47
 15168  006620  F000               	nop	
 15169  006622                     
 15170                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 15171  006622  8284               	bsf	132,1,c	;volatile
 15172  006624  0E03               	movlw	3
 15173  006626                     i2u1449_47:
 15174  006626  2EE8               	decfsz	wreg,f,c
 15175  006628  D7FE               	bra	i2u1449_47
 15176  00662A  F000               	nop	
 15177  00662C  9284               	bcf	132,1,c	;volatile
 15178  00662E                     
 15179                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
 15180  00662E  0E03               	movlw	3
 15181  006630                     i2u1450_47:
 15182  006630  2EE8               	decfsz	wreg,f,c
 15183  006632  D7FE               	bra	i2u1450_47
 15184  006634  F000               	nop	
 15185  006636  0E0F               	movlw	15
 15186  006638  6E01               	movwf	??i2_Lcd_Chr_CP^0,c
 15187  00663A  0E48               	movlw	72
 15188  00663C                     i2u1451_47:
 15189  00663C  2EE8               	decfsz	wreg,f,c
 15190  00663E  D7FE               	bra	i2u1451_47
 15191  006640  2E01               	decfsz	??i2_Lcd_Chr_CP^0,f,c
 15192  006642  D7FC               	bra	i2u1451_47
 15193  006644  0012               	return		;funcret
 15194  006646                     __end_ofi2_Lcd_Chr_CP:
 15195                           	callstack 0
 15196                           
 15197 ;; *************** function _transmitedados *****************
 15198 ;; Defined at:
 15199 ;;		line 294 in file "main.c"
 15200 ;; Parameters:    Size  Location     Type
 15201 ;;		None
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;		None
 15204 ;; Return value:  Size  Location     Type
 15205 ;;                  1    wreg      void 
 15206 ;; Registers used:
 15207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15208 ;; Tracked objects:
 15209 ;;		On entry : 0/0
 15210 ;;		On exit  : 0/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15213 ;;      Params:         0       0       0       0       0       0       0
 15214 ;;      Locals:         0       0       0       0       0       0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0
 15216 ;;      Totals:         0       0       0       0       0       0       0
 15217 ;;Total ram usage:        0 bytes
 15218 ;; Hardware stack levels used:    1
 15219 ;; Hardware stack levels required when called:    3
 15220 ;; This function calls:
 15221 ;;		_serial_tx_str
 15222 ;;		i2_adc_amostra
 15223 ;;		i2_sprintf
 15224 ;; This function is called by:
 15225 ;;		_isr
 15226 ;; This function uses a non-reentrant model
 15227 ;;
 15228                           
 15229                           	psect	text49
 15230  006C98                     __ptext49:
 15231                           	callstack 0
 15232  006C98                     _transmitedados:
 15233                           	callstack 22
 15234  006C98                     
 15235                           ;main.c: 296: sprintf(buffer_tx, "/*%04d", adc_amostra(0));
 15236  006C98  0EC3               	movlw	low _buffer_tx
 15237  006C9A  6E4D               	movwf	i2sprintf@sp^0,c
 15238  006C9C  0E01               	movlw	high _buffer_tx
 15239  006C9E  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 15240  006CA0  0EB9               	movlw	low STR_10
 15241  006CA2  6E4F               	movwf	i2sprintf@f^0,c
 15242  006CA4  0E06               	movlw	high STR_10
 15243  006CA6  6E50               	movwf	(i2sprintf@f+1)^0,c
 15244  006CA8  0E00               	movlw	0
 15245  006CAA  EC97  F03D         	call	i2_adc_amostra
 15246  006CAE  C001  F051         	movff	?i2_adc_amostra,?i2_sprintf+4
 15247  006CB2  C002  F052         	movff	?i2_adc_amostra+1,?i2_sprintf+5
 15248  006CB6  ECA1  F00A         	call	i2_sprintf	;wreg free
 15249  006CBA                     
 15250                           ;main.c: 297: serial_tx_str(buffer_tx);
 15251  006CBA  0EC3               	movlw	low _buffer_tx
 15252  006CBC  6E02               	movwf	serial_tx_str@val^0,c
 15253  006CBE  0E01               	movlw	high _buffer_tx
 15254  006CC0  6E03               	movwf	(serial_tx_str@val+1)^0,c
 15255  006CC2  ECB3  F03F         	call	_serial_tx_str	;wreg free
 15256  006CC6                     
 15257                           ;main.c: 298: sprintf(buffer_tx, "/%04d", adc_amostra(1));
 15258  006CC6  0EC3               	movlw	low _buffer_tx
 15259  006CC8  6E4D               	movwf	i2sprintf@sp^0,c
 15260  006CCA  0E01               	movlw	high _buffer_tx
 15261  006CCC  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 15262  006CCE  0ED9               	movlw	low STR_11
 15263  006CD0  6E4F               	movwf	i2sprintf@f^0,c
 15264  006CD2  0E06               	movlw	high STR_11
 15265  006CD4  6E50               	movwf	(i2sprintf@f+1)^0,c
 15266  006CD6  0E01               	movlw	1
 15267  006CD8  EC97  F03D         	call	i2_adc_amostra
 15268  006CDC  C001  F051         	movff	?i2_adc_amostra,?i2_sprintf+4
 15269  006CE0  C002  F052         	movff	?i2_adc_amostra+1,?i2_sprintf+5
 15270  006CE4  ECA1  F00A         	call	i2_sprintf	;wreg free
 15271                           
 15272                           ;main.c: 299: serial_tx_str(buffer_tx);
 15273  006CE8  0EC3               	movlw	low _buffer_tx
 15274  006CEA  6E02               	movwf	serial_tx_str@val^0,c
 15275  006CEC  0E01               	movlw	high _buffer_tx
 15276  006CEE  6E03               	movwf	(serial_tx_str@val+1)^0,c
 15277  006CF0  ECB3  F03F         	call	_serial_tx_str	;wreg free
 15278  006CF4                     
 15279                           ;main.c: 300: sprintf(buffer_tx, "/%02d", states[1]);
 15280  006CF4  0EC3               	movlw	low _buffer_tx
 15281  006CF6  6E4D               	movwf	i2sprintf@sp^0,c
 15282  006CF8  0E01               	movlw	high _buffer_tx
 15283  006CFA  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 15284  006CFC  0ED3               	movlw	low STR_12
 15285  006CFE  6E4F               	movwf	i2sprintf@f^0,c
 15286  006D00  0E06               	movlw	high STR_12
 15287  006D02  6E50               	movwf	(i2sprintf@f+1)^0,c
 15288  006D04  C0F2  F051         	movff	_states+2,?i2_sprintf+4
 15289  006D08  C0F3  F052         	movff	_states+3,?i2_sprintf+5
 15290  006D0C  ECA1  F00A         	call	i2_sprintf	;wreg free
 15291  006D10                     
 15292                           ;main.c: 301: serial_tx_str(buffer_tx);
 15293  006D10  0EC3               	movlw	low _buffer_tx
 15294  006D12  6E02               	movwf	serial_tx_str@val^0,c
 15295  006D14  0E01               	movlw	high _buffer_tx
 15296  006D16  6E03               	movwf	(serial_tx_str@val+1)^0,c
 15297  006D18  ECB3  F03F         	call	_serial_tx_str	;wreg free
 15298                           
 15299                           ;main.c: 302: sprintf(buffer_tx, "%02d", states[2]);
 15300  006D1C  0EC3               	movlw	low _buffer_tx
 15301  006D1E  6E4D               	movwf	i2sprintf@sp^0,c
 15302  006D20  0E01               	movlw	high _buffer_tx
 15303  006D22  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 15304  006D24  0ED4               	movlw	low (STR_12+1)
 15305  006D26  6E4F               	movwf	i2sprintf@f^0,c
 15306  006D28  0E06               	movlw	high (STR_12+1)
 15307  006D2A  6E50               	movwf	(i2sprintf@f+1)^0,c
 15308  006D2C  C0F4  F051         	movff	_states+4,?i2_sprintf+4
 15309  006D30  C0F5  F052         	movff	_states+5,?i2_sprintf+5
 15310  006D34  ECA1  F00A         	call	i2_sprintf	;wreg free
 15311  006D38                     
 15312                           ;main.c: 303: serial_tx_str(buffer_tx);
 15313  006D38  0EC3               	movlw	low _buffer_tx
 15314  006D3A  6E02               	movwf	serial_tx_str@val^0,c
 15315  006D3C  0E01               	movlw	high _buffer_tx
 15316  006D3E  6E03               	movwf	(serial_tx_str@val+1)^0,c
 15317  006D40  ECB3  F03F         	call	_serial_tx_str	;wreg free
 15318  006D44                     
 15319                           ;main.c: 304: sprintf(buffer_tx, "/%02d", minCXI);
 15320  006D44  0EC3               	movlw	low _buffer_tx
 15321  006D46  6E4D               	movwf	i2sprintf@sp^0,c
 15322  006D48  0E01               	movlw	high _buffer_tx
 15323  006D4A  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 15324  006D4C  0ED3               	movlw	low STR_12
 15325  006D4E  6E4F               	movwf	i2sprintf@f^0,c
 15326  006D50  0E06               	movlw	high STR_12
 15327  006D52  6E50               	movwf	(i2sprintf@f+1)^0,c
 15328  006D54  C0ED  F051         	movff	_minCXI,?i2_sprintf+4
 15329  006D58  C0EE  F052         	movff	_minCXI+1,?i2_sprintf+5
 15330  006D5C  ECA1  F00A         	call	i2_sprintf	;wreg free
 15331                           
 15332                           ;main.c: 305: serial_tx_str(buffer_tx);
 15333  006D60  0EC3               	movlw	low _buffer_tx
 15334  006D62  6E02               	movwf	serial_tx_str@val^0,c
 15335  006D64  0E01               	movlw	high _buffer_tx
 15336  006D66  6E03               	movwf	(serial_tx_str@val+1)^0,c
 15337  006D68  ECB3  F03F         	call	_serial_tx_str	;wreg free
 15338  006D6C                     
 15339                           ;main.c: 306: sprintf(buffer_tx, "%02d\n", minCXS);
 15340  006D6C  0EC3               	movlw	low _buffer_tx
 15341  006D6E  6E4D               	movwf	i2sprintf@sp^0,c
 15342  006D70  0E01               	movlw	high _buffer_tx
 15343  006D72  6E4E               	movwf	(i2sprintf@sp+1)^0,c
 15344  006D74  0EC7               	movlw	low STR_15
 15345  006D76  6E4F               	movwf	i2sprintf@f^0,c
 15346  006D78  0E06               	movlw	high STR_15
 15347  006D7A  6E50               	movwf	(i2sprintf@f+1)^0,c
 15348  006D7C  C0EB  F051         	movff	_minCXS,?i2_sprintf+4
 15349  006D80  C0EC  F052         	movff	_minCXS+1,?i2_sprintf+5
 15350  006D84  ECA1  F00A         	call	i2_sprintf	;wreg free
 15351  006D88                     
 15352                           ;main.c: 307: serial_tx_str(buffer_tx);
 15353  006D88  0EC3               	movlw	low _buffer_tx
 15354  006D8A  6E02               	movwf	serial_tx_str@val^0,c
 15355  006D8C  0E01               	movlw	high _buffer_tx
 15356  006D8E  6E03               	movwf	(serial_tx_str@val+1)^0,c
 15357  006D90  ECB3  F03F         	call	_serial_tx_str	;wreg free
 15358  006D94  0012               	return		;funcret
 15359  006D96                     __end_of_transmitedados:
 15360                           	callstack 0
 15361                           
 15362 ;; *************** function i2_sprintf *****************
 15363 ;; Defined at:
 15364 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
 15365 ;; Parameters:    Size  Location     Type
 15366 ;;  sp              2   76[COMRAM] PTR unsigned char 
 15367 ;;		 -> buffer_tx(22), str(4), 
 15368 ;;  f               2   78[COMRAM] PTR const unsigned char 
 15369 ;;		 -> STR_15(6), STR_14(6), STR_13(5), STR_12(6), 
 15370 ;;		 -> STR_11(6), STR_10(7), STR_9(7), STR_8(7), 
 15371 ;;		 -> STR_7(5), STR_6(5), STR_1(6), 
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;  fval            4  108[COMRAM] PTR const unsigned char 
 15374 ;;  val             4   98[COMRAM] unsigned long 
 15375 ;;  tmpval          4   94[COMRAM] struct .
 15376 ;;  cp              3    0        PTR const unsigned char 
 15377 ;;  prec            2  112[COMRAM] int 
 15378 ;;  width           2  106[COMRAM] int 
 15379 ;;  flag            2  104[COMRAM] unsigned short 
 15380 ;;  eexp            2  102[COMRAM] int 
 15381 ;;  ap              2   92[COMRAM] PTR void [1]
 15382 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 15383 ;;  len             2    0        unsigned int 
 15384 ;;  c               1  114[COMRAM] unsigned char 
 15385 ;;  d               1    0        unsigned char 
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  2   76[COMRAM] int 
 15388 ;; Registers used:
 15389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15395 ;;      Params:         8       0       0       0       0       0       0
 15396 ;;      Locals:        27       0       0       0       0       0       0
 15397 ;;      Temps:          4       0       0       0       0       0       0
 15398 ;;      Totals:        39       0       0       0       0       0       0
 15399 ;;Total ram usage:       39 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:    2
 15402 ;; This function calls:
 15403 ;;		i2___awdiv
 15404 ;;		i2___fladd
 15405 ;;		i2___fleq
 15406 ;;		i2___flge
 15407 ;;		i2___flmul
 15408 ;;		i2___flneg
 15409 ;;		i2___flsub
 15410 ;;		i2___fltol
 15411 ;;		i2___lldiv
 15412 ;;		i2___llmod
 15413 ;;		i2___wmul
 15414 ;;		i2___xxtofl
 15415 ;;		i2__div_to_l_
 15416 ;;		i2__tdiv_to_l_
 15417 ;;		i2_fround
 15418 ;;		i2_isdigit
 15419 ;;		i2_scale
 15420 ;; This function is called by:
 15421 ;;		_transmitedados
 15422 ;;		i2_atualizatela
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426                           	psect	text50
 15427  001542                     __ptext50:
 15428                           	callstack 0
 15429  001542                     i2_sprintf:
 15430                           	callstack 22
 15431  001542                     
 15432                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
 15433  001542  0E51               	movlw	low (?i2_sprintf+4)
 15434  001544  6E5D               	movwf	i2sprintf@ap^0,c
 15435  001546  0E00               	movlw	high (?i2_sprintf+4)
 15436  001548  6E5E               	movwf	(i2sprintf@ap+1)^0,c
 15437                           
 15438                           ;doprnt.c: 553: while((c = *f++)) {
 15439  00154A  EF33  F011         	goto	i2l7818
 15440  00154E                     i2l7492:
 15441                           
 15442                           ;doprnt.c: 555: if(c != '%')
 15443  00154E  0E25               	movlw	37
 15444  001550  1873               	xorwf	i2sprintf@c^0,w,c
 15445  001552  B4D8               	btfsc	status,2,c
 15446  001554  EFAE  F00A         	goto	i2u961_41
 15447  001558  EFB0  F00A         	goto	i2u961_40
 15448  00155C                     i2u961_41:
 15449  00155C  EFBA  F00A         	goto	i2l7498
 15450  001560                     i2u961_40:
 15451  001560                     
 15452                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15453  001560  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 15454  001564  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 15455  001568  C073  FFDF         	movff	i2sprintf@c,indf2
 15456  00156C  4A4D               	infsnz	i2sprintf@sp^0,f,c
 15457  00156E  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 15458                           
 15459                           ;doprnt.c: 559: continue;
 15460  001570  EF33  F011         	goto	i2l7818
 15461  001574                     i2l7498:
 15462                           
 15463                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15464  001574  0E00               	movlw	0
 15465  001576  6E6C               	movwf	(i2sprintf@width+1)^0,c
 15466  001578  0E00               	movlw	0
 15467  00157A  6E6B               	movwf	i2sprintf@width^0,c
 15468                           
 15469                           ;doprnt.c: 565: flag = 0;
 15470  00157C  0E00               	movlw	0
 15471  00157E  6E6A               	movwf	(i2sprintf@flag+1)^0,c
 15472  001580  0E00               	movlw	0
 15473  001582  6E69               	movwf	i2sprintf@flag^0,c
 15474  001584  EFC7  F00A         	goto	i2l7504
 15475  001588                     i2l7500:
 15476                           
 15477                           ;doprnt.c: 597: flag |= 0x04;
 15478  001588  8469               	bsf	i2sprintf@flag^0,2,c
 15479                           
 15480                           ;doprnt.c: 598: f++;
 15481  00158A  4A4F               	infsnz	i2sprintf@f^0,f,c
 15482  00158C  2A50               	incf	(i2sprintf@f+1)^0,f,c
 15483  00158E                     i2l7504:
 15484  00158E  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15485  001592  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15486  001596                     	if	0	;tblptru may be non-zero
 15487  001596                     	endif
 15488  001596                     	if	0	;tblptru may be non-zero
 15489  001596                     	endif
 15490  001596  0008               	tblrd		*
 15491  001598  50F5               	movf	tablat,w,c
 15492                           
 15493                           ; Switch size 1, requested type "simple"
 15494                           ; Number of cases is 1, Range of values is 48 to 48
 15495                           ; switch strategies available:
 15496                           ; Name         Instructions Cycles
 15497                           ; simple_byte            4     3 (average)
 15498                           ;	Chosen strategy is simple_byte
 15499  00159A  0A30               	xorlw	48	; case 48
 15500  00159C  B4D8               	btfsc	status,2,c
 15501  00159E  EFC4  F00A         	goto	i2l7500
 15502  0015A2  EFD3  F00A         	goto	i2l7506
 15503  0015A6                     i2l7506:
 15504                           
 15505                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15506  0015A6  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15507  0015AA  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15508  0015AE                     	if	0	;tblptru may be non-zero
 15509  0015AE                     	endif
 15510  0015AE                     	if	0	;tblptru may be non-zero
 15511  0015AE                     	endif
 15512  0015AE  0008               	tblrd		*
 15513  0015B0  50F5               	movf	tablat,w,c
 15514  0015B2  EC24  F000         	call	i2_isdigit
 15515  0015B6  A0D8               	btfss	status,0,c
 15516  0015B8  EFE0  F00A         	goto	i2u962_41
 15517  0015BC  EFE2  F00A         	goto	i2u962_40
 15518  0015C0                     i2u962_41:
 15519  0015C0  EF19  F00B         	goto	i2l7518
 15520  0015C4                     i2u962_40:
 15521  0015C4                     
 15522                           ;doprnt.c: 615: width = 0;
 15523  0015C4  0E00               	movlw	0
 15524  0015C6  6E6C               	movwf	(i2sprintf@width+1)^0,c
 15525  0015C8  0E00               	movlw	0
 15526  0015CA  6E6B               	movwf	i2sprintf@width^0,c
 15527  0015CC                     i2l7510:
 15528                           
 15529                           ;doprnt.c: 617: width *= 10;
 15530  0015CC  C06B  F001         	movff	i2sprintf@width,i2___wmul@multiplier
 15531  0015D0  C06C  F002         	movff	i2sprintf@width+1,i2___wmul@multiplier+1
 15532  0015D4  0E00               	movlw	0
 15533  0015D6  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 15534  0015D8  0E0A               	movlw	10
 15535  0015DA  6E03               	movwf	i2___wmul@multiplicand^0,c
 15536  0015DC  EC53  F000         	call	i2___wmul	;wreg free
 15537  0015E0  C001  F06B         	movff	?i2___wmul,i2sprintf@width
 15538  0015E4  C002  F06C         	movff	?i2___wmul+1,i2sprintf@width+1
 15539  0015E8                     
 15540                           ;doprnt.c: 618: width += *f++ - '0';
 15541  0015E8  0ED0               	movlw	208
 15542  0015EA  6E55               	movwf	??i2_sprintf^0,c
 15543  0015EC  0EFF               	movlw	255
 15544  0015EE  6E56               	movwf	(??i2_sprintf+1)^0,c
 15545  0015F0  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15546  0015F4  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15547  0015F8                     	if	0	;tblptru may be non-zero
 15548  0015F8                     	endif
 15549  0015F8                     	if	0	;tblptru may be non-zero
 15550  0015F8                     	endif
 15551  0015F8  0008               	tblrd		*
 15552  0015FA  50F5               	movf	tablat,w,c
 15553  0015FC  6E57               	movwf	(??i2_sprintf+2)^0,c
 15554  0015FE  6A58               	clrf	(??i2_sprintf+3)^0,c
 15555  001600  5055               	movf	??i2_sprintf^0,w,c
 15556  001602  2657               	addwf	(??i2_sprintf+2)^0,f,c
 15557  001604  5056               	movf	(??i2_sprintf+1)^0,w,c
 15558  001606  2258               	addwfc	(??i2_sprintf+3)^0,f,c
 15559  001608  5057               	movf	(??i2_sprintf+2)^0,w,c
 15560  00160A  266B               	addwf	i2sprintf@width^0,f,c
 15561  00160C  5058               	movf	(??i2_sprintf+3)^0,w,c
 15562  00160E  226C               	addwfc	(i2sprintf@width+1)^0,f,c
 15563  001610  4A4F               	infsnz	i2sprintf@f^0,f,c
 15564  001612  2A50               	incf	(i2sprintf@f+1)^0,f,c
 15565  001614                     
 15566                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15567  001614  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15568  001618  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15569  00161C                     	if	0	;tblptru may be non-zero
 15570  00161C                     	endif
 15571  00161C                     	if	0	;tblptru may be non-zero
 15572  00161C                     	endif
 15573  00161C  0008               	tblrd		*
 15574  00161E  50F5               	movf	tablat,w,c
 15575  001620  EC24  F000         	call	i2_isdigit
 15576  001624  B0D8               	btfsc	status,0,c
 15577  001626  EF17  F00B         	goto	i2u963_41
 15578  00162A  EF19  F00B         	goto	i2u963_40
 15579  00162E                     i2u963_41:
 15580  00162E  EFE6  F00A         	goto	i2l7510
 15581  001632                     i2u963_40:
 15582  001632                     i2l7518:
 15583                           
 15584                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
 15585  001632  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15586  001636  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15587  00163A                     	if	0	;tblptru may be non-zero
 15588  00163A                     	endif
 15589  00163A                     	if	0	;tblptru may be non-zero
 15590  00163A                     	endif
 15591  00163A  0008               	tblrd		*
 15592  00163C  50F5               	movf	tablat,w,c
 15593  00163E  0A2E               	xorlw	46
 15594  001640  A4D8               	btfss	status,2,c
 15595  001642  EF25  F00B         	goto	i2u964_41
 15596  001646  EF27  F00B         	goto	i2u964_40
 15597  00164A                     i2u964_41:
 15598  00164A  EF65  F00B         	goto	i2l7532
 15599  00164E                     i2u964_40:
 15600  00164E                     
 15601                           ;doprnt.c: 629: flag |= 0x4000;
 15602  00164E  8C6A               	bsf	(i2sprintf@flag+1)^0,6,c
 15603                           
 15604                           ;doprnt.c: 630: f++;
 15605  001650  4A4F               	infsnz	i2sprintf@f^0,f,c
 15606  001652  2A50               	incf	(i2sprintf@f+1)^0,f,c
 15607  001654                     
 15608                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 15609  001654  0E00               	movlw	0
 15610  001656  6E72               	movwf	(i2sprintf@prec+1)^0,c
 15611  001658  0E00               	movlw	0
 15612  00165A  6E71               	movwf	i2sprintf@prec^0,c
 15613                           
 15614                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 15615  00165C  EF54  F00B         	goto	i2l7530
 15616  001660                     i2l7524:
 15617                           
 15618                           ;doprnt.c: 647: prec *= 10;
 15619  001660  C071  F001         	movff	i2sprintf@prec,i2___wmul@multiplier
 15620  001664  C072  F002         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
 15621  001668  0E00               	movlw	0
 15622  00166A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 15623  00166C  0E0A               	movlw	10
 15624  00166E  6E03               	movwf	i2___wmul@multiplicand^0,c
 15625  001670  EC53  F000         	call	i2___wmul	;wreg free
 15626  001674  C001  F071         	movff	?i2___wmul,i2sprintf@prec
 15627  001678  C002  F072         	movff	?i2___wmul+1,i2sprintf@prec+1
 15628  00167C                     
 15629                           ;doprnt.c: 648: prec += *f++ - '0';
 15630  00167C  0ED0               	movlw	208
 15631  00167E  6E55               	movwf	??i2_sprintf^0,c
 15632  001680  0EFF               	movlw	255
 15633  001682  6E56               	movwf	(??i2_sprintf+1)^0,c
 15634  001684  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15635  001688  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15636  00168C                     	if	0	;tblptru may be non-zero
 15637  00168C                     	endif
 15638  00168C                     	if	0	;tblptru may be non-zero
 15639  00168C                     	endif
 15640  00168C  0008               	tblrd		*
 15641  00168E  50F5               	movf	tablat,w,c
 15642  001690  6E57               	movwf	(??i2_sprintf+2)^0,c
 15643  001692  6A58               	clrf	(??i2_sprintf+3)^0,c
 15644  001694  5055               	movf	??i2_sprintf^0,w,c
 15645  001696  2657               	addwf	(??i2_sprintf+2)^0,f,c
 15646  001698  5056               	movf	(??i2_sprintf+1)^0,w,c
 15647  00169A  2258               	addwfc	(??i2_sprintf+3)^0,f,c
 15648  00169C  5057               	movf	(??i2_sprintf+2)^0,w,c
 15649  00169E  2671               	addwf	i2sprintf@prec^0,f,c
 15650  0016A0  5058               	movf	(??i2_sprintf+3)^0,w,c
 15651  0016A2  2272               	addwfc	(i2sprintf@prec+1)^0,f,c
 15652  0016A4  4A4F               	infsnz	i2sprintf@f^0,f,c
 15653  0016A6  2A50               	incf	(i2sprintf@f+1)^0,f,c
 15654  0016A8                     i2l7530:
 15655  0016A8  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15656  0016AC  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15657  0016B0                     	if	0	;tblptru may be non-zero
 15658  0016B0                     	endif
 15659  0016B0                     	if	0	;tblptru may be non-zero
 15660  0016B0                     	endif
 15661  0016B0  0008               	tblrd		*
 15662  0016B2  50F5               	movf	tablat,w,c
 15663  0016B4  EC24  F000         	call	i2_isdigit
 15664  0016B8  B0D8               	btfsc	status,0,c
 15665  0016BA  EF61  F00B         	goto	i2u965_41
 15666  0016BE  EF63  F00B         	goto	i2u965_40
 15667  0016C2                     i2u965_41:
 15668  0016C2  EF30  F00B         	goto	i2l7524
 15669  0016C6                     i2u965_40:
 15670  0016C6  EF6F  F00B         	goto	i2l7540
 15671  0016CA                     i2l7532:
 15672                           
 15673                           ;doprnt.c: 652: prec = 0;
 15674  0016CA  0E00               	movlw	0
 15675  0016CC  6E72               	movwf	(i2sprintf@prec+1)^0,c
 15676  0016CE  0E00               	movlw	0
 15677  0016D0  6E71               	movwf	i2sprintf@prec^0,c
 15678  0016D2                     
 15679                           ;doprnt.c: 654: flag |= 0x1000;
 15680  0016D2  886A               	bsf	(i2sprintf@flag+1)^0,4,c
 15681  0016D4  EF6F  F00B         	goto	i2l7540
 15682  0016D8                     i2l7536:
 15683                           
 15684                           ;doprnt.c: 689: flag |= 0x400;
 15685  0016D8  846A               	bsf	(i2sprintf@flag+1)^0,2,c
 15686                           
 15687                           ;doprnt.c: 690: break;
 15688  0016DA  EF8B  F00B         	goto	i2l7542
 15689  0016DE                     i2l7540:
 15690  0016DE  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 15691  0016E2  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 15692  0016E6  4A4F               	infsnz	i2sprintf@f^0,f,c
 15693  0016E8  2A50               	incf	(i2sprintf@f+1)^0,f,c
 15694  0016EA                     	if	0	;tblptru may be non-zero
 15695  0016EA                     	endif
 15696  0016EA                     	if	0	;tblptru may be non-zero
 15697  0016EA                     	endif
 15698  0016EA  0008               	tblrd		*
 15699  0016EC  CFF5 F073          	movff	tablat,i2sprintf@c
 15700  0016F0  5073               	movf	i2sprintf@c^0,w,c
 15701                           
 15702                           ; Switch size 1, requested type "simple"
 15703                           ; Number of cases is 4, Range of values is 0 to 105
 15704                           ; switch strategies available:
 15705                           ; Name         Instructions Cycles
 15706                           ; simple_byte           13     7 (average)
 15707                           ;	Chosen strategy is simple_byte
 15708  0016F2  0A00               	xorlw	0	; case 0
 15709  0016F4  B4D8               	btfsc	status,2,c
 15710  0016F6  EF44  F011         	goto	i2l7820
 15711  0016FA  0A64               	xorlw	100	; case 100
 15712  0016FC  B4D8               	btfsc	status,2,c
 15713  0016FE  EF8B  F00B         	goto	i2l7542
 15714  001702  0A02               	xorlw	2	; case 102
 15715  001704  B4D8               	btfsc	status,2,c
 15716  001706  EF6C  F00B         	goto	i2l7536
 15717  00170A  0A0F               	xorlw	15	; case 105
 15718  00170C  B4D8               	btfsc	status,2,c
 15719  00170E  EF8B  F00B         	goto	i2l7542
 15720  001712  EF33  F011         	goto	i2l7818
 15721  001716                     i2l7542:
 15722                           
 15723                           ;doprnt.c: 851: if(flag & (0x700)) {
 15724  001716  0E07               	movlw	7
 15725  001718  146A               	andwf	(i2sprintf@flag+1)^0,w,c
 15726  00171A  B4D8               	btfsc	status,2,c
 15727  00171C  EF92  F00B         	goto	i2u966_41
 15728  001720  EF94  F00B         	goto	i2u966_40
 15729  001724                     i2u966_41:
 15730  001724  EF8D  F00F         	goto	i2l7722
 15731  001728                     i2u966_40:
 15732  001728                     
 15733                           ;doprnt.c: 853: if(flag & 0x1000)
 15734  001728  A86A               	btfss	(i2sprintf@flag+1)^0,4,c
 15735  00172A  EF99  F00B         	goto	i2u967_41
 15736  00172E  EF9B  F00B         	goto	i2u967_40
 15737  001732                     i2u967_41:
 15738  001732  EF9F  F00B         	goto	i2l7548
 15739  001736                     i2u967_40:
 15740  001736                     
 15741                           ;doprnt.c: 855: prec = 6;
 15742  001736  0E00               	movlw	0
 15743  001738  6E72               	movwf	(i2sprintf@prec+1)^0,c
 15744  00173A  0E06               	movlw	6
 15745  00173C  6E71               	movwf	i2sprintf@prec^0,c
 15746  00173E                     i2l7548:
 15747                           
 15748                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 15749  00173E  C05D  FFD9         	movff	i2sprintf@ap,fsr2l
 15750  001742  C05E  FFDA         	movff	i2sprintf@ap+1,fsr2h
 15751  001746  CFDE F06D          	movff	postinc2,i2sprintf@fval
 15752  00174A  CFDE F06E          	movff	postinc2,i2sprintf@fval+1
 15753  00174E  CFDE F06F          	movff	postinc2,i2sprintf@fval+2
 15754  001752  CFDE F070          	movff	postinc2,i2sprintf@fval+3
 15755  001756  0E04               	movlw	4
 15756  001758  265D               	addwf	i2sprintf@ap^0,f,c
 15757  00175A  0E00               	movlw	0
 15758  00175C  225E               	addwfc	(i2sprintf@ap+1)^0,f,c
 15759  00175E                     
 15760                           ;doprnt.c: 857: if(fval < 0.0) {
 15761  00175E  BE70               	btfsc	(i2sprintf@fval+3)^0,7,c
 15762  001760  EFB6  F00B         	goto	i2u968_40
 15763  001764  EFB4  F00B         	goto	i2u968_41
 15764  001768                     i2u968_41:
 15765  001768  EFCA  F00B         	goto	i2l7558
 15766  00176C                     i2u968_40:
 15767  00176C                     
 15768                           ;doprnt.c: 858: fval = -fval;
 15769  00176C  C06D  F001         	movff	i2sprintf@fval,i2___flneg@f1
 15770  001770  C06E  F002         	movff	i2sprintf@fval+1,i2___flneg@f1+1
 15771  001774  C06F  F003         	movff	i2sprintf@fval+2,i2___flneg@f1+2
 15772  001778  C070  F004         	movff	i2sprintf@fval+3,i2___flneg@f1+3
 15773  00177C  ECD0  F03F         	call	i2___flneg	;wreg free
 15774  001780  C001  F06D         	movff	?i2___flneg,i2sprintf@fval
 15775  001784  C002  F06E         	movff	?i2___flneg+1,i2sprintf@fval+1
 15776  001788  C003  F06F         	movff	?i2___flneg+2,i2sprintf@fval+2
 15777  00178C  C004  F070         	movff	?i2___flneg+3,i2sprintf@fval+3
 15778  001790                     
 15779                           ;doprnt.c: 859: flag |= 0x03;
 15780  001790  0E03               	movlw	3
 15781  001792  1269               	iorwf	i2sprintf@flag^0,f,c
 15782  001794                     i2l7558:
 15783                           
 15784                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 15785  001794  0E00               	movlw	0
 15786  001796  6E68               	movwf	(i2sprintf@eexp+1)^0,c
 15787  001798  0E00               	movlw	0
 15788  00179A  6E67               	movwf	i2sprintf@eexp^0,c
 15789  00179C                     
 15790                           ;doprnt.c: 862: if( fval!=0) {
 15791  00179C  C06D  F001         	movff	i2sprintf@fval,i2___fleq@ff1
 15792  0017A0  C06E  F002         	movff	i2sprintf@fval+1,i2___fleq@ff1+1
 15793  0017A4  C06F  F003         	movff	i2sprintf@fval+2,i2___fleq@ff1+2
 15794  0017A8  C070  F004         	movff	i2sprintf@fval+3,i2___fleq@ff1+3
 15795  0017AC  0E00               	movlw	0
 15796  0017AE  6E05               	movwf	i2___fleq@ff2^0,c
 15797  0017B0  0E00               	movlw	0
 15798  0017B2  6E06               	movwf	(i2___fleq@ff2+1)^0,c
 15799  0017B4  0E00               	movlw	0
 15800  0017B6  6E07               	movwf	(i2___fleq@ff2+2)^0,c
 15801  0017B8  0E00               	movlw	0
 15802  0017BA  6E08               	movwf	(i2___fleq@ff2+3)^0,c
 15803  0017BC  EC82  F03A         	call	i2___fleq	;wreg free
 15804  0017C0  B0D8               	btfsc	status,0,c
 15805  0017C2  EFE5  F00B         	goto	i2u969_41
 15806  0017C6  EFE7  F00B         	goto	i2u969_40
 15807  0017CA                     i2u969_41:
 15808  0017CA  EF76  F00C         	goto	i2l7586
 15809  0017CE                     i2u969_40:
 15810  0017CE                     
 15811                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 15812  0017CE  346F               	rlcf	(i2sprintf@fval+2)^0,w,c
 15813  0017D0  3470               	rlcf	(i2sprintf@fval+3)^0,w,c
 15814  0017D2  0F82               	addlw	130
 15815  0017D4  6E67               	movwf	i2sprintf@eexp^0,c
 15816  0017D6  6A68               	clrf	(i2sprintf@eexp+1)^0,c
 15817  0017D8  0EFF               	movlw	255
 15818  0017DA  2268               	addwfc	(i2sprintf@eexp+1)^0,f,c
 15819  0017DC                     
 15820                           ;doprnt.c: 864: eexp--;
 15821  0017DC  0667               	decf	i2sprintf@eexp^0,f,c
 15822  0017DE  A0D8               	btfss	status,0,c
 15823  0017E0  0668               	decf	(i2sprintf@eexp+1)^0,f,c
 15824  0017E2                     
 15825                           ;doprnt.c: 865: eexp *= 3;
 15826  0017E2  C067  F001         	movff	i2sprintf@eexp,i2___wmul@multiplier
 15827  0017E6  C068  F002         	movff	i2sprintf@eexp+1,i2___wmul@multiplier+1
 15828  0017EA  0E00               	movlw	0
 15829  0017EC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 15830  0017EE  0E03               	movlw	3
 15831  0017F0  6E03               	movwf	i2___wmul@multiplicand^0,c
 15832  0017F2  EC53  F000         	call	i2___wmul	;wreg free
 15833  0017F6  C001  F067         	movff	?i2___wmul,i2sprintf@eexp
 15834  0017FA  C002  F068         	movff	?i2___wmul+1,i2sprintf@eexp+1
 15835  0017FE                     
 15836                           ;doprnt.c: 866: eexp /= 10;
 15837  0017FE  C067  F007         	movff	i2sprintf@eexp,i2___awdiv@dividend
 15838  001802  C068  F008         	movff	i2sprintf@eexp+1,i2___awdiv@dividend+1
 15839  001806  0E00               	movlw	0
 15840  001808  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 15841  00180A  0E0A               	movlw	10
 15842  00180C  6E09               	movwf	i2___awdiv@divisor^0,c
 15843  00180E  ECA9  F037         	call	i2___awdiv	;wreg free
 15844  001812  C007  F067         	movff	?i2___awdiv,i2sprintf@eexp
 15845  001816  C008  F068         	movff	?i2___awdiv+1,i2sprintf@eexp+1
 15846  00181A                     
 15847                           ;doprnt.c: 867: if(eexp < 0)
 15848  00181A  BE68               	btfsc	(i2sprintf@eexp+1)^0,7,c
 15849  00181C  EF14  F00C         	goto	i2u970_40
 15850  001820  EF12  F00C         	goto	i2u970_41
 15851  001824                     i2u970_41:
 15852  001824  EF17  F00C         	goto	i2l7574
 15853  001828                     i2u970_40:
 15854  001828                     
 15855                           ;doprnt.c: 868: eexp--;
 15856  001828  0667               	decf	i2sprintf@eexp^0,f,c
 15857  00182A  A0D8               	btfss	status,0,c
 15858  00182C  0668               	decf	(i2sprintf@eexp+1)^0,f,c
 15859  00182E                     i2l7574:
 15860                           
 15861                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 15862  00182E  5067               	movf	i2sprintf@eexp^0,w,c
 15863  001830  0800               	sublw	0
 15864  001832  ECE2  F01E         	call	i2_scale
 15865  001836  C028  F05F         	movff	?i2_scale,i2sprintf@tmpval
 15866  00183A  C029  F060         	movff	?i2_scale+1,i2sprintf@tmpval+1
 15867  00183E  C02A  F061         	movff	?i2_scale+2,i2sprintf@tmpval+2
 15868  001842  C02B  F062         	movff	?i2_scale+3,i2sprintf@tmpval+3
 15869  001846                     
 15870                           ;doprnt.c: 873: tmpval.integ *= fval;
 15871  001846  C05F  F00F         	movff	i2sprintf@tmpval,i2___flmul@b
 15872  00184A  C060  F010         	movff	i2sprintf@tmpval+1,i2___flmul@b+1
 15873  00184E  C061  F011         	movff	i2sprintf@tmpval+2,i2___flmul@b+2
 15874  001852  C062  F012         	movff	i2sprintf@tmpval+3,i2___flmul@b+3
 15875  001856  C06D  F013         	movff	i2sprintf@fval,i2___flmul@a
 15876  00185A  C06E  F014         	movff	i2sprintf@fval+1,i2___flmul@a+1
 15877  00185E  C06F  F015         	movff	i2sprintf@fval+2,i2___flmul@a+2
 15878  001862  C070  F016         	movff	i2sprintf@fval+3,i2___flmul@a+3
 15879  001866  ECB9  F01A         	call	i2___flmul	;wreg free
 15880  00186A  C00F  F05F         	movff	?i2___flmul,i2sprintf@tmpval
 15881  00186E  C010  F060         	movff	?i2___flmul+1,i2sprintf@tmpval+1
 15882  001872  C011  F061         	movff	?i2___flmul+2,i2sprintf@tmpval+2
 15883  001876  C012  F062         	movff	?i2___flmul+3,i2sprintf@tmpval+3
 15884  00187A                     
 15885                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 15886  00187A  C05F  F001         	movff	i2sprintf@tmpval,i2___flge@ff1
 15887  00187E  C060  F002         	movff	i2sprintf@tmpval+1,i2___flge@ff1+1
 15888  001882  C061  F003         	movff	i2sprintf@tmpval+2,i2___flge@ff1+2
 15889  001886  C062  F004         	movff	i2sprintf@tmpval+3,i2___flge@ff1+3
 15890  00188A  0E00               	movlw	0
 15891  00188C  6E05               	movwf	i2___flge@ff2^0,c
 15892  00188E  0E00               	movlw	0
 15893  001890  6E06               	movwf	(i2___flge@ff2+1)^0,c
 15894  001892  0E80               	movlw	128
 15895  001894  6E07               	movwf	(i2___flge@ff2+2)^0,c
 15896  001896  0E3F               	movlw	63
 15897  001898  6E08               	movwf	(i2___flge@ff2+3)^0,c
 15898  00189A  ECCA  F035         	call	i2___flge	;wreg free
 15899  00189E  B0D8               	btfsc	status,0,c
 15900  0018A0  EF54  F00C         	goto	i2u971_41
 15901  0018A4  EF56  F00C         	goto	i2u971_40
 15902  0018A8                     i2u971_41:
 15903  0018A8  EF5B  F00C         	goto	i2l7582
 15904  0018AC                     i2u971_40:
 15905  0018AC                     
 15906                           ;doprnt.c: 875: eexp--;
 15907  0018AC  0667               	decf	i2sprintf@eexp^0,f,c
 15908  0018AE  A0D8               	btfss	status,0,c
 15909  0018B0  0668               	decf	(i2sprintf@eexp+1)^0,f,c
 15910  0018B2  EF76  F00C         	goto	i2l7586
 15911  0018B6                     i2l7582:
 15912                           
 15913                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 15914  0018B6  C05F  F001         	movff	i2sprintf@tmpval,i2___flge@ff1
 15915  0018BA  C060  F002         	movff	i2sprintf@tmpval+1,i2___flge@ff1+1
 15916  0018BE  C061  F003         	movff	i2sprintf@tmpval+2,i2___flge@ff1+2
 15917  0018C2  C062  F004         	movff	i2sprintf@tmpval+3,i2___flge@ff1+3
 15918  0018C6  0E00               	movlw	0
 15919  0018C8  6E05               	movwf	i2___flge@ff2^0,c
 15920  0018CA  0E00               	movlw	0
 15921  0018CC  6E06               	movwf	(i2___flge@ff2+1)^0,c
 15922  0018CE  0E20               	movlw	32
 15923  0018D0  6E07               	movwf	(i2___flge@ff2+2)^0,c
 15924  0018D2  0E41               	movlw	65
 15925  0018D4  6E08               	movwf	(i2___flge@ff2+3)^0,c
 15926  0018D6  ECCA  F035         	call	i2___flge	;wreg free
 15927  0018DA  A0D8               	btfss	status,0,c
 15928  0018DC  EF72  F00C         	goto	i2u972_41
 15929  0018E0  EF74  F00C         	goto	i2u972_40
 15930  0018E4                     i2u972_41:
 15931  0018E4  EF76  F00C         	goto	i2l7586
 15932  0018E8                     i2u972_40:
 15933  0018E8                     
 15934                           ;doprnt.c: 877: eexp++;
 15935  0018E8  4A67               	infsnz	i2sprintf@eexp^0,f,c
 15936  0018EA  2A68               	incf	(i2sprintf@eexp+1)^0,f,c
 15937  0018EC                     i2l7586:
 15938                           
 15939                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 15940  0018EC  BE72               	btfsc	(i2sprintf@prec+1)^0,7,c
 15941  0018EE  EF84  F00C         	goto	i2u973_40
 15942  0018F2  5072               	movf	(i2sprintf@prec+1)^0,w,c
 15943  0018F4  E107               	bnz	i2u973_41
 15944  0018F6  0E0D               	movlw	13
 15945  0018F8  5C71               	subwf	i2sprintf@prec^0,w,c
 15946  0018FA  B0D8               	btfsc	status,0,c
 15947  0018FC  EF82  F00C         	goto	i2u973_41
 15948  001900  EF84  F00C         	goto	i2u973_40
 15949  001904                     i2u973_41:
 15950  001904  EFA1  F00C         	goto	i2l7590
 15951  001908                     i2u973_40:
 15952  001908                     
 15953                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 15954  001908  C06D  F035         	movff	i2sprintf@fval,i2___fladd@b
 15955  00190C  C06E  F036         	movff	i2sprintf@fval+1,i2___fladd@b+1
 15956  001910  C06F  F037         	movff	i2sprintf@fval+2,i2___fladd@b+2
 15957  001914  C070  F038         	movff	i2sprintf@fval+3,i2___fladd@b+3
 15958  001918  5071               	movf	i2sprintf@prec^0,w,c
 15959  00191A  EC74  F029         	call	i2_fround
 15960  00191E  C028  F039         	movff	?i2_fround,i2___fladd@a
 15961  001922  C029  F03A         	movff	?i2_fround+1,i2___fladd@a+1
 15962  001926  C02A  F03B         	movff	?i2_fround+2,i2___fladd@a+2
 15963  00192A  C02B  F03C         	movff	?i2_fround+3,i2___fladd@a+3
 15964  00192E  EC43  F016         	call	i2___fladd	;wreg free
 15965  001932  C035  F06D         	movff	?i2___fladd,i2sprintf@fval
 15966  001936  C036  F06E         	movff	?i2___fladd+1,i2sprintf@fval+1
 15967  00193A  C037  F06F         	movff	?i2___fladd+2,i2sprintf@fval+2
 15968  00193E  C038  F070         	movff	?i2___fladd+3,i2sprintf@fval+3
 15969  001942                     i2l7590:
 15970                           
 15971                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 15972  001942  BE68               	btfsc	(i2sprintf@eexp+1)^0,7,c
 15973  001944  EFAF  F00C         	goto	i2u974_40
 15974  001948  5068               	movf	(i2sprintf@eexp+1)^0,w,c
 15975  00194A  E107               	bnz	i2u974_41
 15976  00194C  0E0A               	movlw	10
 15977  00194E  5C67               	subwf	i2sprintf@eexp^0,w,c
 15978  001950  B0D8               	btfsc	status,0,c
 15979  001952  EFAD  F00C         	goto	i2u974_41
 15980  001956  EFAF  F00C         	goto	i2u974_40
 15981  00195A                     i2u974_41:
 15982  00195A  EFEB  F00C         	goto	i2l7598
 15983  00195E                     i2u974_40:
 15984  00195E  C06D  F001         	movff	i2sprintf@fval,i2___fleq@ff1
 15985  001962  C06E  F002         	movff	i2sprintf@fval+1,i2___fleq@ff1+1
 15986  001966  C06F  F003         	movff	i2sprintf@fval+2,i2___fleq@ff1+2
 15987  00196A  C070  F004         	movff	i2sprintf@fval+3,i2___fleq@ff1+3
 15988  00196E  0E00               	movlw	0
 15989  001970  6E05               	movwf	i2___fleq@ff2^0,c
 15990  001972  0E00               	movlw	0
 15991  001974  6E06               	movwf	(i2___fleq@ff2+1)^0,c
 15992  001976  0E00               	movlw	0
 15993  001978  6E07               	movwf	(i2___fleq@ff2+2)^0,c
 15994  00197A  0E00               	movlw	0
 15995  00197C  6E08               	movwf	(i2___fleq@ff2+3)^0,c
 15996  00197E  EC82  F03A         	call	i2___fleq	;wreg free
 15997  001982  B0D8               	btfsc	status,0,c
 15998  001984  EFC6  F00C         	goto	i2u975_41
 15999  001988  EFC8  F00C         	goto	i2u975_40
 16000  00198C                     i2u975_41:
 16001  00198C  EF3D  F00D         	goto	i2l7612
 16002  001990                     i2u975_40:
 16003  001990  C06D  F028         	movff	i2sprintf@fval,i2___fltol@f1
 16004  001994  C06E  F029         	movff	i2sprintf@fval+1,i2___fltol@f1+1
 16005  001998  C06F  F02A         	movff	i2sprintf@fval+2,i2___fltol@f1+2
 16006  00199C  C070  F02B         	movff	i2sprintf@fval+3,i2___fltol@f1+3
 16007  0019A0  EC47  F035         	call	i2___fltol	;wreg free
 16008  0019A4  5028               	movf	?i2___fltol^0,w,c
 16009  0019A6  1029               	iorwf	(?i2___fltol+1)^0,w,c
 16010  0019A8  102A               	iorwf	(?i2___fltol+2)^0,w,c
 16011  0019AA  102B               	iorwf	(?i2___fltol+3)^0,w,c
 16012  0019AC  A4D8               	btfss	status,2,c
 16013  0019AE  EFDB  F00C         	goto	i2u976_41
 16014  0019B2  EFDD  F00C         	goto	i2u976_40
 16015  0019B6                     i2u976_41:
 16016  0019B6  EF3D  F00D         	goto	i2l7612
 16017  0019BA                     i2u976_40:
 16018  0019BA  BE68               	btfsc	(i2sprintf@eexp+1)^0,7,c
 16019  0019BC  EFE9  F00C         	goto	i2u977_41
 16020  0019C0  5068               	movf	(i2sprintf@eexp+1)^0,w,c
 16021  0019C2  E109               	bnz	i2u977_40
 16022  0019C4  0E02               	movlw	2
 16023  0019C6  5C67               	subwf	i2sprintf@eexp^0,w,c
 16024  0019C8  A0D8               	btfss	status,0,c
 16025  0019CA  EFE9  F00C         	goto	i2u977_41
 16026  0019CE  EFEB  F00C         	goto	i2u977_40
 16027  0019D2                     i2u977_41:
 16028  0019D2  EF3D  F00D         	goto	i2l7612
 16029  0019D6                     i2u977_40:
 16030  0019D6                     i2l7598:
 16031                           
 16032                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 16033  0019D6  C05F  F001         	movff	i2sprintf@tmpval,i2___flge@ff1
 16034  0019DA  C060  F002         	movff	i2sprintf@tmpval+1,i2___flge@ff1+1
 16035  0019DE  C061  F003         	movff	i2sprintf@tmpval+2,i2___flge@ff1+2
 16036  0019E2  C062  F004         	movff	i2sprintf@tmpval+3,i2___flge@ff1+3
 16037  0019E6  0E5F               	movlw	95
 16038  0019E8  6E05               	movwf	i2___flge@ff2^0,c
 16039  0019EA  0E70               	movlw	112
 16040  0019EC  6E06               	movwf	(i2___flge@ff2+1)^0,c
 16041  0019EE  0E89               	movlw	137
 16042  0019F0  6E07               	movwf	(i2___flge@ff2+2)^0,c
 16043  0019F2  0E40               	movlw	64
 16044  0019F4  6E08               	movwf	(i2___flge@ff2+3)^0,c
 16045  0019F6  ECCA  F035         	call	i2___flge	;wreg free
 16046  0019FA  B0D8               	btfsc	status,0,c
 16047  0019FC  EF02  F00D         	goto	i2u978_41
 16048  001A00  EF04  F00D         	goto	i2u978_40
 16049  001A04                     i2u978_41:
 16050  001A04  EF0A  F00D         	goto	i2l7602
 16051  001A08                     i2u978_40:
 16052  001A08                     
 16053                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 16054  001A08  0EF7               	movlw	247
 16055  001A0A  2667               	addwf	i2sprintf@eexp^0,f,c
 16056  001A0C  0EFF               	movlw	255
 16057  001A0E  2268               	addwfc	(i2sprintf@eexp+1)^0,f,c
 16058                           
 16059                           ;doprnt.c: 1148: }else{
 16060  001A10  EF0E  F00D         	goto	i2l7604
 16061  001A14                     i2l7602:
 16062                           
 16063                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 16064  001A14  0EF8               	movlw	248
 16065  001A16  2667               	addwf	i2sprintf@eexp^0,f,c
 16066  001A18  0EFF               	movlw	255
 16067  001A1A  2268               	addwfc	(i2sprintf@eexp+1)^0,f,c
 16068  001A1C                     i2l7604:
 16069                           
 16070                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 16071  001A1C  5067               	movf	i2sprintf@eexp^0,w,c
 16072  001A1E  ECE2  F01E         	call	i2_scale
 16073  001A22  C028  F05F         	movff	?i2_scale,i2sprintf@tmpval
 16074  001A26  C029  F060         	movff	?i2_scale+1,i2sprintf@tmpval+1
 16075  001A2A  C02A  F061         	movff	?i2_scale+2,i2sprintf@tmpval+2
 16076  001A2E  C02B  F062         	movff	?i2_scale+3,i2sprintf@tmpval+3
 16077  001A32  C06D  F001         	movff	i2sprintf@fval,i2__div_to_l_@f1
 16078  001A36  C06E  F002         	movff	i2sprintf@fval+1,i2__div_to_l_@f1+1
 16079  001A3A  C06F  F003         	movff	i2sprintf@fval+2,i2__div_to_l_@f1+2
 16080  001A3E  C070  F004         	movff	i2sprintf@fval+3,i2__div_to_l_@f1+3
 16081  001A42  C05F  F005         	movff	i2sprintf@tmpval,i2__div_to_l_@f2
 16082  001A46  C060  F006         	movff	i2sprintf@tmpval+1,i2__div_to_l_@f2+1
 16083  001A4A  C061  F007         	movff	i2sprintf@tmpval+2,i2__div_to_l_@f2+2
 16084  001A4E  C062  F008         	movff	i2sprintf@tmpval+3,i2__div_to_l_@f2+3
 16085  001A52  EC0F  F030         	call	i2__div_to_l_	;wreg free
 16086  001A56  C001  F063         	movff	?i2__div_to_l_,i2sprintf@val
 16087  001A5A  C002  F064         	movff	?i2__div_to_l_+1,i2sprintf@val+1
 16088  001A5E  C003  F065         	movff	?i2__div_to_l_+2,i2sprintf@val+2
 16089  001A62  C004  F066         	movff	?i2__div_to_l_+3,i2sprintf@val+3
 16090  001A66                     
 16091                           ;doprnt.c: 1155: fval = 0.0;
 16092  001A66  0E00               	movlw	0
 16093  001A68  6E6D               	movwf	i2sprintf@fval^0,c
 16094  001A6A  0E00               	movlw	0
 16095  001A6C  6E6E               	movwf	(i2sprintf@fval+1)^0,c
 16096  001A6E  0E00               	movlw	0
 16097  001A70  6E6F               	movwf	(i2sprintf@fval+2)^0,c
 16098  001A72  0E00               	movlw	0
 16099  001A74  6E70               	movwf	(i2sprintf@fval+3)^0,c
 16100                           
 16101                           ;doprnt.c: 1156: } else {
 16102  001A76  EF78  F00D         	goto	i2l7616
 16103  001A7A                     i2l7612:
 16104                           
 16105                           ;doprnt.c: 1157: val = (unsigned long)fval;
 16106  001A7A  C06D  F028         	movff	i2sprintf@fval,i2___fltol@f1
 16107  001A7E  C06E  F029         	movff	i2sprintf@fval+1,i2___fltol@f1+1
 16108  001A82  C06F  F02A         	movff	i2sprintf@fval+2,i2___fltol@f1+2
 16109  001A86  C070  F02B         	movff	i2sprintf@fval+3,i2___fltol@f1+3
 16110  001A8A  EC47  F035         	call	i2___fltol	;wreg free
 16111  001A8E  C028  F063         	movff	?i2___fltol,i2sprintf@val
 16112  001A92  C029  F064         	movff	?i2___fltol+1,i2sprintf@val+1
 16113  001A96  C02A  F065         	movff	?i2___fltol+2,i2sprintf@val+2
 16114  001A9A  C02B  F066         	movff	?i2___fltol+3,i2sprintf@val+3
 16115                           
 16116                           ;doprnt.c: 1158: fval -= (double)val;
 16117  001A9E  C06D  F045         	movff	i2sprintf@fval,i2___flsub@b
 16118  001AA2  C06E  F046         	movff	i2sprintf@fval+1,i2___flsub@b+1
 16119  001AA6  C06F  F047         	movff	i2sprintf@fval+2,i2___flsub@b+2
 16120  001AAA  C070  F048         	movff	i2sprintf@fval+3,i2___flsub@b+3
 16121  001AAE  C063  F001         	movff	i2sprintf@val,i2___xxtofl@val
 16122  001AB2  C064  F002         	movff	i2sprintf@val+1,i2___xxtofl@val+1
 16123  001AB6  C065  F003         	movff	i2sprintf@val+2,i2___xxtofl@val+2
 16124  001ABA  C066  F004         	movff	i2sprintf@val+3,i2___xxtofl@val+3
 16125  001ABE  0E00               	movlw	0
 16126  001AC0  EC90  F02C         	call	i2___xxtofl
 16127  001AC4  C001  F049         	movff	?i2___xxtofl,i2___flsub@a
 16128  001AC8  C002  F04A         	movff	?i2___xxtofl+1,i2___flsub@a+1
 16129  001ACC  C003  F04B         	movff	?i2___xxtofl+2,i2___flsub@a+2
 16130  001AD0  C004  F04C         	movff	?i2___xxtofl+3,i2___flsub@a+3
 16131  001AD4  EC73  F03F         	call	i2___flsub	;wreg free
 16132  001AD8  C045  F06D         	movff	?i2___flsub,i2sprintf@fval
 16133  001ADC  C046  F06E         	movff	?i2___flsub+1,i2sprintf@fval+1
 16134  001AE0  C047  F06F         	movff	?i2___flsub+2,i2sprintf@fval+2
 16135  001AE4  C048  F070         	movff	?i2___flsub+3,i2sprintf@fval+3
 16136  001AE8                     
 16137                           ;doprnt.c: 1159: eexp = 0;
 16138  001AE8  0E00               	movlw	0
 16139  001AEA  6E68               	movwf	(i2sprintf@eexp+1)^0,c
 16140  001AEC  0E00               	movlw	0
 16141  001AEE  6E67               	movwf	i2sprintf@eexp^0,c
 16142  001AF0                     i2l7616:
 16143                           
 16144                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 16145  001AF0  0E01               	movlw	1
 16146  001AF2  6E73               	movwf	i2sprintf@c^0,c
 16147  001AF4                     i2l7622:
 16148                           
 16149                           ;doprnt.c: 1163: if(val < dpowers[c])
 16150  001AF4  5073               	movf	i2sprintf@c^0,w,c
 16151  001AF6  0D04               	mullw	4
 16152  001AF8  0E6D               	movlw	low _dpowers
 16153  001AFA  24F3               	addwf	243,w,c
 16154  001AFC  6EF6               	movwf	tblptrl,c
 16155  001AFE  0E06               	movlw	high _dpowers
 16156  001B00  20F4               	addwfc	244,w,c
 16157  001B02  6EF7               	movwf	tblptrh,c
 16158  001B04                     	if	0	;There are less than 3 active tblptr bytes
 16159  001B04                     	endif
 16160  001B04  0009               	tblrd		*+
 16161  001B06  50F5               	movf	tablat,w,c
 16162  001B08  5C63               	subwf	i2sprintf@val^0,w,c
 16163  001B0A  0009               	tblrd		*+
 16164  001B0C  50F5               	movf	tablat,w,c
 16165  001B0E  5864               	subwfb	(i2sprintf@val+1)^0,w,c
 16166  001B10  0009               	tblrd		*+
 16167  001B12  50F5               	movf	tablat,w,c
 16168  001B14  5865               	subwfb	(i2sprintf@val+2)^0,w,c
 16169  001B16  0009               	tblrd		*+
 16170  001B18  50F5               	movf	tablat,w,c
 16171  001B1A  5866               	subwfb	(i2sprintf@val+3)^0,w,c
 16172  001B1C  B0D8               	btfsc	status,0,c
 16173  001B1E  EF93  F00D         	goto	i2u979_41
 16174  001B22  EF95  F00D         	goto	i2u979_40
 16175  001B26                     i2u979_41:
 16176  001B26  EF97  F00D         	goto	i2l7626
 16177  001B2A                     i2u979_40:
 16178  001B2A  EFA1  F00D         	goto	i2l7630
 16179  001B2E                     i2l7626:
 16180  001B2E  2A73               	incf	i2sprintf@c^0,f,c
 16181  001B30  0E0A               	movlw	10
 16182  001B32  1873               	xorwf	i2sprintf@c^0,w,c
 16183  001B34  A4D8               	btfss	status,2,c
 16184  001B36  EF9F  F00D         	goto	i2u980_41
 16185  001B3A  EFA1  F00D         	goto	i2u980_40
 16186  001B3E                     i2u980_41:
 16187  001B3E  EF7A  F00D         	goto	i2l7622
 16188  001B42                     i2u980_40:
 16189  001B42                     i2l7630:
 16190                           
 16191                           ;doprnt.c: 1168: width -= prec + c + eexp;
 16192  001B42  5073               	movf	i2sprintf@c^0,w,c
 16193  001B44  2471               	addwf	i2sprintf@prec^0,w,c
 16194  001B46  6E55               	movwf	??i2_sprintf^0,c
 16195  001B48  0E00               	movlw	0
 16196  001B4A  2072               	addwfc	(i2sprintf@prec+1)^0,w,c
 16197  001B4C  6E56               	movwf	(??i2_sprintf+1)^0,c
 16198  001B4E  5067               	movf	i2sprintf@eexp^0,w,c
 16199  001B50  2655               	addwf	??i2_sprintf^0,f,c
 16200  001B52  5068               	movf	(i2sprintf@eexp+1)^0,w,c
 16201  001B54  2256               	addwfc	(??i2_sprintf+1)^0,f,c
 16202  001B56  5055               	movf	??i2_sprintf^0,w,c
 16203  001B58  5E6B               	subwf	i2sprintf@width^0,f,c
 16204  001B5A  5056               	movf	(??i2_sprintf+1)^0,w,c
 16205  001B5C  5A6C               	subwfb	(i2sprintf@width+1)^0,f,c
 16206                           
 16207                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
 16208  001B5E  5071               	movf	i2sprintf@prec^0,w,c
 16209  001B60  1072               	iorwf	(i2sprintf@prec+1)^0,w,c
 16210  001B62  B4D8               	btfsc	status,2,c
 16211  001B64  EFB6  F00D         	goto	i2u981_41
 16212  001B68  EFB8  F00D         	goto	i2u981_40
 16213  001B6C                     i2u981_41:
 16214  001B6C  EFBB  F00D         	goto	i2l7634
 16215  001B70                     i2u981_40:
 16216  001B70                     
 16217                           ;doprnt.c: 1174: width--;
 16218  001B70  066B               	decf	i2sprintf@width^0,f,c
 16219  001B72  A0D8               	btfss	status,0,c
 16220  001B74  066C               	decf	(i2sprintf@width+1)^0,f,c
 16221  001B76                     i2l7634:
 16222                           
 16223                           ;doprnt.c: 1175: if(flag & 0x03)
 16224  001B76  0E03               	movlw	3
 16225  001B78  1469               	andwf	i2sprintf@flag^0,w,c
 16226  001B7A  6E55               	movwf	??i2_sprintf^0,c
 16227  001B7C  0E00               	movlw	0
 16228  001B7E  146A               	andwf	(i2sprintf@flag+1)^0,w,c
 16229  001B80  6E56               	movwf	(??i2_sprintf+1)^0,c
 16230  001B82  5055               	movf	??i2_sprintf^0,w,c
 16231  001B84  1056               	iorwf	(??i2_sprintf+1)^0,w,c
 16232  001B86  B4D8               	btfsc	status,2,c
 16233  001B88  EFC8  F00D         	goto	i2u982_41
 16234  001B8C  EFCA  F00D         	goto	i2u982_40
 16235  001B90                     i2u982_41:
 16236  001B90  EFCD  F00D         	goto	i2l7638
 16237  001B94                     i2u982_40:
 16238  001B94                     
 16239                           ;doprnt.c: 1176: width--;
 16240  001B94  066B               	decf	i2sprintf@width^0,f,c
 16241  001B96  A0D8               	btfss	status,0,c
 16242  001B98  066C               	decf	(i2sprintf@width+1)^0,f,c
 16243  001B9A                     i2l7638:
 16244                           
 16245                           ;doprnt.c: 1179: if(flag & 0x04) {
 16246  001B9A  A469               	btfss	i2sprintf@flag^0,2,c
 16247  001B9C  EFD2  F00D         	goto	i2u983_41
 16248  001BA0  EFD4  F00D         	goto	i2u983_40
 16249  001BA4                     i2u983_41:
 16250  001BA4  EF12  F00E         	goto	i2l7660
 16251  001BA8                     i2u983_40:
 16252  001BA8                     
 16253                           ;doprnt.c: 1183: if(flag & 0x03)
 16254  001BA8  0E03               	movlw	3
 16255  001BAA  1469               	andwf	i2sprintf@flag^0,w,c
 16256  001BAC  6E55               	movwf	??i2_sprintf^0,c
 16257  001BAE  0E00               	movlw	0
 16258  001BB0  146A               	andwf	(i2sprintf@flag+1)^0,w,c
 16259  001BB2  6E56               	movwf	(??i2_sprintf+1)^0,c
 16260  001BB4  5055               	movf	??i2_sprintf^0,w,c
 16261  001BB6  1056               	iorwf	(??i2_sprintf+1)^0,w,c
 16262  001BB8  B4D8               	btfsc	status,2,c
 16263  001BBA  EFE1  F00D         	goto	i2u984_41
 16264  001BBE  EFE3  F00D         	goto	i2u984_40
 16265  001BC2                     i2u984_41:
 16266  001BC2  EFF8  F00D         	goto	i2l7652
 16267  001BC6                     i2u984_40:
 16268  001BC6                     
 16269                           ;doprnt.c: 1185: ((*sp++ = ('-')));
 16270  001BC6  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16271  001BCA  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16272  001BCE  0E2D               	movlw	45
 16273  001BD0  6EDF               	movwf	indf2,c
 16274  001BD2  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16275  001BD4  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16276  001BD6  EFF8  F00D         	goto	i2l7652
 16277  001BDA                     i2l7646:
 16278                           
 16279                           ;doprnt.c: 1195: ((*sp++ = ('0')));
 16280  001BDA  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16281  001BDE  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16282  001BE2  0E30               	movlw	48
 16283  001BE4  6EDF               	movwf	indf2,c
 16284  001BE6  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16285  001BE8  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16286  001BEA                     
 16287                           ;doprnt.c: 1196: width--;
 16288  001BEA  066B               	decf	i2sprintf@width^0,f,c
 16289  001BEC  A0D8               	btfss	status,0,c
 16290  001BEE  066C               	decf	(i2sprintf@width+1)^0,f,c
 16291  001BF0                     i2l7652:
 16292  001BF0  BE6C               	btfsc	(i2sprintf@width+1)^0,7,c
 16293  001BF2  EF05  F00E         	goto	i2u985_40
 16294  001BF6  506C               	movf	(i2sprintf@width+1)^0,w,c
 16295  001BF8  E106               	bnz	i2u985_41
 16296  001BFA  046B               	decf	i2sprintf@width^0,w,c
 16297  001BFC  B0D8               	btfsc	status,0,c
 16298  001BFE  EF03  F00E         	goto	i2u985_41
 16299  001C02  EF05  F00E         	goto	i2u985_40
 16300  001C06                     i2u985_41:
 16301  001C06  EFED  F00D         	goto	i2l7646
 16302  001C0A                     i2u985_40:
 16303  001C0A  EF81  F00E         	goto	i2l7676
 16304  001C0E                     i2l7654:
 16305                           
 16306                           ;doprnt.c: 1207: ((*sp++ = (' ')));
 16307  001C0E  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16308  001C12  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16309  001C16  0E20               	movlw	32
 16310  001C18  6EDF               	movwf	indf2,c
 16311  001C1A  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16312  001C1C  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16313  001C1E                     
 16314                           ;doprnt.c: 1208: width--;
 16315  001C1E  066B               	decf	i2sprintf@width^0,f,c
 16316  001C20  A0D8               	btfss	status,0,c
 16317  001C22  066C               	decf	(i2sprintf@width+1)^0,f,c
 16318  001C24                     i2l7660:
 16319  001C24  BE6C               	btfsc	(i2sprintf@width+1)^0,7,c
 16320  001C26  EF1F  F00E         	goto	i2u986_40
 16321  001C2A  506C               	movf	(i2sprintf@width+1)^0,w,c
 16322  001C2C  E106               	bnz	i2u986_41
 16323  001C2E  046B               	decf	i2sprintf@width^0,w,c
 16324  001C30  B0D8               	btfsc	status,0,c
 16325  001C32  EF1D  F00E         	goto	i2u986_41
 16326  001C36  EF1F  F00E         	goto	i2u986_40
 16327  001C3A                     i2u986_41:
 16328  001C3A  EF07  F00E         	goto	i2l7654
 16329  001C3E                     i2u986_40:
 16330  001C3E                     
 16331                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
 16332  001C3E  0E03               	movlw	3
 16333  001C40  1469               	andwf	i2sprintf@flag^0,w,c
 16334  001C42  6E55               	movwf	??i2_sprintf^0,c
 16335  001C44  0E00               	movlw	0
 16336  001C46  146A               	andwf	(i2sprintf@flag+1)^0,w,c
 16337  001C48  6E56               	movwf	(??i2_sprintf+1)^0,c
 16338  001C4A  5055               	movf	??i2_sprintf^0,w,c
 16339  001C4C  1056               	iorwf	(??i2_sprintf+1)^0,w,c
 16340  001C4E  B4D8               	btfsc	status,2,c
 16341  001C50  EF2C  F00E         	goto	i2u987_41
 16342  001C54  EF2E  F00E         	goto	i2u987_40
 16343  001C58                     i2u987_41:
 16344  001C58  EF81  F00E         	goto	i2l7676
 16345  001C5C                     i2u987_40:
 16346  001C5C                     
 16347                           ;doprnt.c: 1216: ((*sp++ = ('-')));
 16348  001C5C  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16349  001C60  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16350  001C64  0E2D               	movlw	45
 16351  001C66  6EDF               	movwf	indf2,c
 16352  001C68                     i2l7666:
 16353  001C68  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16354  001C6A  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16355  001C6C  EF81  F00E         	goto	i2l7676
 16356  001C70                     i2l7668:
 16357                           
 16358                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 16359  001C70  C063  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 16360  001C74  C064  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 16361  001C78  C065  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 16362  001C7C  C066  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 16363  001C80  5073               	movf	i2sprintf@c^0,w,c
 16364  001C82  0D04               	mullw	4
 16365  001C84  0E6D               	movlw	low _dpowers
 16366  001C86  24F3               	addwf	243,w,c
 16367  001C88  6EF6               	movwf	tblptrl,c
 16368  001C8A  0E06               	movlw	high _dpowers
 16369  001C8C  20F4               	addwfc	244,w,c
 16370  001C8E  6EF7               	movwf	tblptrh,c
 16371  001C90                     	if	0	;There are less than 3 active tblptr bytes
 16372  001C90                     	endif
 16373  001C90  0009               	tblrd		*+
 16374  001C92  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 16375  001C96  0009               	tblrd		*+
 16376  001C98  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 16377  001C9C  0009               	tblrd		*+
 16378  001C9E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 16379  001CA2  000A               	tblrd		*-
 16380  001CA4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 16381  001CA8  EC2A  F03B         	call	i2___lldiv	;wreg free
 16382  001CAC  C001  F05F         	movff	?i2___lldiv,i2sprintf@tmpval
 16383  001CB0  C002  F060         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 16384  001CB4  C003  F061         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 16385  001CB8  C004  F062         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 16386  001CBC                     
 16387                           ;doprnt.c: 1228: tmpval.vd %= 10;
 16388  001CBC  C05F  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 16389  001CC0  C060  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 16390  001CC4  C061  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 16391  001CC8  C062  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 16392  001CCC  0E0A               	movlw	10
 16393  001CCE  6E12               	movwf	i2___llmod@divisor^0,c
 16394  001CD0  0E00               	movlw	0
 16395  001CD2  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 16396  001CD4  0E00               	movlw	0
 16397  001CD6  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 16398  001CD8  0E00               	movlw	0
 16399  001CDA  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 16400  001CDC  EC10  F03C         	call	i2___llmod	;wreg free
 16401  001CE0  C00E  F05F         	movff	?i2___llmod,i2sprintf@tmpval
 16402  001CE4  C00F  F060         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 16403  001CE8  C010  F061         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 16404  001CEC  C011  F062         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 16405  001CF0                     
 16406                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
 16407  001CF0  505F               	movf	i2sprintf@tmpval^0,w,c
 16408  001CF2  0F30               	addlw	48
 16409  001CF4  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16410  001CF8  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16411  001CFC  6EDF               	movwf	indf2,c
 16412  001CFE  EF34  F00E         	goto	i2l7666
 16413  001D02                     i2l7676:
 16414  001D02  0673               	decf	i2sprintf@c^0,f,c
 16415  001D04  2873               	incf	i2sprintf@c^0,w,c
 16416  001D06  A4D8               	btfss	status,2,c
 16417  001D08  EF88  F00E         	goto	i2u988_41
 16418  001D0C  EF8A  F00E         	goto	i2u988_40
 16419  001D10                     i2u988_41:
 16420  001D10  EF38  F00E         	goto	i2l7668
 16421  001D14                     i2u988_40:
 16422  001D14  EF97  F00E         	goto	i2l7684
 16423  001D18                     i2l7678:
 16424                           
 16425                           ;doprnt.c: 1234: ((*sp++ = ('0')));
 16426  001D18  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16427  001D1C  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16428  001D20  0E30               	movlw	48
 16429  001D22  6EDF               	movwf	indf2,c
 16430  001D24  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16431  001D26  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16432  001D28                     
 16433                           ;doprnt.c: 1235: eexp--;
 16434  001D28  0667               	decf	i2sprintf@eexp^0,f,c
 16435  001D2A  A0D8               	btfss	status,0,c
 16436  001D2C  0668               	decf	(i2sprintf@eexp+1)^0,f,c
 16437  001D2E                     i2l7684:
 16438  001D2E  BE68               	btfsc	(i2sprintf@eexp+1)^0,7,c
 16439  001D30  EFA4  F00E         	goto	i2u989_40
 16440  001D34  5068               	movf	(i2sprintf@eexp+1)^0,w,c
 16441  001D36  E106               	bnz	i2u989_41
 16442  001D38  0467               	decf	i2sprintf@eexp^0,w,c
 16443  001D3A  B0D8               	btfsc	status,0,c
 16444  001D3C  EFA2  F00E         	goto	i2u989_41
 16445  001D40  EFA4  F00E         	goto	i2u989_40
 16446  001D44                     i2u989_41:
 16447  001D44  EF8C  F00E         	goto	i2l7678
 16448  001D48                     i2u989_40:
 16449  001D48                     
 16450                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 16451  001D48  BE72               	btfsc	(i2sprintf@prec+1)^0,7,c
 16452  001D4A  EFB0  F00E         	goto	i2u990_41
 16453  001D4E  5072               	movf	(i2sprintf@prec+1)^0,w,c
 16454  001D50  E109               	bnz	i2u990_40
 16455  001D52  0E09               	movlw	9
 16456  001D54  5C71               	subwf	i2sprintf@prec^0,w,c
 16457  001D56  A0D8               	btfss	status,0,c
 16458  001D58  EFB0  F00E         	goto	i2u990_41
 16459  001D5C  EFB2  F00E         	goto	i2u990_40
 16460  001D60                     i2u990_41:
 16461  001D60  EFB6  F00E         	goto	i2l592
 16462  001D64                     i2u990_40:
 16463  001D64                     
 16464                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 16465  001D64  0E08               	movlw	8
 16466  001D66  6E73               	movwf	i2sprintf@c^0,c
 16467  001D68  EFB8  F00E         	goto	i2l7690
 16468  001D6C                     i2l592:
 16469                           
 16470                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 16471  001D6C  C071  F073         	movff	i2sprintf@prec,i2sprintf@c
 16472  001D70                     i2l7690:
 16473                           
 16474                           ;doprnt.c: 1241: prec -= (int)c;
 16475  001D70  5073               	movf	i2sprintf@c^0,w,c
 16476  001D72  5E71               	subwf	i2sprintf@prec^0,f,c
 16477  001D74  0E00               	movlw	0
 16478  001D76  5A72               	subwfb	(i2sprintf@prec+1)^0,f,c
 16479  001D78                     
 16480                           ;doprnt.c: 1245: if(c)
 16481  001D78  5073               	movf	i2sprintf@c^0,w,c
 16482  001D7A  B4D8               	btfsc	status,2,c
 16483  001D7C  EFC2  F00E         	goto	i2u991_41
 16484  001D80  EFC4  F00E         	goto	i2u991_40
 16485  001D84                     i2u991_41:
 16486  001D84  EFCC  F00E         	goto	i2l7698
 16487  001D88                     i2u991_40:
 16488  001D88                     
 16489                           ;doprnt.c: 1247: ((*sp++ = ('.')));
 16490  001D88  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16491  001D8C  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16492  001D90  0E2E               	movlw	46
 16493  001D92  6EDF               	movwf	indf2,c
 16494  001D94  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16495  001D96  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16496  001D98                     i2l7698:
 16497                           
 16498                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 16499  001D98  5073               	movf	i2sprintf@c^0,w,c
 16500  001D9A  ECE2  F01E         	call	i2_scale
 16501  001D9E  C028  F059         	movff	?i2_scale,i2_sprintf$2228
 16502  001DA2  C029  F05A         	movff	?i2_scale+1,i2_sprintf$2228+1
 16503  001DA6  C02A  F05B         	movff	?i2_scale+2,i2_sprintf$2228+2
 16504  001DAA  C02B  F05C         	movff	?i2_scale+3,i2_sprintf$2228+3
 16505  001DAE                     
 16506                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 16507  001DAE  C06D  F013         	movff	i2sprintf@fval,i2___flmul@a
 16508  001DB2  C06E  F014         	movff	i2sprintf@fval+1,i2___flmul@a+1
 16509  001DB6  C06F  F015         	movff	i2sprintf@fval+2,i2___flmul@a+2
 16510  001DBA  C070  F016         	movff	i2sprintf@fval+3,i2___flmul@a+3
 16511  001DBE  C059  F00F         	movff	i2_sprintf$2228,i2___flmul@b
 16512  001DC2  C05A  F010         	movff	i2_sprintf$2228+1,i2___flmul@b+1
 16513  001DC6  C05B  F011         	movff	i2_sprintf$2228+2,i2___flmul@b+2
 16514  001DCA  C05C  F012         	movff	i2_sprintf$2228+3,i2___flmul@b+3
 16515  001DCE  ECB9  F01A         	call	i2___flmul	;wreg free
 16516  001DD2  C00F  F028         	movff	?i2___flmul,i2___fltol@f1
 16517  001DD6  C010  F029         	movff	?i2___flmul+1,i2___fltol@f1+1
 16518  001DDA  C011  F02A         	movff	?i2___flmul+2,i2___fltol@f1+2
 16519  001DDE  C012  F02B         	movff	?i2___flmul+3,i2___fltol@f1+3
 16520  001DE2  EC47  F035         	call	i2___fltol	;wreg free
 16521  001DE6  C028  F063         	movff	?i2___fltol,i2sprintf@val
 16522  001DEA  C029  F064         	movff	?i2___fltol+1,i2sprintf@val+1
 16523  001DEE  C02A  F065         	movff	?i2___fltol+2,i2sprintf@val+2
 16524  001DF2  C02B  F066         	movff	?i2___fltol+3,i2sprintf@val+3
 16525                           
 16526                           ;doprnt.c: 1254: while(c--) {
 16527  001DF6  EF6C  F00F         	goto	i2l7712
 16528  001DFA                     i2l7702:
 16529                           
 16530                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 16531  001DFA  C063  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 16532  001DFE  C064  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 16533  001E02  C065  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 16534  001E06  C066  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 16535  001E0A  5073               	movf	i2sprintf@c^0,w,c
 16536  001E0C  0D04               	mullw	4
 16537  001E0E  0E6D               	movlw	low _dpowers
 16538  001E10  24F3               	addwf	243,w,c
 16539  001E12  6EF6               	movwf	tblptrl,c
 16540  001E14  0E06               	movlw	high _dpowers
 16541  001E16  20F4               	addwfc	244,w,c
 16542  001E18  6EF7               	movwf	tblptrh,c
 16543  001E1A                     	if	0	;There are less than 3 active tblptr bytes
 16544  001E1A                     	endif
 16545  001E1A  0009               	tblrd		*+
 16546  001E1C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 16547  001E20  0009               	tblrd		*+
 16548  001E22  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 16549  001E26  0009               	tblrd		*+
 16550  001E28  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 16551  001E2C  000A               	tblrd		*-
 16552  001E2E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 16553  001E32  EC2A  F03B         	call	i2___lldiv	;wreg free
 16554  001E36  C001  F05F         	movff	?i2___lldiv,i2sprintf@tmpval
 16555  001E3A  C002  F060         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
 16556  001E3E  C003  F061         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
 16557  001E42  C004  F062         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
 16558  001E46                     
 16559                           ;doprnt.c: 1256: tmpval.vd %= 10;
 16560  001E46  C05F  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
 16561  001E4A  C060  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
 16562  001E4E  C061  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
 16563  001E52  C062  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
 16564  001E56  0E0A               	movlw	10
 16565  001E58  6E12               	movwf	i2___llmod@divisor^0,c
 16566  001E5A  0E00               	movlw	0
 16567  001E5C  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 16568  001E5E  0E00               	movlw	0
 16569  001E60  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 16570  001E62  0E00               	movlw	0
 16571  001E64  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 16572  001E66  EC10  F03C         	call	i2___llmod	;wreg free
 16573  001E6A  C00E  F05F         	movff	?i2___llmod,i2sprintf@tmpval
 16574  001E6E  C00F  F060         	movff	?i2___llmod+1,i2sprintf@tmpval+1
 16575  001E72  C010  F061         	movff	?i2___llmod+2,i2sprintf@tmpval+2
 16576  001E76  C011  F062         	movff	?i2___llmod+3,i2sprintf@tmpval+3
 16577  001E7A                     
 16578                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
 16579  001E7A  505F               	movf	i2sprintf@tmpval^0,w,c
 16580  001E7C  0F30               	addlw	48
 16581  001E7E  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16582  001E82  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16583  001E86  6EDF               	movwf	indf2,c
 16584  001E88  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16585  001E8A  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16586  001E8C                     
 16587                           ;doprnt.c: 1258: val %= dpowers[c];
 16588  001E8C  C063  F00E         	movff	i2sprintf@val,i2___llmod@dividend
 16589  001E90  C064  F00F         	movff	i2sprintf@val+1,i2___llmod@dividend+1
 16590  001E94  C065  F010         	movff	i2sprintf@val+2,i2___llmod@dividend+2
 16591  001E98  C066  F011         	movff	i2sprintf@val+3,i2___llmod@dividend+3
 16592  001E9C  5073               	movf	i2sprintf@c^0,w,c
 16593  001E9E  0D04               	mullw	4
 16594  001EA0  0E6D               	movlw	low _dpowers
 16595  001EA2  24F3               	addwf	243,w,c
 16596  001EA4  6EF6               	movwf	tblptrl,c
 16597  001EA6  0E06               	movlw	high _dpowers
 16598  001EA8  20F4               	addwfc	244,w,c
 16599  001EAA  6EF7               	movwf	tblptrh,c
 16600  001EAC                     	if	0	;There are less than 3 active tblptr bytes
 16601  001EAC                     	endif
 16602  001EAC  0009               	tblrd		*+
 16603  001EAE  CFF5 F012          	movff	tablat,i2___llmod@divisor
 16604  001EB2  0009               	tblrd		*+
 16605  001EB4  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 16606  001EB8  0009               	tblrd		*+
 16607  001EBA  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 16608  001EBE  000A               	tblrd		*-
 16609  001EC0  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 16610  001EC4  EC10  F03C         	call	i2___llmod	;wreg free
 16611  001EC8  C00E  F063         	movff	?i2___llmod,i2sprintf@val
 16612  001ECC  C00F  F064         	movff	?i2___llmod+1,i2sprintf@val+1
 16613  001ED0  C010  F065         	movff	?i2___llmod+2,i2sprintf@val+2
 16614  001ED4  C011  F066         	movff	?i2___llmod+3,i2sprintf@val+3
 16615  001ED8                     i2l7712:
 16616  001ED8  0673               	decf	i2sprintf@c^0,f,c
 16617  001EDA  2873               	incf	i2sprintf@c^0,w,c
 16618  001EDC  A4D8               	btfss	status,2,c
 16619  001EDE  EF73  F00F         	goto	i2u992_41
 16620  001EE2  EF75  F00F         	goto	i2u992_40
 16621  001EE6                     i2u992_41:
 16622  001EE6  EFFD  F00E         	goto	i2l7702
 16623  001EEA                     i2u992_40:
 16624  001EEA  EF82  F00F         	goto	i2l7720
 16625  001EEE                     i2l7714:
 16626                           
 16627                           ;doprnt.c: 1262: ((*sp++ = ('0')));
 16628  001EEE  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16629  001EF2  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16630  001EF6  0E30               	movlw	48
 16631  001EF8  6EDF               	movwf	indf2,c
 16632  001EFA  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16633  001EFC  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16634  001EFE                     
 16635                           ;doprnt.c: 1263: prec--;
 16636  001EFE  0671               	decf	i2sprintf@prec^0,f,c
 16637  001F00  A0D8               	btfss	status,0,c
 16638  001F02  0672               	decf	(i2sprintf@prec+1)^0,f,c
 16639  001F04                     i2l7720:
 16640  001F04  5071               	movf	i2sprintf@prec^0,w,c
 16641  001F06  1072               	iorwf	(i2sprintf@prec+1)^0,w,c
 16642  001F08  A4D8               	btfss	status,2,c
 16643  001F0A  EF89  F00F         	goto	i2u993_41
 16644  001F0E  EF8B  F00F         	goto	i2u993_40
 16645  001F12                     i2u993_41:
 16646  001F12  EF77  F00F         	goto	i2l7714
 16647  001F16                     i2u993_40:
 16648  001F16  EF33  F011         	goto	i2l7818
 16649  001F1A                     i2l7722:
 16650                           
 16651                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
 16652  001F1A  C05D  FFD9         	movff	i2sprintf@ap,fsr2l
 16653  001F1E  C05E  FFDA         	movff	i2sprintf@ap+1,fsr2h
 16654  001F22  CFDE F063          	movff	postinc2,i2sprintf@val
 16655  001F26  CFDD F064          	movff	postdec2,i2sprintf@val+1
 16656  001F2A  0E00               	movlw	0
 16657  001F2C  BE64               	btfsc	(i2sprintf@val+1)^0,7,c
 16658  001F2E  0EFF               	movlw	-1
 16659  001F30  6E65               	movwf	(i2sprintf@val+2)^0,c
 16660  001F32  6E66               	movwf	(i2sprintf@val+3)^0,c
 16661  001F34  0E02               	movlw	2
 16662  001F36  265D               	addwf	i2sprintf@ap^0,f,c
 16663  001F38  0E00               	movlw	0
 16664  001F3A  225E               	addwfc	(i2sprintf@ap+1)^0,f,c
 16665  001F3C                     
 16666                           ;doprnt.c: 1287: if((long)val < 0) {
 16667  001F3C  BE66               	btfsc	(i2sprintf@val+3)^0,7,c
 16668  001F3E  EFA5  F00F         	goto	i2u994_40
 16669  001F42  EFA3  F00F         	goto	i2u994_41
 16670  001F46                     i2u994_41:
 16671  001F46  EFAF  F00F         	goto	i2l7732
 16672  001F4A                     i2u994_40:
 16673  001F4A                     
 16674                           ;doprnt.c: 1288: flag |= 0x03;
 16675  001F4A  0E03               	movlw	3
 16676  001F4C  1269               	iorwf	i2sprintf@flag^0,f,c
 16677  001F4E                     
 16678                           ;doprnt.c: 1289: val = -val;
 16679  001F4E  1E66               	comf	(i2sprintf@val+3)^0,f,c
 16680  001F50  1E65               	comf	(i2sprintf@val+2)^0,f,c
 16681  001F52  1E64               	comf	(i2sprintf@val+1)^0,f,c
 16682  001F54  6C63               	negf	i2sprintf@val^0,c
 16683  001F56  0E00               	movlw	0
 16684  001F58  2264               	addwfc	(i2sprintf@val+1)^0,f,c
 16685  001F5A  2265               	addwfc	(i2sprintf@val+2)^0,f,c
 16686  001F5C  2266               	addwfc	(i2sprintf@val+3)^0,f,c
 16687  001F5E                     i2l7732:
 16688                           
 16689                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
 16690  001F5E  5071               	movf	i2sprintf@prec^0,w,c
 16691  001F60  1072               	iorwf	(i2sprintf@prec+1)^0,w,c
 16692  001F62  A4D8               	btfss	status,2,c
 16693  001F64  EFB6  F00F         	goto	i2u995_41
 16694  001F68  EFB8  F00F         	goto	i2u995_40
 16695  001F6C                     i2u995_41:
 16696  001F6C  EFC5  F00F         	goto	i2l7738
 16697  001F70                     i2u995_40:
 16698  001F70  5063               	movf	i2sprintf@val^0,w,c
 16699  001F72  1064               	iorwf	(i2sprintf@val+1)^0,w,c
 16700  001F74  1065               	iorwf	(i2sprintf@val+2)^0,w,c
 16701  001F76  1066               	iorwf	(i2sprintf@val+3)^0,w,c
 16702  001F78  A4D8               	btfss	status,2,c
 16703  001F7A  EFC1  F00F         	goto	i2u996_41
 16704  001F7E  EFC3  F00F         	goto	i2u996_40
 16705  001F82                     i2u996_41:
 16706  001F82  EFC5  F00F         	goto	i2l7738
 16707  001F86                     i2u996_40:
 16708  001F86                     
 16709                           ;doprnt.c: 1317: prec++;
 16710  001F86  4A71               	infsnz	i2sprintf@prec^0,f,c
 16711  001F88  2A72               	incf	(i2sprintf@prec+1)^0,f,c
 16712  001F8A                     i2l7738:
 16713                           
 16714                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16715  001F8A  0E01               	movlw	1
 16716  001F8C  6E73               	movwf	i2sprintf@c^0,c
 16717  001F8E                     i2l7744:
 16718                           
 16719                           ;doprnt.c: 1332: if(val < dpowers[c])
 16720  001F8E  5073               	movf	i2sprintf@c^0,w,c
 16721  001F90  0D04               	mullw	4
 16722  001F92  0E6D               	movlw	low _dpowers
 16723  001F94  24F3               	addwf	243,w,c
 16724  001F96  6EF6               	movwf	tblptrl,c
 16725  001F98  0E06               	movlw	high _dpowers
 16726  001F9A  20F4               	addwfc	244,w,c
 16727  001F9C  6EF7               	movwf	tblptrh,c
 16728  001F9E                     	if	0	;There are less than 3 active tblptr bytes
 16729  001F9E                     	endif
 16730  001F9E  0009               	tblrd		*+
 16731  001FA0  50F5               	movf	tablat,w,c
 16732  001FA2  5C63               	subwf	i2sprintf@val^0,w,c
 16733  001FA4  0009               	tblrd		*+
 16734  001FA6  50F5               	movf	tablat,w,c
 16735  001FA8  5864               	subwfb	(i2sprintf@val+1)^0,w,c
 16736  001FAA  0009               	tblrd		*+
 16737  001FAC  50F5               	movf	tablat,w,c
 16738  001FAE  5865               	subwfb	(i2sprintf@val+2)^0,w,c
 16739  001FB0  0009               	tblrd		*+
 16740  001FB2  50F5               	movf	tablat,w,c
 16741  001FB4  5866               	subwfb	(i2sprintf@val+3)^0,w,c
 16742  001FB6  B0D8               	btfsc	status,0,c
 16743  001FB8  EFE0  F00F         	goto	i2u997_41
 16744  001FBC  EFE2  F00F         	goto	i2u997_40
 16745  001FC0                     i2u997_41:
 16746  001FC0  EFE4  F00F         	goto	i2l7748
 16747  001FC4                     i2u997_40:
 16748  001FC4  EFEE  F00F         	goto	i2l7752
 16749  001FC8                     i2l7748:
 16750  001FC8  2A73               	incf	i2sprintf@c^0,f,c
 16751  001FCA  0E0A               	movlw	10
 16752  001FCC  1873               	xorwf	i2sprintf@c^0,w,c
 16753  001FCE  A4D8               	btfss	status,2,c
 16754  001FD0  EFEC  F00F         	goto	i2u998_41
 16755  001FD4  EFEE  F00F         	goto	i2u998_40
 16756  001FD8                     i2u998_41:
 16757  001FD8  EFC7  F00F         	goto	i2l7744
 16758  001FDC                     i2u998_40:
 16759  001FDC                     i2l7752:
 16760                           
 16761                           ;doprnt.c: 1365: if(c < prec)
 16762  001FDC  5073               	movf	i2sprintf@c^0,w,c
 16763  001FDE  6E55               	movwf	??i2_sprintf^0,c
 16764  001FE0  6A56               	clrf	(??i2_sprintf+1)^0,c
 16765  001FE2  5071               	movf	i2sprintf@prec^0,w,c
 16766  001FE4  5C55               	subwf	??i2_sprintf^0,w,c
 16767  001FE6  5056               	movf	(??i2_sprintf+1)^0,w,c
 16768  001FE8  0A80               	xorlw	128
 16769  001FEA  6E57               	movwf	(??i2_sprintf+2)^0,c
 16770  001FEC  5072               	movf	(i2sprintf@prec+1)^0,w,c
 16771  001FEE  0A80               	xorlw	128
 16772  001FF0  5857               	subwfb	(??i2_sprintf+2)^0,w,c
 16773  001FF2  B0D8               	btfsc	status,0,c
 16774  001FF4  EFFE  F00F         	goto	i2u999_41
 16775  001FF8  EF00  F010         	goto	i2u999_40
 16776  001FFC                     i2u999_41:
 16777  001FFC  EF04  F010         	goto	i2l7756
 16778  002000                     i2u999_40:
 16779  002000                     
 16780                           ;doprnt.c: 1366: c = (char)prec;
 16781  002000  C071  F073         	movff	i2sprintf@prec,i2sprintf@c
 16782  002004  EF19  F010         	goto	i2l7760
 16783  002008                     i2l7756:
 16784                           
 16785                           ;doprnt.c: 1367: else if(prec < c)
 16786  002008  5073               	movf	i2sprintf@c^0,w,c
 16787  00200A  6E55               	movwf	??i2_sprintf^0,c
 16788  00200C  6A56               	clrf	(??i2_sprintf+1)^0,c
 16789  00200E  5055               	movf	??i2_sprintf^0,w,c
 16790  002010  5C71               	subwf	i2sprintf@prec^0,w,c
 16791  002012  5072               	movf	(i2sprintf@prec+1)^0,w,c
 16792  002014  0A80               	xorlw	128
 16793  002016  6E57               	movwf	(??i2_sprintf+2)^0,c
 16794  002018  5056               	movf	(??i2_sprintf+1)^0,w,c
 16795  00201A  0A80               	xorlw	128
 16796  00201C  5857               	subwfb	(??i2_sprintf+2)^0,w,c
 16797  00201E  B0D8               	btfsc	status,0,c
 16798  002020  EF14  F010         	goto	i2u1000_41
 16799  002024  EF16  F010         	goto	i2u1000_40
 16800  002028                     i2u1000_41:
 16801  002028  EF19  F010         	goto	i2l7760
 16802  00202C                     i2u1000_40:
 16803  00202C                     
 16804                           ;doprnt.c: 1368: prec = c;
 16805  00202C  C073  F071         	movff	i2sprintf@c,i2sprintf@prec
 16806  002030  6A72               	clrf	(i2sprintf@prec+1)^0,c
 16807  002032                     i2l7760:
 16808                           
 16809                           ;doprnt.c: 1371: if(width && flag & 0x03)
 16810  002032  506B               	movf	i2sprintf@width^0,w,c
 16811  002034  106C               	iorwf	(i2sprintf@width+1)^0,w,c
 16812  002036  B4D8               	btfsc	status,2,c
 16813  002038  EF20  F010         	goto	i2u1001_41
 16814  00203C  EF22  F010         	goto	i2u1001_40
 16815  002040                     i2u1001_41:
 16816  002040  EF34  F010         	goto	i2l7766
 16817  002044                     i2u1001_40:
 16818  002044  0E03               	movlw	3
 16819  002046  1469               	andwf	i2sprintf@flag^0,w,c
 16820  002048  6E55               	movwf	??i2_sprintf^0,c
 16821  00204A  0E00               	movlw	0
 16822  00204C  146A               	andwf	(i2sprintf@flag+1)^0,w,c
 16823  00204E  6E56               	movwf	(??i2_sprintf+1)^0,c
 16824  002050  5055               	movf	??i2_sprintf^0,w,c
 16825  002052  1056               	iorwf	(??i2_sprintf+1)^0,w,c
 16826  002054  B4D8               	btfsc	status,2,c
 16827  002056  EF2F  F010         	goto	i2u1002_41
 16828  00205A  EF31  F010         	goto	i2u1002_40
 16829  00205E                     i2u1002_41:
 16830  00205E  EF34  F010         	goto	i2l7766
 16831  002062                     i2u1002_40:
 16832  002062                     
 16833                           ;doprnt.c: 1372: width--;
 16834  002062  066B               	decf	i2sprintf@width^0,f,c
 16835  002064  A0D8               	btfss	status,0,c
 16836  002066  066C               	decf	(i2sprintf@width+1)^0,f,c
 16837  002068                     i2l7766:
 16838                           
 16839                           ;doprnt.c: 1374: if(flag & 0x4000) {
 16840  002068  AC6A               	btfss	(i2sprintf@flag+1)^0,6,c
 16841  00206A  EF39  F010         	goto	i2u1003_41
 16842  00206E  EF3B  F010         	goto	i2u1003_40
 16843  002072                     i2u1003_41:
 16844  002072  EF54  F010         	goto	i2l7774
 16845  002076                     i2u1003_40:
 16846  002076                     
 16847                           ;doprnt.c: 1375: if(width > prec)
 16848  002076  506B               	movf	i2sprintf@width^0,w,c
 16849  002078  5C71               	subwf	i2sprintf@prec^0,w,c
 16850  00207A  5072               	movf	(i2sprintf@prec+1)^0,w,c
 16851  00207C  0A80               	xorlw	128
 16852  00207E  6E55               	movwf	??i2_sprintf^0,c
 16853  002080  506C               	movf	(i2sprintf@width+1)^0,w,c
 16854  002082  0A80               	xorlw	128
 16855  002084  5855               	subwfb	??i2_sprintf^0,w,c
 16856  002086  B0D8               	btfsc	status,0,c
 16857  002088  EF48  F010         	goto	i2u1004_41
 16858  00208C  EF4A  F010         	goto	i2u1004_40
 16859  002090                     i2u1004_41:
 16860  002090  EF50  F010         	goto	i2l7772
 16861  002094                     i2u1004_40:
 16862  002094                     
 16863                           ;doprnt.c: 1376: width -= prec;
 16864  002094  5071               	movf	i2sprintf@prec^0,w,c
 16865  002096  5E6B               	subwf	i2sprintf@width^0,f,c
 16866  002098  5072               	movf	(i2sprintf@prec+1)^0,w,c
 16867  00209A  5A6C               	subwfb	(i2sprintf@width+1)^0,f,c
 16868  00209C  EF54  F010         	goto	i2l7774
 16869  0020A0                     i2l7772:
 16870                           
 16871                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
 16872  0020A0  0E00               	movlw	0
 16873  0020A2  6E6C               	movwf	(i2sprintf@width+1)^0,c
 16874  0020A4  0E00               	movlw	0
 16875  0020A6  6E6B               	movwf	i2sprintf@width^0,c
 16876  0020A8                     i2l7774:
 16877                           
 16878                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
 16879  0020A8  5073               	movf	i2sprintf@c^0,w,c
 16880  0020AA  6E55               	movwf	??i2_sprintf^0,c
 16881  0020AC  6A56               	clrf	(??i2_sprintf+1)^0,c
 16882  0020AE  506B               	movf	i2sprintf@width^0,w,c
 16883  0020B0  5C55               	subwf	??i2_sprintf^0,w,c
 16884  0020B2  5056               	movf	(??i2_sprintf+1)^0,w,c
 16885  0020B4  0A80               	xorlw	128
 16886  0020B6  6E57               	movwf	(??i2_sprintf+2)^0,c
 16887  0020B8  506C               	movf	(i2sprintf@width+1)^0,w,c
 16888  0020BA  0A80               	xorlw	128
 16889  0020BC  5857               	subwfb	(??i2_sprintf+2)^0,w,c
 16890  0020BE  B0D8               	btfsc	status,0,c
 16891  0020C0  EF64  F010         	goto	i2u1005_41
 16892  0020C4  EF66  F010         	goto	i2u1005_40
 16893  0020C8                     i2u1005_41:
 16894  0020C8  EF6C  F010         	goto	i2l7778
 16895  0020CC                     i2u1005_40:
 16896  0020CC                     
 16897                           ;doprnt.c: 1408: width -= c;
 16898  0020CC  5073               	movf	i2sprintf@c^0,w,c
 16899  0020CE  5E6B               	subwf	i2sprintf@width^0,f,c
 16900  0020D0  0E00               	movlw	0
 16901  0020D2  5A6C               	subwfb	(i2sprintf@width+1)^0,f,c
 16902  0020D4  EF70  F010         	goto	i2l7780
 16903  0020D8                     i2l7778:
 16904                           
 16905                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 16906  0020D8  0E00               	movlw	0
 16907  0020DA  6E6C               	movwf	(i2sprintf@width+1)^0,c
 16908  0020DC  0E00               	movlw	0
 16909  0020DE  6E6B               	movwf	i2sprintf@width^0,c
 16910  0020E0                     i2l7780:
 16911                           
 16912                           ;doprnt.c: 1413: if(flag & 0x04) {
 16913  0020E0  A469               	btfss	i2sprintf@flag^0,2,c
 16914  0020E2  EF75  F010         	goto	i2u1006_41
 16915  0020E6  EF77  F010         	goto	i2u1006_40
 16916  0020EA                     i2u1006_41:
 16917  0020EA  EFAD  F010         	goto	i2l7796
 16918  0020EE                     i2u1006_40:
 16919  0020EE                     
 16920                           ;doprnt.c: 1418: if(flag & 0x03)
 16921  0020EE  0E03               	movlw	3
 16922  0020F0  1469               	andwf	i2sprintf@flag^0,w,c
 16923  0020F2  6E55               	movwf	??i2_sprintf^0,c
 16924  0020F4  0E00               	movlw	0
 16925  0020F6  146A               	andwf	(i2sprintf@flag+1)^0,w,c
 16926  0020F8  6E56               	movwf	(??i2_sprintf+1)^0,c
 16927  0020FA  5055               	movf	??i2_sprintf^0,w,c
 16928  0020FC  1056               	iorwf	(??i2_sprintf+1)^0,w,c
 16929  0020FE  B4D8               	btfsc	status,2,c
 16930  002100  EF84  F010         	goto	i2u1007_41
 16931  002104  EF86  F010         	goto	i2u1007_40
 16932  002108                     i2u1007_41:
 16933  002108  EF8E  F010         	goto	i2l7788
 16934  00210C                     i2u1007_40:
 16935  00210C                     
 16936                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 16937  00210C  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16938  002110  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16939  002114  0E2D               	movlw	45
 16940  002116  6EDF               	movwf	indf2,c
 16941  002118  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16942  00211A  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16943  00211C                     i2l7788:
 16944                           
 16945                           ;doprnt.c: 1441: if(width)
 16946  00211C  506B               	movf	i2sprintf@width^0,w,c
 16947  00211E  106C               	iorwf	(i2sprintf@width+1)^0,w,c
 16948  002120  B4D8               	btfsc	status,2,c
 16949  002122  EF95  F010         	goto	i2u1008_41
 16950  002126  EF97  F010         	goto	i2u1008_40
 16951  00212A                     i2u1008_41:
 16952  00212A  EF26  F011         	goto	i2l7816
 16953  00212E                     i2u1008_40:
 16954  00212E                     i2l7790:
 16955                           
 16956                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 16957  00212E  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16958  002132  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16959  002136  0E30               	movlw	48
 16960  002138  6EDF               	movwf	indf2,c
 16961  00213A  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16962  00213C  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16963  00213E                     
 16964                           ;doprnt.c: 1444: while(--width);
 16965  00213E  066B               	decf	i2sprintf@width^0,f,c
 16966  002140  A0D8               	btfss	status,0,c
 16967  002142  066C               	decf	(i2sprintf@width+1)^0,f,c
 16968  002144  506B               	movf	i2sprintf@width^0,w,c
 16969  002146  106C               	iorwf	(i2sprintf@width+1)^0,w,c
 16970  002148  A4D8               	btfss	status,2,c
 16971  00214A  EFA9  F010         	goto	i2u1009_41
 16972  00214E  EFAB  F010         	goto	i2u1009_40
 16973  002152                     i2u1009_41:
 16974  002152  EF97  F010         	goto	i2l7790
 16975  002156                     i2u1009_40:
 16976  002156  EF26  F011         	goto	i2l7816
 16977  00215A                     i2l7796:
 16978                           
 16979                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 16980  00215A  506B               	movf	i2sprintf@width^0,w,c
 16981  00215C  106C               	iorwf	(i2sprintf@width+1)^0,w,c
 16982  00215E  B4D8               	btfsc	status,2,c
 16983  002160  EFB4  F010         	goto	i2u1010_41
 16984  002164  EFB6  F010         	goto	i2u1010_40
 16985  002168                     i2u1010_41:
 16986  002168  EFCA  F010         	goto	i2l7804
 16987  00216C                     i2u1010_40:
 16988  00216C                     i2l7798:
 16989                           
 16990                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 16991  00216C  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 16992  002170  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 16993  002174  0E20               	movlw	32
 16994  002176  6EDF               	movwf	indf2,c
 16995  002178  4A4D               	infsnz	i2sprintf@sp^0,f,c
 16996  00217A  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 16997  00217C                     
 16998                           ;doprnt.c: 1457: while(--width);
 16999  00217C  066B               	decf	i2sprintf@width^0,f,c
 17000  00217E  A0D8               	btfss	status,0,c
 17001  002180  066C               	decf	(i2sprintf@width+1)^0,f,c
 17002  002182  506B               	movf	i2sprintf@width^0,w,c
 17003  002184  106C               	iorwf	(i2sprintf@width+1)^0,w,c
 17004  002186  A4D8               	btfss	status,2,c
 17005  002188  EFC8  F010         	goto	i2u1011_41
 17006  00218C  EFCA  F010         	goto	i2u1011_40
 17007  002190                     i2u1011_41:
 17008  002190  EFB6  F010         	goto	i2l7798
 17009  002194                     i2u1011_40:
 17010  002194                     i2l7804:
 17011                           
 17012                           ;doprnt.c: 1464: if(flag & 0x03)
 17013  002194  0E03               	movlw	3
 17014  002196  1469               	andwf	i2sprintf@flag^0,w,c
 17015  002198  6E55               	movwf	??i2_sprintf^0,c
 17016  00219A  0E00               	movlw	0
 17017  00219C  146A               	andwf	(i2sprintf@flag+1)^0,w,c
 17018  00219E  6E56               	movwf	(??i2_sprintf+1)^0,c
 17019  0021A0  5055               	movf	??i2_sprintf^0,w,c
 17020  0021A2  1056               	iorwf	(??i2_sprintf+1)^0,w,c
 17021  0021A4  B4D8               	btfsc	status,2,c
 17022  0021A6  EFD7  F010         	goto	i2u1012_41
 17023  0021AA  EFD9  F010         	goto	i2u1012_40
 17024  0021AE                     i2u1012_41:
 17025  0021AE  EF26  F011         	goto	i2l7816
 17026  0021B2                     i2u1012_40:
 17027  0021B2                     
 17028                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 17029  0021B2  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 17030  0021B6  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 17031  0021BA  0E2D               	movlw	45
 17032  0021BC  6EDF               	movwf	indf2,c
 17033  0021BE                     i2l7808:
 17034  0021BE  4A4D               	infsnz	i2sprintf@sp^0,f,c
 17035  0021C0  2A4E               	incf	(i2sprintf@sp+1)^0,f,c
 17036  0021C2  EF26  F011         	goto	i2l7816
 17037  0021C6                     i2l7810:
 17038                           
 17039                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 17040  0021C6  C071  F055         	movff	i2sprintf@prec,??i2_sprintf
 17041  0021CA  C072  F056         	movff	i2sprintf@prec+1,??i2_sprintf+1
 17042  0021CE  90D8               	bcf	status,0,c
 17043  0021D0  3655               	rlcf	??i2_sprintf^0,f,c
 17044  0021D2  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 17045  0021D4  90D8               	bcf	status,0,c
 17046  0021D6  3655               	rlcf	??i2_sprintf^0,f,c
 17047  0021D8  3656               	rlcf	(??i2_sprintf+1)^0,f,c
 17048  0021DA  0E6D               	movlw	low _dpowers
 17049  0021DC  2455               	addwf	??i2_sprintf^0,w,c
 17050  0021DE  6EF6               	movwf	tblptrl,c
 17051  0021E0  0E06               	movlw	high _dpowers
 17052  0021E2  2056               	addwfc	(??i2_sprintf+1)^0,w,c
 17053  0021E4  6EF7               	movwf	tblptrh,c
 17054  0021E6                     	if	0	;There are less than 3 active tblptr bytes
 17055  0021E6                     	endif
 17056  0021E6  0009               	tblrd		*+
 17057  0021E8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 17058  0021EC  0009               	tblrd		*+
 17059  0021EE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 17060  0021F2  0009               	tblrd		*+
 17061  0021F4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 17062  0021F8  000A               	tblrd		*-
 17063  0021FA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 17064  0021FE  C063  F001         	movff	i2sprintf@val,i2___lldiv@dividend
 17065  002202  C064  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
 17066  002206  C065  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
 17067  00220A  C066  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
 17068  00220E  EC2A  F03B         	call	i2___lldiv	;wreg free
 17069  002212  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 17070  002216  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 17071  00221A  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 17072  00221E  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 17073  002222  0E0A               	movlw	10
 17074  002224  6E12               	movwf	i2___llmod@divisor^0,c
 17075  002226  0E00               	movlw	0
 17076  002228  6E13               	movwf	(i2___llmod@divisor+1)^0,c
 17077  00222A  0E00               	movlw	0
 17078  00222C  6E14               	movwf	(i2___llmod@divisor+2)^0,c
 17079  00222E  0E00               	movlw	0
 17080  002230  6E15               	movwf	(i2___llmod@divisor+3)^0,c
 17081  002232  EC10  F03C         	call	i2___llmod	;wreg free
 17082  002236  500E               	movf	?i2___llmod^0,w,c
 17083  002238  0F30               	addlw	48
 17084  00223A  6E73               	movwf	i2sprintf@c^0,c
 17085  00223C                     
 17086                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 17087  00223C  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 17088  002240  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 17089  002244  C073  FFDF         	movff	i2sprintf@c,indf2
 17090  002248  EFDF  F010         	goto	i2l7808
 17091  00224C                     i2l7816:
 17092  00224C  0671               	decf	i2sprintf@prec^0,f,c
 17093  00224E  A0D8               	btfss	status,0,c
 17094  002250  0672               	decf	(i2sprintf@prec+1)^0,f,c
 17095  002252  2871               	incf	i2sprintf@prec^0,w,c
 17096  002254  E106               	bnz	i2u1013_41
 17097  002256  2872               	incf	(i2sprintf@prec+1)^0,w,c
 17098  002258  A4D8               	btfss	status,2,c
 17099  00225A  EF31  F011         	goto	i2u1013_41
 17100  00225E  EF33  F011         	goto	i2u1013_40
 17101  002262                     i2u1013_41:
 17102  002262  EFE3  F010         	goto	i2l7810
 17103  002266                     i2u1013_40:
 17104  002266                     i2l7818:
 17105  002266  C04F  FFF6         	movff	i2sprintf@f,tblptrl
 17106  00226A  C050  FFF7         	movff	i2sprintf@f+1,tblptrh
 17107  00226E  4A4F               	infsnz	i2sprintf@f^0,f,c
 17108  002270  2A50               	incf	(i2sprintf@f+1)^0,f,c
 17109  002272                     	if	0	;tblptru may be non-zero
 17110  002272                     	endif
 17111  002272                     	if	0	;tblptru may be non-zero
 17112  002272                     	endif
 17113  002272  0008               	tblrd		*
 17114  002274  CFF5 F073          	movff	tablat,i2sprintf@c
 17115  002278  5073               	movf	i2sprintf@c^0,w,c
 17116  00227A  A4D8               	btfss	status,2,c
 17117  00227C  EF42  F011         	goto	i2u1014_41
 17118  002280  EF44  F011         	goto	i2u1014_40
 17119  002284                     i2u1014_41:
 17120  002284  EFA7  F00A         	goto	i2l7492
 17121  002288                     i2u1014_40:
 17122  002288                     i2l7820:
 17123                           
 17124                           ;doprnt.c: 1564: *sp = 0;
 17125  002288  C04D  FFD9         	movff	i2sprintf@sp,fsr2l
 17126  00228C  C04E  FFDA         	movff	i2sprintf@sp+1,fsr2h
 17127  002290  0E00               	movlw	0
 17128  002292  6EDF               	movwf	indf2,c
 17129  002294  0012               	return		;funcret
 17130  002296                     __end_ofi2_sprintf:
 17131                           	callstack 0
 17132                           
 17133 ;; *************** function i2_scale *****************
 17134 ;; Defined at:
 17135 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
 17136 ;; Parameters:    Size  Location     Type
 17137 ;;  scl             1    wreg     char 
 17138 ;; Auto vars:     Size  Location     Type
 17139 ;;  scl             1   47[COMRAM] char 
 17140 ;; Return value:  Size  Location     Type
 17141 ;;                  4   39[COMRAM] char 
 17142 ;; Registers used:
 17143 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17144 ;; Tracked objects:
 17145 ;;		On entry : 0/0
 17146 ;;		On exit  : 0/0
 17147 ;;		Unchanged: 0/0
 17148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17149 ;;      Params:         4       0       0       0       0       0       0
 17150 ;;      Locals:         5       0       0       0       0       0       0
 17151 ;;      Temps:          0       0       0       0       0       0       0
 17152 ;;      Totals:         9       0       0       0       0       0       0
 17153 ;;Total ram usage:        9 bytes
 17154 ;; Hardware stack levels used:    1
 17155 ;; Hardware stack levels required when called:    1
 17156 ;; This function calls:
 17157 ;;		i2___awdiv
 17158 ;;		i2___awmod
 17159 ;;		i2___flmul
 17160 ;; This function is called by:
 17161 ;;		i2_sprintf
 17162 ;; This function uses a non-reentrant model
 17163 ;;
 17164                           
 17165                           	psect	text51
 17166  003DC4                     __ptext51:
 17167                           	callstack 0
 17168  003DC4                     i2_scale:
 17169                           	callstack 22
 17170                           
 17171                           ;incstack = 0
 17172                           ;i2scale@scl stored from wreg
 17173  003DC4  6E30               	movwf	i2scale@scl^0,c
 17174  003DC6                     
 17175                           ;doprnt.c: 436: if(scl < 0) {
 17176  003DC6  BE30               	btfsc	i2scale@scl^0,7,c
 17177  003DC8  EFEA  F01E         	goto	i2u814_40
 17178  003DCC  EFE8  F01E         	goto	i2u814_41
 17179  003DD0                     i2u814_41:
 17180  003DD0  EFEA  F01F         	goto	i2l6558
 17181  003DD4                     i2u814_40:
 17182  003DD4                     
 17183                           ;doprnt.c: 437: scl = -scl;
 17184  003DD4  6C30               	negf	i2scale@scl^0,c
 17185                           
 17186                           ;doprnt.c: 438: if(scl>=110)
 17187  003DD6  5030               	movf	i2scale@scl^0,w,c
 17188  003DD8  0A80               	xorlw	128
 17189  003DDA  0F12               	addlw	-238
 17190  003DDC  A0D8               	btfss	status,0,c
 17191  003DDE  EFF3  F01E         	goto	i2u815_41
 17192  003DE2  EFF5  F01E         	goto	i2u815_40
 17193  003DE6                     i2u815_41:
 17194  003DE6  EF7E  F01F         	goto	i2l6548
 17195  003DEA                     i2u815_40:
 17196  003DEA                     
 17197                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 17198  003DEA  0E00               	movlw	0
 17199  003DEC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 17200  003DEE  0E0A               	movlw	10
 17201  003DF0  6E09               	movwf	i2___awdiv@divisor^0,c
 17202  003DF2  0E00               	movlw	0
 17203  003DF4  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 17204  003DF6  0E64               	movlw	100
 17205  003DF8  6E03               	movwf	i2___awmod@divisor^0,c
 17206  003DFA  5030               	movf	i2scale@scl^0,w,c
 17207  003DFC  6E01               	movwf	i2___awmod@dividend^0,c
 17208  003DFE  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 17209  003E00  BE01               	btfsc	i2___awmod@dividend^0,7,c
 17210  003E02  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 17211  003E04  ECD4  F039         	call	i2___awmod	;wreg free
 17212  003E08  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 17213  003E0C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 17214  003E10  ECA9  F037         	call	i2___awdiv	;wreg free
 17215  003E14  0E09               	movlw	9
 17216  003E16  2607               	addwf	?i2___awdiv^0,f,c
 17217  003E18  5007               	movf	?i2___awdiv^0,w,c
 17218  003E1A  0D04               	mullw	4
 17219  003E1C  0E35               	movlw	low __npowers_
 17220  003E1E  24F3               	addwf	243,w,c
 17221  003E20  6EF6               	movwf	tblptrl,c
 17222  003E22  0E06               	movlw	high __npowers_
 17223  003E24  20F4               	addwfc	244,w,c
 17224  003E26  6EF7               	movwf	tblptrh,c
 17225  003E28                     	if	0	;There are less than 3 active tblptr bytes
 17226  003E28                     	endif
 17227  003E28  0009               	tblrd		*+
 17228  003E2A  CFF5 F013          	movff	tablat,i2___flmul@a
 17229  003E2E  0009               	tblrd		*+
 17230  003E30  CFF5 F014          	movff	tablat,i2___flmul@a+1
 17231  003E34  0009               	tblrd		*+
 17232  003E36  CFF5 F015          	movff	tablat,i2___flmul@a+2
 17233  003E3A  000A               	tblrd		*-
 17234  003E3C  CFF5 F016          	movff	tablat,i2___flmul@a+3
 17235  003E40  0E00               	movlw	0
 17236  003E42  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 17237  003E44  0E64               	movlw	100
 17238  003E46  6E09               	movwf	i2___awdiv@divisor^0,c
 17239  003E48  5030               	movf	i2scale@scl^0,w,c
 17240  003E4A  6E07               	movwf	i2___awdiv@dividend^0,c
 17241  003E4C  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 17242  003E4E  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 17243  003E50  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 17244  003E52  ECA9  F037         	call	i2___awdiv	;wreg free
 17245  003E56  0E12               	movlw	18
 17246  003E58  2607               	addwf	?i2___awdiv^0,f,c
 17247  003E5A  5007               	movf	?i2___awdiv^0,w,c
 17248  003E5C  0D04               	mullw	4
 17249  003E5E  0E35               	movlw	low __npowers_
 17250  003E60  24F3               	addwf	243,w,c
 17251  003E62  6EF6               	movwf	tblptrl,c
 17252  003E64  0E06               	movlw	high __npowers_
 17253  003E66  20F4               	addwfc	244,w,c
 17254  003E68  6EF7               	movwf	tblptrh,c
 17255  003E6A                     	if	0	;There are less than 3 active tblptr bytes
 17256  003E6A                     	endif
 17257  003E6A  0009               	tblrd		*+
 17258  003E6C  CFF5 F00F          	movff	tablat,i2___flmul@b
 17259  003E70  0009               	tblrd		*+
 17260  003E72  CFF5 F010          	movff	tablat,i2___flmul@b+1
 17261  003E76  0009               	tblrd		*+
 17262  003E78  CFF5 F011          	movff	tablat,i2___flmul@b+2
 17263  003E7C  000A               	tblrd		*-
 17264  003E7E  CFF5 F012          	movff	tablat,i2___flmul@b+3
 17265  003E82  ECB9  F01A         	call	i2___flmul	;wreg free
 17266  003E86  C00F  F02C         	movff	?i2___flmul,i2_scale$2227
 17267  003E8A  C010  F02D         	movff	?i2___flmul+1,i2_scale$2227+1
 17268  003E8E  C011  F02E         	movff	?i2___flmul+2,i2_scale$2227+2
 17269  003E92  C012  F02F         	movff	?i2___flmul+3,i2_scale$2227+3
 17270                           
 17271                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 17272  003E96  C02C  F00F         	movff	i2_scale$2227,i2___flmul@b
 17273  003E9A  C02D  F010         	movff	i2_scale$2227+1,i2___flmul@b+1
 17274  003E9E  C02E  F011         	movff	i2_scale$2227+2,i2___flmul@b+2
 17275  003EA2  C02F  F012         	movff	i2_scale$2227+3,i2___flmul@b+3
 17276  003EA6  0E00               	movlw	0
 17277  003EA8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 17278  003EAA  0E0A               	movlw	10
 17279  003EAC  6E03               	movwf	i2___awmod@divisor^0,c
 17280  003EAE  5030               	movf	i2scale@scl^0,w,c
 17281  003EB0  6E01               	movwf	i2___awmod@dividend^0,c
 17282  003EB2  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 17283  003EB4  BE01               	btfsc	i2___awmod@dividend^0,7,c
 17284  003EB6  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 17285  003EB8  ECD4  F039         	call	i2___awmod	;wreg free
 17286  003EBC  5001               	movf	?i2___awmod^0,w,c
 17287  003EBE  0D04               	mullw	4
 17288  003EC0  0E35               	movlw	low __npowers_
 17289  003EC2  24F3               	addwf	243,w,c
 17290  003EC4  6EF6               	movwf	tblptrl,c
 17291  003EC6  0E06               	movlw	high __npowers_
 17292  003EC8  20F4               	addwfc	244,w,c
 17293  003ECA  6EF7               	movwf	tblptrh,c
 17294  003ECC                     	if	0	;There are less than 3 active tblptr bytes
 17295  003ECC                     	endif
 17296  003ECC  0009               	tblrd		*+
 17297  003ECE  CFF5 F013          	movff	tablat,i2___flmul@a
 17298  003ED2  0009               	tblrd		*+
 17299  003ED4  CFF5 F014          	movff	tablat,i2___flmul@a+1
 17300  003ED8  0009               	tblrd		*+
 17301  003EDA  CFF5 F015          	movff	tablat,i2___flmul@a+2
 17302  003EDE  000A               	tblrd		*-
 17303  003EE0  CFF5 F016          	movff	tablat,i2___flmul@a+3
 17304  003EE4  ECB9  F01A         	call	i2___flmul	;wreg free
 17305  003EE8  C00F  F028         	movff	?i2___flmul,?i2_scale
 17306  003EEC  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 17307  003EF0  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 17308  003EF4  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 17309  003EF8  EFE7  F020         	goto	i2l519
 17310  003EFC                     i2l6548:
 17311                           
 17312                           ;doprnt.c: 440: else if(scl > 10)
 17313  003EFC  5030               	movf	i2scale@scl^0,w,c
 17314  003EFE  0A80               	xorlw	128
 17315  003F00  0F75               	addlw	-139
 17316  003F02  A0D8               	btfss	status,0,c
 17317  003F04  EF86  F01F         	goto	i2u816_41
 17318  003F08  EF88  F01F         	goto	i2u816_40
 17319  003F0C                     i2u816_41:
 17320  003F0C  EFD4  F01F         	goto	i2l6554
 17321  003F10                     i2u816_40:
 17322  003F10                     
 17323                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 17324  003F10  0E00               	movlw	0
 17325  003F12  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 17326  003F14  0E0A               	movlw	10
 17327  003F16  6E09               	movwf	i2___awdiv@divisor^0,c
 17328  003F18  5030               	movf	i2scale@scl^0,w,c
 17329  003F1A  6E07               	movwf	i2___awdiv@dividend^0,c
 17330  003F1C  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 17331  003F1E  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 17332  003F20  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 17333  003F22  ECA9  F037         	call	i2___awdiv	;wreg free
 17334  003F26  0E09               	movlw	9
 17335  003F28  2607               	addwf	?i2___awdiv^0,f,c
 17336  003F2A  5007               	movf	?i2___awdiv^0,w,c
 17337  003F2C  0D04               	mullw	4
 17338  003F2E  0E35               	movlw	low __npowers_
 17339  003F30  24F3               	addwf	243,w,c
 17340  003F32  6EF6               	movwf	tblptrl,c
 17341  003F34  0E06               	movlw	high __npowers_
 17342  003F36  20F4               	addwfc	244,w,c
 17343  003F38  6EF7               	movwf	tblptrh,c
 17344  003F3A                     	if	0	;There are less than 3 active tblptr bytes
 17345  003F3A                     	endif
 17346  003F3A  0009               	tblrd		*+
 17347  003F3C  CFF5 F00F          	movff	tablat,i2___flmul@b
 17348  003F40  0009               	tblrd		*+
 17349  003F42  CFF5 F010          	movff	tablat,i2___flmul@b+1
 17350  003F46  0009               	tblrd		*+
 17351  003F48  CFF5 F011          	movff	tablat,i2___flmul@b+2
 17352  003F4C  000A               	tblrd		*-
 17353  003F4E  CFF5 F012          	movff	tablat,i2___flmul@b+3
 17354  003F52  0E00               	movlw	0
 17355  003F54  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 17356  003F56  0E0A               	movlw	10
 17357  003F58  6E03               	movwf	i2___awmod@divisor^0,c
 17358  003F5A  5030               	movf	i2scale@scl^0,w,c
 17359  003F5C  6E01               	movwf	i2___awmod@dividend^0,c
 17360  003F5E  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 17361  003F60  BE01               	btfsc	i2___awmod@dividend^0,7,c
 17362  003F62  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 17363  003F64  ECD4  F039         	call	i2___awmod	;wreg free
 17364  003F68  5001               	movf	?i2___awmod^0,w,c
 17365  003F6A  0D04               	mullw	4
 17366  003F6C  0E35               	movlw	low __npowers_
 17367  003F6E  24F3               	addwf	243,w,c
 17368  003F70  6EF6               	movwf	tblptrl,c
 17369  003F72  0E06               	movlw	high __npowers_
 17370  003F74  20F4               	addwfc	244,w,c
 17371  003F76  6EF7               	movwf	tblptrh,c
 17372  003F78                     	if	0	;There are less than 3 active tblptr bytes
 17373  003F78                     	endif
 17374  003F78  0009               	tblrd		*+
 17375  003F7A  CFF5 F013          	movff	tablat,i2___flmul@a
 17376  003F7E  0009               	tblrd		*+
 17377  003F80  CFF5 F014          	movff	tablat,i2___flmul@a+1
 17378  003F84  0009               	tblrd		*+
 17379  003F86  CFF5 F015          	movff	tablat,i2___flmul@a+2
 17380  003F8A  000A               	tblrd		*-
 17381  003F8C  CFF5 F016          	movff	tablat,i2___flmul@a+3
 17382  003F90  ECB9  F01A         	call	i2___flmul	;wreg free
 17383  003F94  C00F  F028         	movff	?i2___flmul,?i2_scale
 17384  003F98  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 17385  003F9C  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 17386  003FA0  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 17387  003FA4  EFE7  F020         	goto	i2l519
 17388  003FA8                     i2l6554:
 17389                           
 17390                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 17391  003FA8  5030               	movf	i2scale@scl^0,w,c
 17392  003FAA  0D04               	mullw	4
 17393  003FAC  0E35               	movlw	low __npowers_
 17394  003FAE  24F3               	addwf	243,w,c
 17395  003FB0  6EF6               	movwf	tblptrl,c
 17396  003FB2  0E06               	movlw	high __npowers_
 17397  003FB4  20F4               	addwfc	244,w,c
 17398  003FB6  6EF7               	movwf	tblptrh,c
 17399  003FB8                     	if	0	;There are less than 3 active tblptr bytes
 17400  003FB8                     	endif
 17401  003FB8  0009               	tblrd		*+
 17402  003FBA  CFF5 F028          	movff	tablat,?i2_scale
 17403  003FBE  0009               	tblrd		*+
 17404  003FC0  CFF5 F029          	movff	tablat,?i2_scale+1
 17405  003FC4  0009               	tblrd		*+
 17406  003FC6  CFF5 F02A          	movff	tablat,?i2_scale+2
 17407  003FCA  000A               	tblrd		*-
 17408  003FCC  CFF5 F02B          	movff	tablat,?i2_scale+3
 17409  003FD0  EFE7  F020         	goto	i2l519
 17410  003FD4                     i2l6558:
 17411                           
 17412                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 17413  003FD4  5030               	movf	i2scale@scl^0,w,c
 17414  003FD6  0A80               	xorlw	128
 17415  003FD8  0F12               	addlw	-238
 17416  003FDA  A0D8               	btfss	status,0,c
 17417  003FDC  EFF2  F01F         	goto	i2u817_41
 17418  003FE0  EFF4  F01F         	goto	i2u817_40
 17419  003FE4                     i2u817_41:
 17420  003FE4  EF7D  F020         	goto	i2l6566
 17421  003FE8                     i2u817_40:
 17422  003FE8                     
 17423                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 17424  003FE8  0E00               	movlw	0
 17425  003FEA  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 17426  003FEC  0E0A               	movlw	10
 17427  003FEE  6E09               	movwf	i2___awdiv@divisor^0,c
 17428  003FF0  0E00               	movlw	0
 17429  003FF2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 17430  003FF4  0E64               	movlw	100
 17431  003FF6  6E03               	movwf	i2___awmod@divisor^0,c
 17432  003FF8  5030               	movf	i2scale@scl^0,w,c
 17433  003FFA  6E01               	movwf	i2___awmod@dividend^0,c
 17434  003FFC  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 17435  003FFE  BE01               	btfsc	i2___awmod@dividend^0,7,c
 17436  004000  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 17437  004002  ECD4  F039         	call	i2___awmod	;wreg free
 17438  004006  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 17439  00400A  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 17440  00400E  ECA9  F037         	call	i2___awdiv	;wreg free
 17441  004012  0E09               	movlw	9
 17442  004014  2607               	addwf	?i2___awdiv^0,f,c
 17443  004016  5007               	movf	?i2___awdiv^0,w,c
 17444  004018  0D04               	mullw	4
 17445  00401A  0E01               	movlw	low __powers_
 17446  00401C  24F3               	addwf	243,w,c
 17447  00401E  6EF6               	movwf	tblptrl,c
 17448  004020  0E06               	movlw	high __powers_
 17449  004022  20F4               	addwfc	244,w,c
 17450  004024  6EF7               	movwf	tblptrh,c
 17451  004026                     	if	0	;There are less than 3 active tblptr bytes
 17452  004026                     	endif
 17453  004026  0009               	tblrd		*+
 17454  004028  CFF5 F013          	movff	tablat,i2___flmul@a
 17455  00402C  0009               	tblrd		*+
 17456  00402E  CFF5 F014          	movff	tablat,i2___flmul@a+1
 17457  004032  0009               	tblrd		*+
 17458  004034  CFF5 F015          	movff	tablat,i2___flmul@a+2
 17459  004038  000A               	tblrd		*-
 17460  00403A  CFF5 F016          	movff	tablat,i2___flmul@a+3
 17461  00403E  0E00               	movlw	0
 17462  004040  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 17463  004042  0E64               	movlw	100
 17464  004044  6E09               	movwf	i2___awdiv@divisor^0,c
 17465  004046  5030               	movf	i2scale@scl^0,w,c
 17466  004048  6E07               	movwf	i2___awdiv@dividend^0,c
 17467  00404A  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 17468  00404C  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 17469  00404E  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 17470  004050  ECA9  F037         	call	i2___awdiv	;wreg free
 17471  004054  0E12               	movlw	18
 17472  004056  2607               	addwf	?i2___awdiv^0,f,c
 17473  004058  5007               	movf	?i2___awdiv^0,w,c
 17474  00405A  0D04               	mullw	4
 17475  00405C  0E01               	movlw	low __powers_
 17476  00405E  24F3               	addwf	243,w,c
 17477  004060  6EF6               	movwf	tblptrl,c
 17478  004062  0E06               	movlw	high __powers_
 17479  004064  20F4               	addwfc	244,w,c
 17480  004066  6EF7               	movwf	tblptrh,c
 17481  004068                     	if	0	;There are less than 3 active tblptr bytes
 17482  004068                     	endif
 17483  004068  0009               	tblrd		*+
 17484  00406A  CFF5 F00F          	movff	tablat,i2___flmul@b
 17485  00406E  0009               	tblrd		*+
 17486  004070  CFF5 F010          	movff	tablat,i2___flmul@b+1
 17487  004074  0009               	tblrd		*+
 17488  004076  CFF5 F011          	movff	tablat,i2___flmul@b+2
 17489  00407A  000A               	tblrd		*-
 17490  00407C  CFF5 F012          	movff	tablat,i2___flmul@b+3
 17491  004080  ECB9  F01A         	call	i2___flmul	;wreg free
 17492  004084  C00F  F02C         	movff	?i2___flmul,i2_scale$2227
 17493  004088  C010  F02D         	movff	?i2___flmul+1,i2_scale$2227+1
 17494  00408C  C011  F02E         	movff	?i2___flmul+2,i2_scale$2227+2
 17495  004090  C012  F02F         	movff	?i2___flmul+3,i2_scale$2227+3
 17496                           
 17497                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 17498  004094  C02C  F00F         	movff	i2_scale$2227,i2___flmul@b
 17499  004098  C02D  F010         	movff	i2_scale$2227+1,i2___flmul@b+1
 17500  00409C  C02E  F011         	movff	i2_scale$2227+2,i2___flmul@b+2
 17501  0040A0  C02F  F012         	movff	i2_scale$2227+3,i2___flmul@b+3
 17502  0040A4  0E00               	movlw	0
 17503  0040A6  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 17504  0040A8  0E0A               	movlw	10
 17505  0040AA  6E03               	movwf	i2___awmod@divisor^0,c
 17506  0040AC  5030               	movf	i2scale@scl^0,w,c
 17507  0040AE  6E01               	movwf	i2___awmod@dividend^0,c
 17508  0040B0  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 17509  0040B2  BE01               	btfsc	i2___awmod@dividend^0,7,c
 17510  0040B4  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 17511  0040B6  ECD4  F039         	call	i2___awmod	;wreg free
 17512  0040BA  5001               	movf	?i2___awmod^0,w,c
 17513  0040BC  0D04               	mullw	4
 17514  0040BE  0E01               	movlw	low __powers_
 17515  0040C0  24F3               	addwf	243,w,c
 17516  0040C2  6EF6               	movwf	tblptrl,c
 17517  0040C4  0E06               	movlw	high __powers_
 17518  0040C6  20F4               	addwfc	244,w,c
 17519  0040C8  6EF7               	movwf	tblptrh,c
 17520  0040CA                     	if	0	;There are less than 3 active tblptr bytes
 17521  0040CA                     	endif
 17522  0040CA  0009               	tblrd		*+
 17523  0040CC  CFF5 F013          	movff	tablat,i2___flmul@a
 17524  0040D0  0009               	tblrd		*+
 17525  0040D2  CFF5 F014          	movff	tablat,i2___flmul@a+1
 17526  0040D6  0009               	tblrd		*+
 17527  0040D8  CFF5 F015          	movff	tablat,i2___flmul@a+2
 17528  0040DC  000A               	tblrd		*-
 17529  0040DE  CFF5 F016          	movff	tablat,i2___flmul@a+3
 17530  0040E2  ECB9  F01A         	call	i2___flmul	;wreg free
 17531  0040E6  C00F  F028         	movff	?i2___flmul,?i2_scale
 17532  0040EA  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 17533  0040EE  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 17534  0040F2  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 17535  0040F6  EFE7  F020         	goto	i2l519
 17536  0040FA                     i2l6566:
 17537                           
 17538                           ;doprnt.c: 446: else if(scl > 10)
 17539  0040FA  5030               	movf	i2scale@scl^0,w,c
 17540  0040FC  0A80               	xorlw	128
 17541  0040FE  0F75               	addlw	-139
 17542  004100  A0D8               	btfss	status,0,c
 17543  004102  EF85  F020         	goto	i2u818_41
 17544  004106  EF87  F020         	goto	i2u818_40
 17545  00410A                     i2u818_41:
 17546  00410A  EFD3  F020         	goto	i2l6572
 17547  00410E                     i2u818_40:
 17548  00410E                     
 17549                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 17550  00410E  0E00               	movlw	0
 17551  004110  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
 17552  004112  0E0A               	movlw	10
 17553  004114  6E09               	movwf	i2___awdiv@divisor^0,c
 17554  004116  5030               	movf	i2scale@scl^0,w,c
 17555  004118  6E07               	movwf	i2___awdiv@dividend^0,c
 17556  00411A  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
 17557  00411C  BE07               	btfsc	i2___awdiv@dividend^0,7,c
 17558  00411E  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
 17559  004120  ECA9  F037         	call	i2___awdiv	;wreg free
 17560  004124  0E09               	movlw	9
 17561  004126  2607               	addwf	?i2___awdiv^0,f,c
 17562  004128  5007               	movf	?i2___awdiv^0,w,c
 17563  00412A  0D04               	mullw	4
 17564  00412C  0E01               	movlw	low __powers_
 17565  00412E  24F3               	addwf	243,w,c
 17566  004130  6EF6               	movwf	tblptrl,c
 17567  004132  0E06               	movlw	high __powers_
 17568  004134  20F4               	addwfc	244,w,c
 17569  004136  6EF7               	movwf	tblptrh,c
 17570  004138                     	if	0	;There are less than 3 active tblptr bytes
 17571  004138                     	endif
 17572  004138  0009               	tblrd		*+
 17573  00413A  CFF5 F00F          	movff	tablat,i2___flmul@b
 17574  00413E  0009               	tblrd		*+
 17575  004140  CFF5 F010          	movff	tablat,i2___flmul@b+1
 17576  004144  0009               	tblrd		*+
 17577  004146  CFF5 F011          	movff	tablat,i2___flmul@b+2
 17578  00414A  000A               	tblrd		*-
 17579  00414C  CFF5 F012          	movff	tablat,i2___flmul@b+3
 17580  004150  0E00               	movlw	0
 17581  004152  6E04               	movwf	(i2___awmod@divisor+1)^0,c
 17582  004154  0E0A               	movlw	10
 17583  004156  6E03               	movwf	i2___awmod@divisor^0,c
 17584  004158  5030               	movf	i2scale@scl^0,w,c
 17585  00415A  6E01               	movwf	i2___awmod@dividend^0,c
 17586  00415C  6A02               	clrf	(i2___awmod@dividend+1)^0,c
 17587  00415E  BE01               	btfsc	i2___awmod@dividend^0,7,c
 17588  004160  0602               	decf	(i2___awmod@dividend+1)^0,f,c
 17589  004162  ECD4  F039         	call	i2___awmod	;wreg free
 17590  004166  5001               	movf	?i2___awmod^0,w,c
 17591  004168  0D04               	mullw	4
 17592  00416A  0E01               	movlw	low __powers_
 17593  00416C  24F3               	addwf	243,w,c
 17594  00416E  6EF6               	movwf	tblptrl,c
 17595  004170  0E06               	movlw	high __powers_
 17596  004172  20F4               	addwfc	244,w,c
 17597  004174  6EF7               	movwf	tblptrh,c
 17598  004176                     	if	0	;There are less than 3 active tblptr bytes
 17599  004176                     	endif
 17600  004176  0009               	tblrd		*+
 17601  004178  CFF5 F013          	movff	tablat,i2___flmul@a
 17602  00417C  0009               	tblrd		*+
 17603  00417E  CFF5 F014          	movff	tablat,i2___flmul@a+1
 17604  004182  0009               	tblrd		*+
 17605  004184  CFF5 F015          	movff	tablat,i2___flmul@a+2
 17606  004188  000A               	tblrd		*-
 17607  00418A  CFF5 F016          	movff	tablat,i2___flmul@a+3
 17608  00418E  ECB9  F01A         	call	i2___flmul	;wreg free
 17609  004192  C00F  F028         	movff	?i2___flmul,?i2_scale
 17610  004196  C010  F029         	movff	?i2___flmul+1,?i2_scale+1
 17611  00419A  C011  F02A         	movff	?i2___flmul+2,?i2_scale+2
 17612  00419E  C012  F02B         	movff	?i2___flmul+3,?i2_scale+3
 17613  0041A2  EFE7  F020         	goto	i2l519
 17614  0041A6                     i2l6572:
 17615                           
 17616                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 17617  0041A6  5030               	movf	i2scale@scl^0,w,c
 17618  0041A8  0D04               	mullw	4
 17619  0041AA  0E01               	movlw	low __powers_
 17620  0041AC  24F3               	addwf	243,w,c
 17621  0041AE  6EF6               	movwf	tblptrl,c
 17622  0041B0  0E06               	movlw	high __powers_
 17623  0041B2  20F4               	addwfc	244,w,c
 17624  0041B4  6EF7               	movwf	tblptrh,c
 17625  0041B6                     	if	0	;There are less than 3 active tblptr bytes
 17626  0041B6                     	endif
 17627  0041B6  0009               	tblrd		*+
 17628  0041B8  CFF5 F028          	movff	tablat,?i2_scale
 17629  0041BC  0009               	tblrd		*+
 17630  0041BE  CFF5 F029          	movff	tablat,?i2_scale+1
 17631  0041C2  0009               	tblrd		*+
 17632  0041C4  CFF5 F02A          	movff	tablat,?i2_scale+2
 17633  0041C8  000A               	tblrd		*-
 17634  0041CA  CFF5 F02B          	movff	tablat,?i2_scale+3
 17635  0041CE                     i2l519:
 17636  0041CE  0012               	return		;funcret
 17637  0041D0                     __end_ofi2_scale:
 17638                           	callstack 0
 17639                           
 17640 ;; *************** function i2___awmod *****************
 17641 ;; Defined at:
 17642 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;  dividend        2    0[COMRAM] int 
 17645 ;;  divisor         2    2[COMRAM] int 
 17646 ;; Auto vars:     Size  Location     Type
 17647 ;;  sign            1    5[COMRAM] unsigned char 
 17648 ;;  counter         1    4[COMRAM] unsigned char 
 17649 ;; Return value:  Size  Location     Type
 17650 ;;                  2    0[COMRAM] int 
 17651 ;; Registers used:
 17652 ;;		wreg, status,2, status,0
 17653 ;; Tracked objects:
 17654 ;;		On entry : 0/0
 17655 ;;		On exit  : 0/0
 17656 ;;		Unchanged: 0/0
 17657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17658 ;;      Params:         4       0       0       0       0       0       0
 17659 ;;      Locals:         2       0       0       0       0       0       0
 17660 ;;      Temps:          0       0       0       0       0       0       0
 17661 ;;      Totals:         6       0       0       0       0       0       0
 17662 ;;Total ram usage:        6 bytes
 17663 ;; Hardware stack levels used:    1
 17664 ;; This function calls:
 17665 ;;		Nothing
 17666 ;; This function is called by:
 17667 ;;		i2_scale
 17668 ;; This function uses a non-reentrant model
 17669 ;;
 17670                           
 17671                           	psect	text52
 17672  0073A8                     __ptext52:
 17673                           	callstack 0
 17674  0073A8                     i2___awmod:
 17675                           	callstack 22
 17676  0073A8  0E00               	movlw	0
 17677  0073AA  6E06               	movwf	i2___awmod@sign^0,c
 17678  0073AC  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
 17679  0073AE  EFDD  F039         	goto	i2u645_40
 17680  0073B2  EFDB  F039         	goto	i2u645_41
 17681  0073B6                     i2u645_41:
 17682  0073B6  EFE3  F039         	goto	i2l5488
 17683  0073BA                     i2u645_40:
 17684  0073BA  6C01               	negf	i2___awmod@dividend^0,c
 17685  0073BC  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 17686  0073BE  B0D8               	btfsc	status,0,c
 17687  0073C0  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 17688  0073C2  0E01               	movlw	1
 17689  0073C4  6E06               	movwf	i2___awmod@sign^0,c
 17690  0073C6                     i2l5488:
 17691  0073C6  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
 17692  0073C8  EFEA  F039         	goto	i2u646_40
 17693  0073CC  EFE8  F039         	goto	i2u646_41
 17694  0073D0                     i2u646_41:
 17695  0073D0  EFEE  F039         	goto	i2l5492
 17696  0073D4                     i2u646_40:
 17697  0073D4  6C03               	negf	i2___awmod@divisor^0,c
 17698  0073D6  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
 17699  0073D8  B0D8               	btfsc	status,0,c
 17700  0073DA  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
 17701  0073DC                     i2l5492:
 17702  0073DC  5003               	movf	i2___awmod@divisor^0,w,c
 17703  0073DE  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
 17704  0073E0  B4D8               	btfsc	status,2,c
 17705  0073E2  EFF5  F039         	goto	i2u647_41
 17706  0073E6  EFF7  F039         	goto	i2u647_40
 17707  0073EA                     i2u647_41:
 17708  0073EA  EF1B  F03A         	goto	i2l5508
 17709  0073EE                     i2u647_40:
 17710  0073EE  0E01               	movlw	1
 17711  0073F0  6E05               	movwf	i2___awmod@counter^0,c
 17712  0073F2  EFFF  F039         	goto	i2l5498
 17713  0073F6                     i2l5496:
 17714  0073F6  90D8               	bcf	status,0,c
 17715  0073F8  3603               	rlcf	i2___awmod@divisor^0,f,c
 17716  0073FA  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
 17717  0073FC  2A05               	incf	i2___awmod@counter^0,f,c
 17718  0073FE                     i2l5498:
 17719  0073FE  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
 17720  007400  EF04  F03A         	goto	i2u648_41
 17721  007404  EF06  F03A         	goto	i2u648_40
 17722  007408                     i2u648_41:
 17723  007408  EFFB  F039         	goto	i2l5496
 17724  00740C                     i2u648_40:
 17725  00740C                     i2l5500:
 17726  00740C  5003               	movf	i2___awmod@divisor^0,w,c
 17727  00740E  5C01               	subwf	i2___awmod@dividend^0,w,c
 17728  007410  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 17729  007412  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
 17730  007414  A0D8               	btfss	status,0,c
 17731  007416  EF0F  F03A         	goto	i2u649_41
 17732  00741A  EF11  F03A         	goto	i2u649_40
 17733  00741E                     i2u649_41:
 17734  00741E  EF15  F03A         	goto	i2l5504
 17735  007422                     i2u649_40:
 17736  007422  5003               	movf	i2___awmod@divisor^0,w,c
 17737  007424  5E01               	subwf	i2___awmod@dividend^0,f,c
 17738  007426  5004               	movf	(i2___awmod@divisor+1)^0,w,c
 17739  007428  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
 17740  00742A                     i2l5504:
 17741  00742A  90D8               	bcf	status,0,c
 17742  00742C  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
 17743  00742E  3203               	rrcf	i2___awmod@divisor^0,f,c
 17744  007430  2E05               	decfsz	i2___awmod@counter^0,f,c
 17745  007432  EF06  F03A         	goto	i2l5500
 17746  007436                     i2l5508:
 17747  007436  5006               	movf	i2___awmod@sign^0,w,c
 17748  007438  B4D8               	btfsc	status,2,c
 17749  00743A  EF21  F03A         	goto	i2u650_41
 17750  00743E  EF23  F03A         	goto	i2u650_40
 17751  007442                     i2u650_41:
 17752  007442  EF27  F03A         	goto	i2l5512
 17753  007446                     i2u650_40:
 17754  007446  6C01               	negf	i2___awmod@dividend^0,c
 17755  007448  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
 17756  00744A  B0D8               	btfsc	status,0,c
 17757  00744C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
 17758  00744E                     i2l5512:
 17759  00744E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 17760  007452  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 17761  007456  0012               	return		;funcret
 17762  007458                     __end_ofi2___awmod:
 17763                           	callstack 0
 17764                           
 17765 ;; *************** function i2___awdiv *****************
 17766 ;; Defined at:
 17767 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;  dividend        2    6[COMRAM] int 
 17770 ;;  divisor         2    8[COMRAM] int 
 17771 ;; Auto vars:     Size  Location     Type
 17772 ;;  quotient        2   12[COMRAM] int 
 17773 ;;  sign            1   11[COMRAM] unsigned char 
 17774 ;;  counter         1   10[COMRAM] unsigned char 
 17775 ;; Return value:  Size  Location     Type
 17776 ;;                  2    6[COMRAM] int 
 17777 ;; Registers used:
 17778 ;;		wreg, status,2, status,0
 17779 ;; Tracked objects:
 17780 ;;		On entry : 0/0
 17781 ;;		On exit  : 0/0
 17782 ;;		Unchanged: 0/0
 17783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17784 ;;      Params:         4       0       0       0       0       0       0
 17785 ;;      Locals:         4       0       0       0       0       0       0
 17786 ;;      Temps:          0       0       0       0       0       0       0
 17787 ;;      Totals:         8       0       0       0       0       0       0
 17788 ;;Total ram usage:        8 bytes
 17789 ;; Hardware stack levels used:    1
 17790 ;; This function calls:
 17791 ;;		Nothing
 17792 ;; This function is called by:
 17793 ;;		i2_scale
 17794 ;;		i2_sprintf
 17795 ;; This function uses a non-reentrant model
 17796 ;;
 17797                           
 17798                           	psect	text53
 17799  006F52                     __ptext53:
 17800                           	callstack 0
 17801  006F52                     i2___awdiv:
 17802                           	callstack 22
 17803  006F52  0E00               	movlw	0
 17804  006F54  6E0C               	movwf	i2___awdiv@sign^0,c
 17805  006F56  BE0A               	btfsc	(i2___awdiv@divisor+1)^0,7,c
 17806  006F58  EFB2  F037         	goto	i2u639_40
 17807  006F5C  EFB0  F037         	goto	i2u639_41
 17808  006F60                     i2u639_41:
 17809  006F60  EFB8  F037         	goto	i2l5444
 17810  006F64                     i2u639_40:
 17811  006F64  6C09               	negf	i2___awdiv@divisor^0,c
 17812  006F66  1E0A               	comf	(i2___awdiv@divisor+1)^0,f,c
 17813  006F68  B0D8               	btfsc	status,0,c
 17814  006F6A  2A0A               	incf	(i2___awdiv@divisor+1)^0,f,c
 17815  006F6C  0E01               	movlw	1
 17816  006F6E  6E0C               	movwf	i2___awdiv@sign^0,c
 17817  006F70                     i2l5444:
 17818  006F70  BE08               	btfsc	(i2___awdiv@dividend+1)^0,7,c
 17819  006F72  EFBF  F037         	goto	i2u640_40
 17820  006F76  EFBD  F037         	goto	i2u640_41
 17821  006F7A                     i2u640_41:
 17822  006F7A  EFC5  F037         	goto	i2l5450
 17823  006F7E                     i2u640_40:
 17824  006F7E  6C07               	negf	i2___awdiv@dividend^0,c
 17825  006F80  1E08               	comf	(i2___awdiv@dividend+1)^0,f,c
 17826  006F82  B0D8               	btfsc	status,0,c
 17827  006F84  2A08               	incf	(i2___awdiv@dividend+1)^0,f,c
 17828  006F86  0E01               	movlw	1
 17829  006F88  1A0C               	xorwf	i2___awdiv@sign^0,f,c
 17830  006F8A                     i2l5450:
 17831  006F8A  0E00               	movlw	0
 17832  006F8C  6E0E               	movwf	(i2___awdiv@quotient+1)^0,c
 17833  006F8E  0E00               	movlw	0
 17834  006F90  6E0D               	movwf	i2___awdiv@quotient^0,c
 17835  006F92  5009               	movf	i2___awdiv@divisor^0,w,c
 17836  006F94  100A               	iorwf	(i2___awdiv@divisor+1)^0,w,c
 17837  006F96  B4D8               	btfsc	status,2,c
 17838  006F98  EFD0  F037         	goto	i2u641_41
 17839  006F9C  EFD2  F037         	goto	i2u641_40
 17840  006FA0                     i2u641_41:
 17841  006FA0  EFFA  F037         	goto	i2l5472
 17842  006FA4                     i2u641_40:
 17843  006FA4  0E01               	movlw	1
 17844  006FA6  6E0B               	movwf	i2___awdiv@counter^0,c
 17845  006FA8  EFDA  F037         	goto	i2l5458
 17846  006FAC                     i2l5456:
 17847  006FAC  90D8               	bcf	status,0,c
 17848  006FAE  3609               	rlcf	i2___awdiv@divisor^0,f,c
 17849  006FB0  360A               	rlcf	(i2___awdiv@divisor+1)^0,f,c
 17850  006FB2  2A0B               	incf	i2___awdiv@counter^0,f,c
 17851  006FB4                     i2l5458:
 17852  006FB4  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
 17853  006FB6  EFDF  F037         	goto	i2u642_41
 17854  006FBA  EFE1  F037         	goto	i2u642_40
 17855  006FBE                     i2u642_41:
 17856  006FBE  EFD6  F037         	goto	i2l5456
 17857  006FC2                     i2u642_40:
 17858  006FC2                     i2l5460:
 17859  006FC2  90D8               	bcf	status,0,c
 17860  006FC4  360D               	rlcf	i2___awdiv@quotient^0,f,c
 17861  006FC6  360E               	rlcf	(i2___awdiv@quotient+1)^0,f,c
 17862  006FC8  5009               	movf	i2___awdiv@divisor^0,w,c
 17863  006FCA  5C07               	subwf	i2___awdiv@dividend^0,w,c
 17864  006FCC  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 17865  006FCE  5808               	subwfb	(i2___awdiv@dividend+1)^0,w,c
 17866  006FD0  A0D8               	btfss	status,0,c
 17867  006FD2  EFED  F037         	goto	i2u643_41
 17868  006FD6  EFEF  F037         	goto	i2u643_40
 17869  006FDA                     i2u643_41:
 17870  006FDA  EFF4  F037         	goto	i2l5468
 17871  006FDE                     i2u643_40:
 17872  006FDE  5009               	movf	i2___awdiv@divisor^0,w,c
 17873  006FE0  5E07               	subwf	i2___awdiv@dividend^0,f,c
 17874  006FE2  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
 17875  006FE4  5A08               	subwfb	(i2___awdiv@dividend+1)^0,f,c
 17876  006FE6  800D               	bsf	i2___awdiv@quotient^0,0,c
 17877  006FE8                     i2l5468:
 17878  006FE8  90D8               	bcf	status,0,c
 17879  006FEA  320A               	rrcf	(i2___awdiv@divisor+1)^0,f,c
 17880  006FEC  3209               	rrcf	i2___awdiv@divisor^0,f,c
 17881  006FEE  2E0B               	decfsz	i2___awdiv@counter^0,f,c
 17882  006FF0  EFE1  F037         	goto	i2l5460
 17883  006FF4                     i2l5472:
 17884  006FF4  500C               	movf	i2___awdiv@sign^0,w,c
 17885  006FF6  B4D8               	btfsc	status,2,c
 17886  006FF8  EF00  F038         	goto	i2u644_41
 17887  006FFC  EF02  F038         	goto	i2u644_40
 17888  007000                     i2u644_41:
 17889  007000  EF06  F038         	goto	i2l5476
 17890  007004                     i2u644_40:
 17891  007004  6C0D               	negf	i2___awdiv@quotient^0,c
 17892  007006  1E0E               	comf	(i2___awdiv@quotient+1)^0,f,c
 17893  007008  B0D8               	btfsc	status,0,c
 17894  00700A  2A0E               	incf	(i2___awdiv@quotient+1)^0,f,c
 17895  00700C                     i2l5476:
 17896  00700C  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 17897  007010  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 17898  007014  0012               	return		;funcret
 17899  007016                     __end_ofi2___awdiv:
 17900                           	callstack 0
 17901                           
 17902 ;; *************** function i2_isdigit *****************
 17903 ;; Defined at:
 17904 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
 17905 ;; Parameters:    Size  Location     Type
 17906 ;;  c               1    wreg     unsigned char 
 17907 ;; Auto vars:     Size  Location     Type
 17908 ;;  c               1    2[COMRAM] unsigned char 
 17909 ;; Return value:  Size  Location     Type
 17910 ;;		None               void
 17911 ;; Registers used:
 17912 ;;		wreg, status,2, status,0
 17913 ;; Tracked objects:
 17914 ;;		On entry : 0/0
 17915 ;;		On exit  : 0/0
 17916 ;;		Unchanged: 0/0
 17917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17918 ;;      Params:         0       0       0       0       0       0       0
 17919 ;;      Locals:         2       0       0       0       0       0       0
 17920 ;;      Temps:          1       0       0       0       0       0       0
 17921 ;;      Totals:         3       0       0       0       0       0       0
 17922 ;;Total ram usage:        3 bytes
 17923 ;; Hardware stack levels used:    1
 17924 ;; This function calls:
 17925 ;;		Nothing
 17926 ;; This function is called by:
 17927 ;;		i2_sprintf
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931                           	psect	text54
 17932  000048                     __ptext54:
 17933                           	callstack 0
 17934  000048                     i2_isdigit:
 17935                           	callstack 23
 17936                           
 17937                           ;incstack = 0
 17938                           ;i2isdigit@c stored from wreg
 17939  000048  6E03               	movwf	i2isdigit@c^0,c
 17940  00004A  0E00               	movlw	0
 17941  00004C  6E02               	movwf	i2_isdigit$1745^0,c
 17942  00004E  0E3A               	movlw	58
 17943  000050  6003               	cpfslt	i2isdigit@c^0,c
 17944  000052  EF2D  F000         	goto	i2u890_41
 17945  000056  EF2F  F000         	goto	i2u890_40
 17946  00005A                     i2u890_41:
 17947  00005A  EF39  F000         	goto	i2l7024
 17948  00005E                     i2u890_40:
 17949  00005E  0E2F               	movlw	47
 17950  000060  6403               	cpfsgt	i2isdigit@c^0,c
 17951  000062  EF35  F000         	goto	i2u891_41
 17952  000066  EF37  F000         	goto	i2u891_40
 17953  00006A                     i2u891_41:
 17954  00006A  EF39  F000         	goto	i2l7024
 17955  00006E                     i2u891_40:
 17956  00006E  0E01               	movlw	1
 17957  000070  6E02               	movwf	i2_isdigit$1745^0,c
 17958  000072                     i2l7024:
 17959  000072  C002  F001         	movff	i2_isdigit$1745,??i2_isdigit
 17960  000076  3001               	rrcf	??i2_isdigit^0,w,c
 17961  000078  0012               	return		;funcret
 17962  00007A                     __end_ofi2_isdigit:
 17963                           	callstack 0
 17964                           
 17965 ;; *************** function i2_fround *****************
 17966 ;; Defined at:
 17967 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
 17968 ;; Parameters:    Size  Location     Type
 17969 ;;  prec            1    wreg     unsigned char 
 17970 ;; Auto vars:     Size  Location     Type
 17971 ;;  prec            1   51[COMRAM] unsigned char 
 17972 ;; Return value:  Size  Location     Type
 17973 ;;                  4   39[COMRAM] unsigned char 
 17974 ;; Registers used:
 17975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17976 ;; Tracked objects:
 17977 ;;		On entry : 0/0
 17978 ;;		On exit  : 0/0
 17979 ;;		Unchanged: 0/0
 17980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17981 ;;      Params:         4       0       0       0       0       0       0
 17982 ;;      Locals:         9       0       0       0       0       0       0
 17983 ;;      Temps:          0       0       0       0       0       0       0
 17984 ;;      Totals:        13       0       0       0       0       0       0
 17985 ;;Total ram usage:       13 bytes
 17986 ;; Hardware stack levels used:    1
 17987 ;; Hardware stack levels required when called:    1
 17988 ;; This function calls:
 17989 ;;		i2___flmul
 17990 ;;		i2___lwdiv
 17991 ;;		i2___lwmod
 17992 ;; This function is called by:
 17993 ;;		i2_sprintf
 17994 ;; This function uses a non-reentrant model
 17995 ;;
 17996                           
 17997                           	psect	text55
 17998  0052E8                     __ptext55:
 17999                           	callstack 0
 18000  0052E8                     i2_fround:
 18001                           	callstack 22
 18002                           
 18003                           ;incstack = 0
 18004                           ;i2fround@prec stored from wreg
 18005  0052E8  6E34               	movwf	i2fround@prec^0,c
 18006  0052EA                     
 18007                           ;doprnt.c: 421: if(prec>=110)
 18008  0052EA  0E6D               	movlw	109
 18009  0052EC  6434               	cpfsgt	i2fround@prec^0,c
 18010  0052EE  EF7B  F029         	goto	i2u812_41
 18011  0052F2  EF7D  F029         	goto	i2u812_40
 18012  0052F6                     i2u812_41:
 18013  0052F6  EF2A  F02A         	goto	i2l6528
 18014  0052FA                     i2u812_40:
 18015  0052FA                     
 18016                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 18017  0052FA  0E00               	movlw	0
 18018  0052FC  6E13               	movwf	i2___flmul@a^0,c
 18019  0052FE  0E00               	movlw	0
 18020  005300  6E14               	movwf	(i2___flmul@a+1)^0,c
 18021  005302  0E00               	movlw	0
 18022  005304  6E15               	movwf	(i2___flmul@a+2)^0,c
 18023  005306  0E3F               	movlw	63
 18024  005308  6E16               	movwf	(i2___flmul@a+3)^0,c
 18025  00530A  0E00               	movlw	0
 18026  00530C  6E09               	movwf	(i2___lwdiv@divisor+1)^0,c
 18027  00530E  0E64               	movlw	100
 18028  005310  6E08               	movwf	i2___lwdiv@divisor^0,c
 18029  005312  C034  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 18030  005316  6A07               	clrf	(i2___lwdiv@dividend+1)^0,c
 18031  005318  EC8A  F03E         	call	i2___lwdiv	;wreg free
 18032  00531C  90D8               	bcf	status,0,c
 18033  00531E  3606               	rlcf	?i2___lwdiv^0,f,c
 18034  005320  3607               	rlcf	(?i2___lwdiv+1)^0,f,c
 18035  005322  90D8               	bcf	status,0,c
 18036  005324  3606               	rlcf	?i2___lwdiv^0,f,c
 18037  005326  3607               	rlcf	(?i2___lwdiv+1)^0,f,c
 18038  005328  0E48               	movlw	72
 18039  00532A  2606               	addwf	?i2___lwdiv^0,f,c
 18040  00532C  0E00               	movlw	0
 18041  00532E  2207               	addwfc	(?i2___lwdiv+1)^0,f,c
 18042  005330  0E35               	movlw	low __npowers_
 18043  005332  2406               	addwf	?i2___lwdiv^0,w,c
 18044  005334  6EF6               	movwf	tblptrl,c
 18045  005336  0E06               	movlw	high __npowers_
 18046  005338  2007               	addwfc	(?i2___lwdiv+1)^0,w,c
 18047  00533A  6EF7               	movwf	tblptrh,c
 18048  00533C                     	if	0	;There are less than 3 active tblptr bytes
 18049  00533C                     	endif
 18050  00533C  0009               	tblrd		*+
 18051  00533E  CFF5 F00F          	movff	tablat,i2___flmul@b
 18052  005342  0009               	tblrd		*+
 18053  005344  CFF5 F010          	movff	tablat,i2___flmul@b+1
 18054  005348  0009               	tblrd		*+
 18055  00534A  CFF5 F011          	movff	tablat,i2___flmul@b+2
 18056  00534E  000A               	tblrd		*-
 18057  005350  CFF5 F012          	movff	tablat,i2___flmul@b+3
 18058  005354  ECB9  F01A         	call	i2___flmul	;wreg free
 18059  005358  C00F  F030         	movff	?i2___flmul,i2_fround$2225
 18060  00535C  C010  F031         	movff	?i2___flmul+1,i2_fround$2225+1
 18061  005360  C011  F032         	movff	?i2___flmul+2,i2_fround$2225+2
 18062  005364  C012  F033         	movff	?i2___flmul+3,i2_fround$2225+3
 18063                           
 18064                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 18065  005368  0E00               	movlw	0
 18066  00536A  6E09               	movwf	(i2___lwdiv@divisor+1)^0,c
 18067  00536C  0E0A               	movlw	10
 18068  00536E  6E08               	movwf	i2___lwdiv@divisor^0,c
 18069  005370  0E00               	movlw	0
 18070  005372  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 18071  005374  0E64               	movlw	100
 18072  005376  6E03               	movwf	i2___lwmod@divisor^0,c
 18073  005378  C034  F001         	movff	i2fround@prec,i2___lwmod@dividend
 18074  00537C  6A02               	clrf	(i2___lwmod@dividend+1)^0,c
 18075  00537E  ECF7  F03E         	call	i2___lwmod	;wreg free
 18076  005382  C001  F006         	movff	?i2___lwmod,i2___lwdiv@dividend
 18077  005386  C002  F007         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
 18078  00538A  EC8A  F03E         	call	i2___lwdiv	;wreg free
 18079  00538E  90D8               	bcf	status,0,c
 18080  005390  3606               	rlcf	?i2___lwdiv^0,f,c
 18081  005392  3607               	rlcf	(?i2___lwdiv+1)^0,f,c
 18082  005394  90D8               	bcf	status,0,c
 18083  005396  3606               	rlcf	?i2___lwdiv^0,f,c
 18084  005398  3607               	rlcf	(?i2___lwdiv+1)^0,f,c
 18085  00539A  0E24               	movlw	36
 18086  00539C  2606               	addwf	?i2___lwdiv^0,f,c
 18087  00539E  0E00               	movlw	0
 18088  0053A0  2207               	addwfc	(?i2___lwdiv+1)^0,f,c
 18089  0053A2  0E35               	movlw	low __npowers_
 18090  0053A4  2406               	addwf	?i2___lwdiv^0,w,c
 18091  0053A6  6EF6               	movwf	tblptrl,c
 18092  0053A8  0E06               	movlw	high __npowers_
 18093  0053AA  2007               	addwfc	(?i2___lwdiv+1)^0,w,c
 18094  0053AC  6EF7               	movwf	tblptrh,c
 18095  0053AE                     	if	0	;There are less than 3 active tblptr bytes
 18096  0053AE                     	endif
 18097  0053AE  0009               	tblrd		*+
 18098  0053B0  CFF5 F013          	movff	tablat,i2___flmul@a
 18099  0053B4  0009               	tblrd		*+
 18100  0053B6  CFF5 F014          	movff	tablat,i2___flmul@a+1
 18101  0053BA  0009               	tblrd		*+
 18102  0053BC  CFF5 F015          	movff	tablat,i2___flmul@a+2
 18103  0053C0  000A               	tblrd		*-
 18104  0053C2  CFF5 F016          	movff	tablat,i2___flmul@a+3
 18105  0053C6  C030  F00F         	movff	i2_fround$2225,i2___flmul@b
 18106  0053CA  C031  F010         	movff	i2_fround$2225+1,i2___flmul@b+1
 18107  0053CE  C032  F011         	movff	i2_fround$2225+2,i2___flmul@b+2
 18108  0053D2  C033  F012         	movff	i2_fround$2225+3,i2___flmul@b+3
 18109  0053D6  ECB9  F01A         	call	i2___flmul	;wreg free
 18110  0053DA  C00F  F02C         	movff	?i2___flmul,i2_fround$2226
 18111  0053DE  C010  F02D         	movff	?i2___flmul+1,i2_fround$2226+1
 18112  0053E2  C011  F02E         	movff	?i2___flmul+2,i2_fround$2226+2
 18113  0053E6  C012  F02F         	movff	?i2___flmul+3,i2_fround$2226+3
 18114                           
 18115                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 18116  0053EA  C02C  F00F         	movff	i2_fround$2226,i2___flmul@b
 18117  0053EE  C02D  F010         	movff	i2_fround$2226+1,i2___flmul@b+1
 18118  0053F2  C02E  F011         	movff	i2_fround$2226+2,i2___flmul@b+2
 18119  0053F6  C02F  F012         	movff	i2_fround$2226+3,i2___flmul@b+3
 18120  0053FA  0E00               	movlw	0
 18121  0053FC  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 18122  0053FE  0E0A               	movlw	10
 18123  005400  6E03               	movwf	i2___lwmod@divisor^0,c
 18124  005402  C034  F001         	movff	i2fround@prec,i2___lwmod@dividend
 18125  005406  6A02               	clrf	(i2___lwmod@dividend+1)^0,c
 18126  005408  ECF7  F03E         	call	i2___lwmod	;wreg free
 18127  00540C  90D8               	bcf	status,0,c
 18128  00540E  3601               	rlcf	?i2___lwmod^0,f,c
 18129  005410  3602               	rlcf	(?i2___lwmod+1)^0,f,c
 18130  005412  90D8               	bcf	status,0,c
 18131  005414  3601               	rlcf	?i2___lwmod^0,f,c
 18132  005416  3602               	rlcf	(?i2___lwmod+1)^0,f,c
 18133  005418  0E35               	movlw	low __npowers_
 18134  00541A  2401               	addwf	?i2___lwmod^0,w,c
 18135  00541C  6EF6               	movwf	tblptrl,c
 18136  00541E  0E06               	movlw	high __npowers_
 18137  005420  2002               	addwfc	(?i2___lwmod+1)^0,w,c
 18138  005422  6EF7               	movwf	tblptrh,c
 18139  005424                     	if	0	;There are less than 3 active tblptr bytes
 18140  005424                     	endif
 18141  005424  0009               	tblrd		*+
 18142  005426  CFF5 F013          	movff	tablat,i2___flmul@a
 18143  00542A  0009               	tblrd		*+
 18144  00542C  CFF5 F014          	movff	tablat,i2___flmul@a+1
 18145  005430  0009               	tblrd		*+
 18146  005432  CFF5 F015          	movff	tablat,i2___flmul@a+2
 18147  005436  000A               	tblrd		*-
 18148  005438  CFF5 F016          	movff	tablat,i2___flmul@a+3
 18149  00543C  ECB9  F01A         	call	i2___flmul	;wreg free
 18150  005440  C00F  F028         	movff	?i2___flmul,?i2_fround
 18151  005444  C010  F029         	movff	?i2___flmul+1,?i2_fround+1
 18152  005448  C011  F02A         	movff	?i2___flmul+2,?i2_fround+2
 18153  00544C  C012  F02B         	movff	?i2___flmul+3,?i2_fround+3
 18154  005450  EFC4  F02A         	goto	i2l512
 18155  005454                     i2l6528:
 18156                           
 18157                           ;doprnt.c: 423: else if(prec > 10)
 18158  005454  0E0A               	movlw	10
 18159  005456  6434               	cpfsgt	i2fround@prec^0,c
 18160  005458  EF30  F02A         	goto	i2u813_41
 18161  00545C  EF32  F02A         	goto	i2u813_40
 18162  005460                     i2u813_41:
 18163  005460  EF9E  F02A         	goto	i2l6534
 18164  005464                     i2u813_40:
 18165  005464                     
 18166                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 18167  005464  0E00               	movlw	0
 18168  005466  6E13               	movwf	i2___flmul@a^0,c
 18169  005468  0E00               	movlw	0
 18170  00546A  6E14               	movwf	(i2___flmul@a+1)^0,c
 18171  00546C  0E00               	movlw	0
 18172  00546E  6E15               	movwf	(i2___flmul@a+2)^0,c
 18173  005470  0E3F               	movlw	63
 18174  005472  6E16               	movwf	(i2___flmul@a+3)^0,c
 18175  005474  0E00               	movlw	0
 18176  005476  6E09               	movwf	(i2___lwdiv@divisor+1)^0,c
 18177  005478  0E0A               	movlw	10
 18178  00547A  6E08               	movwf	i2___lwdiv@divisor^0,c
 18179  00547C  C034  F006         	movff	i2fround@prec,i2___lwdiv@dividend
 18180  005480  6A07               	clrf	(i2___lwdiv@dividend+1)^0,c
 18181  005482  EC8A  F03E         	call	i2___lwdiv	;wreg free
 18182  005486  90D8               	bcf	status,0,c
 18183  005488  3606               	rlcf	?i2___lwdiv^0,f,c
 18184  00548A  3607               	rlcf	(?i2___lwdiv+1)^0,f,c
 18185  00548C  90D8               	bcf	status,0,c
 18186  00548E  3606               	rlcf	?i2___lwdiv^0,f,c
 18187  005490  3607               	rlcf	(?i2___lwdiv+1)^0,f,c
 18188  005492  0E24               	movlw	36
 18189  005494  2606               	addwf	?i2___lwdiv^0,f,c
 18190  005496  0E00               	movlw	0
 18191  005498  2207               	addwfc	(?i2___lwdiv+1)^0,f,c
 18192  00549A  0E35               	movlw	low __npowers_
 18193  00549C  2406               	addwf	?i2___lwdiv^0,w,c
 18194  00549E  6EF6               	movwf	tblptrl,c
 18195  0054A0  0E06               	movlw	high __npowers_
 18196  0054A2  2007               	addwfc	(?i2___lwdiv+1)^0,w,c
 18197  0054A4  6EF7               	movwf	tblptrh,c
 18198  0054A6                     	if	0	;There are less than 3 active tblptr bytes
 18199  0054A6                     	endif
 18200  0054A6  0009               	tblrd		*+
 18201  0054A8  CFF5 F00F          	movff	tablat,i2___flmul@b
 18202  0054AC  0009               	tblrd		*+
 18203  0054AE  CFF5 F010          	movff	tablat,i2___flmul@b+1
 18204  0054B2  0009               	tblrd		*+
 18205  0054B4  CFF5 F011          	movff	tablat,i2___flmul@b+2
 18206  0054B8  000A               	tblrd		*-
 18207  0054BA  CFF5 F012          	movff	tablat,i2___flmul@b+3
 18208  0054BE  ECB9  F01A         	call	i2___flmul	;wreg free
 18209  0054C2  C00F  F030         	movff	?i2___flmul,i2_fround$2225
 18210  0054C6  C010  F031         	movff	?i2___flmul+1,i2_fround$2225+1
 18211  0054CA  C011  F032         	movff	?i2___flmul+2,i2_fround$2225+2
 18212  0054CE  C012  F033         	movff	?i2___flmul+3,i2_fround$2225+3
 18213                           
 18214                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 18215  0054D2  C030  F00F         	movff	i2_fround$2225,i2___flmul@b
 18216  0054D6  C031  F010         	movff	i2_fround$2225+1,i2___flmul@b+1
 18217  0054DA  C032  F011         	movff	i2_fround$2225+2,i2___flmul@b+2
 18218  0054DE  C033  F012         	movff	i2_fround$2225+3,i2___flmul@b+3
 18219  0054E2  0E00               	movlw	0
 18220  0054E4  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 18221  0054E6  0E0A               	movlw	10
 18222  0054E8  6E03               	movwf	i2___lwmod@divisor^0,c
 18223  0054EA  C034  F001         	movff	i2fround@prec,i2___lwmod@dividend
 18224  0054EE  6A02               	clrf	(i2___lwmod@dividend+1)^0,c
 18225  0054F0  ECF7  F03E         	call	i2___lwmod	;wreg free
 18226  0054F4  90D8               	bcf	status,0,c
 18227  0054F6  3601               	rlcf	?i2___lwmod^0,f,c
 18228  0054F8  3602               	rlcf	(?i2___lwmod+1)^0,f,c
 18229  0054FA  90D8               	bcf	status,0,c
 18230  0054FC  3601               	rlcf	?i2___lwmod^0,f,c
 18231  0054FE  3602               	rlcf	(?i2___lwmod+1)^0,f,c
 18232  005500  0E35               	movlw	low __npowers_
 18233  005502  2401               	addwf	?i2___lwmod^0,w,c
 18234  005504  6EF6               	movwf	tblptrl,c
 18235  005506  0E06               	movlw	high __npowers_
 18236  005508  2002               	addwfc	(?i2___lwmod+1)^0,w,c
 18237  00550A  6EF7               	movwf	tblptrh,c
 18238  00550C                     	if	0	;There are less than 3 active tblptr bytes
 18239  00550C                     	endif
 18240  00550C  0009               	tblrd		*+
 18241  00550E  CFF5 F013          	movff	tablat,i2___flmul@a
 18242  005512  0009               	tblrd		*+
 18243  005514  CFF5 F014          	movff	tablat,i2___flmul@a+1
 18244  005518  0009               	tblrd		*+
 18245  00551A  CFF5 F015          	movff	tablat,i2___flmul@a+2
 18246  00551E  000A               	tblrd		*-
 18247  005520  CFF5 F016          	movff	tablat,i2___flmul@a+3
 18248  005524  ECB9  F01A         	call	i2___flmul	;wreg free
 18249  005528  C00F  F028         	movff	?i2___flmul,?i2_fround
 18250  00552C  C010  F029         	movff	?i2___flmul+1,?i2_fround+1
 18251  005530  C011  F02A         	movff	?i2___flmul+2,?i2_fround+2
 18252  005534  C012  F02B         	movff	?i2___flmul+3,?i2_fround+3
 18253  005538  EFC4  F02A         	goto	i2l512
 18254  00553C                     i2l6534:
 18255                           
 18256                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 18257  00553C  5034               	movf	i2fround@prec^0,w,c
 18258  00553E  0D04               	mullw	4
 18259  005540  0E35               	movlw	low __npowers_
 18260  005542  24F3               	addwf	243,w,c
 18261  005544  6EF6               	movwf	tblptrl,c
 18262  005546  0E06               	movlw	high __npowers_
 18263  005548  20F4               	addwfc	244,w,c
 18264  00554A  6EF7               	movwf	tblptrh,c
 18265  00554C                     	if	0	;There are less than 3 active tblptr bytes
 18266  00554C                     	endif
 18267  00554C  0009               	tblrd		*+
 18268  00554E  CFF5 F00F          	movff	tablat,i2___flmul@b
 18269  005552  0009               	tblrd		*+
 18270  005554  CFF5 F010          	movff	tablat,i2___flmul@b+1
 18271  005558  0009               	tblrd		*+
 18272  00555A  CFF5 F011          	movff	tablat,i2___flmul@b+2
 18273  00555E  000A               	tblrd		*-
 18274  005560  CFF5 F012          	movff	tablat,i2___flmul@b+3
 18275  005564  0E00               	movlw	0
 18276  005566  6E13               	movwf	i2___flmul@a^0,c
 18277  005568  0E00               	movlw	0
 18278  00556A  6E14               	movwf	(i2___flmul@a+1)^0,c
 18279  00556C  0E00               	movlw	0
 18280  00556E  6E15               	movwf	(i2___flmul@a+2)^0,c
 18281  005570  0E3F               	movlw	63
 18282  005572  6E16               	movwf	(i2___flmul@a+3)^0,c
 18283  005574  ECB9  F01A         	call	i2___flmul	;wreg free
 18284  005578  C00F  F028         	movff	?i2___flmul,?i2_fround
 18285  00557C  C010  F029         	movff	?i2___flmul+1,?i2_fround+1
 18286  005580  C011  F02A         	movff	?i2___flmul+2,?i2_fround+2
 18287  005584  C012  F02B         	movff	?i2___flmul+3,?i2_fround+3
 18288  005588                     i2l512:
 18289  005588  0012               	return		;funcret
 18290  00558A                     __end_ofi2_fround:
 18291                           	callstack 0
 18292                           
 18293 ;; *************** function i2___lwmod *****************
 18294 ;; Defined at:
 18295 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
 18296 ;; Parameters:    Size  Location     Type
 18297 ;;  dividend        2    0[COMRAM] unsigned int 
 18298 ;;  divisor         2    2[COMRAM] unsigned int 
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;  counter         1    4[COMRAM] unsigned char 
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  2    0[COMRAM] unsigned int 
 18303 ;; Registers used:
 18304 ;;		wreg, status,2, status,0
 18305 ;; Tracked objects:
 18306 ;;		On entry : 0/0
 18307 ;;		On exit  : 0/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18310 ;;      Params:         4       0       0       0       0       0       0
 18311 ;;      Locals:         1       0       0       0       0       0       0
 18312 ;;      Temps:          0       0       0       0       0       0       0
 18313 ;;      Totals:         5       0       0       0       0       0       0
 18314 ;;Total ram usage:        5 bytes
 18315 ;; Hardware stack levels used:    1
 18316 ;; This function calls:
 18317 ;;		Nothing
 18318 ;; This function is called by:
 18319 ;;		i2_fround
 18320 ;; This function uses a non-reentrant model
 18321 ;;
 18322                           
 18323                           	psect	text56
 18324  007DEE                     __ptext56:
 18325                           	callstack 0
 18326  007DEE                     i2___lwmod:
 18327                           	callstack 22
 18328  007DEE  5003               	movf	i2___lwmod@divisor^0,w,c
 18329  007DF0  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
 18330  007DF2  B4D8               	btfsc	status,2,c
 18331  007DF4  EFFE  F03E         	goto	i2u654_41
 18332  007DF8  EF00  F03F         	goto	i2u654_40
 18333  007DFC                     i2u654_41:
 18334  007DFC  EF24  F03F         	goto	i2l1155
 18335  007E00                     i2u654_40:
 18336  007E00  0E01               	movlw	1
 18337  007E02  6E05               	movwf	i2___lwmod@counter^0,c
 18338  007E04  EF08  F03F         	goto	i2l5544
 18339  007E08                     i2l5542:
 18340  007E08  90D8               	bcf	status,0,c
 18341  007E0A  3603               	rlcf	i2___lwmod@divisor^0,f,c
 18342  007E0C  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
 18343  007E0E  2A05               	incf	i2___lwmod@counter^0,f,c
 18344  007E10                     i2l5544:
 18345  007E10  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
 18346  007E12  EF0D  F03F         	goto	i2u655_41
 18347  007E16  EF0F  F03F         	goto	i2u655_40
 18348  007E1A                     i2u655_41:
 18349  007E1A  EF04  F03F         	goto	i2l5542
 18350  007E1E                     i2u655_40:
 18351  007E1E                     i2l5546:
 18352  007E1E  5003               	movf	i2___lwmod@divisor^0,w,c
 18353  007E20  5C01               	subwf	i2___lwmod@dividend^0,w,c
 18354  007E22  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 18355  007E24  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
 18356  007E26  A0D8               	btfss	status,0,c
 18357  007E28  EF18  F03F         	goto	i2u656_41
 18358  007E2C  EF1A  F03F         	goto	i2u656_40
 18359  007E30                     i2u656_41:
 18360  007E30  EF1E  F03F         	goto	i2l5550
 18361  007E34                     i2u656_40:
 18362  007E34  5003               	movf	i2___lwmod@divisor^0,w,c
 18363  007E36  5E01               	subwf	i2___lwmod@dividend^0,f,c
 18364  007E38  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 18365  007E3A  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
 18366  007E3C                     i2l5550:
 18367  007E3C  90D8               	bcf	status,0,c
 18368  007E3E  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
 18369  007E40  3203               	rrcf	i2___lwmod@divisor^0,f,c
 18370  007E42  2E05               	decfsz	i2___lwmod@counter^0,f,c
 18371  007E44  EF0F  F03F         	goto	i2l5546
 18372  007E48                     i2l1155:
 18373  007E48  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 18374  007E4C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 18375  007E50  0012               	return		;funcret
 18376  007E52                     __end_ofi2___lwmod:
 18377                           	callstack 0
 18378                           
 18379 ;; *************** function i2___lwdiv *****************
 18380 ;; Defined at:
 18381 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
 18382 ;; Parameters:    Size  Location     Type
 18383 ;;  dividend        2    5[COMRAM] unsigned int 
 18384 ;;  divisor         2    7[COMRAM] unsigned int 
 18385 ;; Auto vars:     Size  Location     Type
 18386 ;;  quotient        2    9[COMRAM] unsigned int 
 18387 ;;  counter         1   11[COMRAM] unsigned char 
 18388 ;; Return value:  Size  Location     Type
 18389 ;;                  2    5[COMRAM] unsigned int 
 18390 ;; Registers used:
 18391 ;;		wreg, status,2, status,0
 18392 ;; Tracked objects:
 18393 ;;		On entry : 0/0
 18394 ;;		On exit  : 0/0
 18395 ;;		Unchanged: 0/0
 18396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18397 ;;      Params:         4       0       0       0       0       0       0
 18398 ;;      Locals:         3       0       0       0       0       0       0
 18399 ;;      Temps:          0       0       0       0       0       0       0
 18400 ;;      Totals:         7       0       0       0       0       0       0
 18401 ;;Total ram usage:        7 bytes
 18402 ;; Hardware stack levels used:    1
 18403 ;; This function calls:
 18404 ;;		Nothing
 18405 ;; This function is called by:
 18406 ;;		i2_fround
 18407 ;; This function uses a non-reentrant model
 18408 ;;
 18409                           
 18410                           	psect	text57
 18411  007D14                     __ptext57:
 18412                           	callstack 0
 18413  007D14                     i2___lwdiv:
 18414                           	callstack 22
 18415  007D14  0E00               	movlw	0
 18416  007D16  6E0B               	movwf	(i2___lwdiv@quotient+1)^0,c
 18417  007D18  0E00               	movlw	0
 18418  007D1A  6E0A               	movwf	i2___lwdiv@quotient^0,c
 18419  007D1C  5008               	movf	i2___lwdiv@divisor^0,w,c
 18420  007D1E  1009               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 18421  007D20  B4D8               	btfsc	status,2,c
 18422  007D22  EF95  F03E         	goto	i2u651_41
 18423  007D26  EF97  F03E         	goto	i2u651_40
 18424  007D2A                     i2u651_41:
 18425  007D2A  EFBF  F03E         	goto	i2l1145
 18426  007D2E                     i2u651_40:
 18427  007D2E  0E01               	movlw	1
 18428  007D30  6E0C               	movwf	i2___lwdiv@counter^0,c
 18429  007D32  EF9F  F03E         	goto	i2l5524
 18430  007D36                     i2l5522:
 18431  007D36  90D8               	bcf	status,0,c
 18432  007D38  3608               	rlcf	i2___lwdiv@divisor^0,f,c
 18433  007D3A  3609               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 18434  007D3C  2A0C               	incf	i2___lwdiv@counter^0,f,c
 18435  007D3E                     i2l5524:
 18436  007D3E  AE09               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 18437  007D40  EFA4  F03E         	goto	i2u652_41
 18438  007D44  EFA6  F03E         	goto	i2u652_40
 18439  007D48                     i2u652_41:
 18440  007D48  EF9B  F03E         	goto	i2l5522
 18441  007D4C                     i2u652_40:
 18442  007D4C                     i2l5526:
 18443  007D4C  90D8               	bcf	status,0,c
 18444  007D4E  360A               	rlcf	i2___lwdiv@quotient^0,f,c
 18445  007D50  360B               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 18446  007D52  5008               	movf	i2___lwdiv@divisor^0,w,c
 18447  007D54  5C06               	subwf	i2___lwdiv@dividend^0,w,c
 18448  007D56  5009               	movf	(i2___lwdiv@divisor+1)^0,w,c
 18449  007D58  5807               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 18450  007D5A  A0D8               	btfss	status,0,c
 18451  007D5C  EFB2  F03E         	goto	i2u653_41
 18452  007D60  EFB4  F03E         	goto	i2u653_40
 18453  007D64                     i2u653_41:
 18454  007D64  EFB9  F03E         	goto	i2l5534
 18455  007D68                     i2u653_40:
 18456  007D68  5008               	movf	i2___lwdiv@divisor^0,w,c
 18457  007D6A  5E06               	subwf	i2___lwdiv@dividend^0,f,c
 18458  007D6C  5009               	movf	(i2___lwdiv@divisor+1)^0,w,c
 18459  007D6E  5A07               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 18460  007D70  800A               	bsf	i2___lwdiv@quotient^0,0,c
 18461  007D72                     i2l5534:
 18462  007D72  90D8               	bcf	status,0,c
 18463  007D74  3209               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 18464  007D76  3208               	rrcf	i2___lwdiv@divisor^0,f,c
 18465  007D78  2E0C               	decfsz	i2___lwdiv@counter^0,f,c
 18466  007D7A  EFA6  F03E         	goto	i2l5526
 18467  007D7E                     i2l1145:
 18468  007D7E  C00A  F006         	movff	i2___lwdiv@quotient,?i2___lwdiv
 18469  007D82  C00B  F007         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 18470  007D86  0012               	return		;funcret
 18471  007D88                     __end_ofi2___lwdiv:
 18472                           	callstack 0
 18473                           
 18474 ;; *************** function i2___flmul *****************
 18475 ;; Defined at:
 18476 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 18477 ;; Parameters:    Size  Location     Type
 18478 ;;  b               4   14[COMRAM] unsigned int 
 18479 ;;  a               4   18[COMRAM] unsigned int 
 18480 ;; Auto vars:     Size  Location     Type
 18481 ;;  prod            4   33[COMRAM] struct .
 18482 ;;  grs             4   27[COMRAM] unsigned long 
 18483 ;;  temp            2   37[COMRAM] struct .
 18484 ;;  bexp            1   32[COMRAM] unsigned char 
 18485 ;;  aexp            1   31[COMRAM] unsigned char 
 18486 ;;  sign            1   26[COMRAM] unsigned char 
 18487 ;; Return value:  Size  Location     Type
 18488 ;;                  4   14[COMRAM] unsigned char 
 18489 ;; Registers used:
 18490 ;;		wreg, status,2, status,0, prodl, prodh
 18491 ;; Tracked objects:
 18492 ;;		On entry : 0/0
 18493 ;;		On exit  : 0/0
 18494 ;;		Unchanged: 0/0
 18495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18496 ;;      Params:         8       0       0       0       0       0       0
 18497 ;;      Locals:        13       0       0       0       0       0       0
 18498 ;;      Temps:          4       0       0       0       0       0       0
 18499 ;;      Totals:        25       0       0       0       0       0       0
 18500 ;;Total ram usage:       25 bytes
 18501 ;; Hardware stack levels used:    1
 18502 ;; This function calls:
 18503 ;;		Nothing
 18504 ;; This function is called by:
 18505 ;;		i2_leituraCXI
 18506 ;;		i2_leituraCXS
 18507 ;;		i2_atualizatela
 18508 ;;		i2_fround
 18509 ;;		i2_scale
 18510 ;;		i2_sprintf
 18511 ;; This function uses a non-reentrant model
 18512 ;;
 18513                           
 18514                           	psect	text58
 18515  003572                     __ptext58:
 18516                           	callstack 0
 18517  003572                     i2___flmul:
 18518                           	callstack 22
 18519  003572  5012               	movf	(i2___flmul@b+3)^0,w,c
 18520  003574  0B80               	andlw	128
 18521  003576  6E1B               	movwf	i2___flmul@sign^0,c
 18522  003578  5012               	movf	(i2___flmul@b+3)^0,w,c
 18523  00357A  2412               	addwf	(i2___flmul@b+3)^0,w,c
 18524  00357C  6E21               	movwf	i2___flmul@bexp^0,c
 18525  00357E  AE11               	btfss	(i2___flmul@b+2)^0,7,c
 18526  003580  EFC4  F01A         	goto	i2u696_41
 18527  003584  EFC6  F01A         	goto	i2u696_40
 18528  003588                     i2u696_41:
 18529  003588  EFC7  F01A         	goto	i2l5762
 18530  00358C                     i2u696_40:
 18531  00358C  8021               	bsf	i2___flmul@bexp^0,0,c
 18532  00358E                     i2l5762:
 18533  00358E  5021               	movf	i2___flmul@bexp^0,w,c
 18534  003590  B4D8               	btfsc	status,2,c
 18535  003592  EFCD  F01A         	goto	i2u697_41
 18536  003596  EFCF  F01A         	goto	i2u697_40
 18537  00359A                     i2u697_41:
 18538  00359A  EFE2  F01A         	goto	i2l5770
 18539  00359E                     i2u697_40:
 18540  00359E  2821               	incf	i2___flmul@bexp^0,w,c
 18541  0035A0  A4D8               	btfss	status,2,c
 18542  0035A2  EFD5  F01A         	goto	i2u698_41
 18543  0035A6  EFD7  F01A         	goto	i2u698_40
 18544  0035AA                     i2u698_41:
 18545  0035AA  EFDF  F01A         	goto	i2l5768
 18546  0035AE                     i2u698_40:
 18547  0035AE  0E00               	movlw	0
 18548  0035B0  6E0F               	movwf	i2___flmul@b^0,c
 18549  0035B2  0E00               	movlw	0
 18550  0035B4  6E10               	movwf	(i2___flmul@b+1)^0,c
 18551  0035B6  0E00               	movlw	0
 18552  0035B8  6E11               	movwf	(i2___flmul@b+2)^0,c
 18553  0035BA  0E00               	movlw	0
 18554  0035BC  6E12               	movwf	(i2___flmul@b+3)^0,c
 18555  0035BE                     i2l5768:
 18556  0035BE  8E11               	bsf	(i2___flmul@b+2)^0,7,c
 18557  0035C0  EFEA  F01A         	goto	i2l5772
 18558  0035C4                     i2l5770:
 18559  0035C4  0E00               	movlw	0
 18560  0035C6  6E0F               	movwf	i2___flmul@b^0,c
 18561  0035C8  0E00               	movlw	0
 18562  0035CA  6E10               	movwf	(i2___flmul@b+1)^0,c
 18563  0035CC  0E00               	movlw	0
 18564  0035CE  6E11               	movwf	(i2___flmul@b+2)^0,c
 18565  0035D0  0E00               	movlw	0
 18566  0035D2  6E12               	movwf	(i2___flmul@b+3)^0,c
 18567  0035D4                     i2l5772:
 18568  0035D4  5016               	movf	(i2___flmul@a+3)^0,w,c
 18569  0035D6  0B80               	andlw	128
 18570  0035D8  1A1B               	xorwf	i2___flmul@sign^0,f,c
 18571  0035DA  5016               	movf	(i2___flmul@a+3)^0,w,c
 18572  0035DC  2416               	addwf	(i2___flmul@a+3)^0,w,c
 18573  0035DE  6E20               	movwf	i2___flmul@aexp^0,c
 18574  0035E0  AE15               	btfss	(i2___flmul@a+2)^0,7,c
 18575  0035E2  EFF5  F01A         	goto	i2u699_41
 18576  0035E6  EFF7  F01A         	goto	i2u699_40
 18577  0035EA                     i2u699_41:
 18578  0035EA  EFF8  F01A         	goto	i2l5780
 18579  0035EE                     i2u699_40:
 18580  0035EE  8020               	bsf	i2___flmul@aexp^0,0,c
 18581  0035F0                     i2l5780:
 18582  0035F0  5020               	movf	i2___flmul@aexp^0,w,c
 18583  0035F2  B4D8               	btfsc	status,2,c
 18584  0035F4  EFFE  F01A         	goto	i2u700_41
 18585  0035F8  EF00  F01B         	goto	i2u700_40
 18586  0035FC                     i2u700_41:
 18587  0035FC  EF13  F01B         	goto	i2l5788
 18588  003600                     i2u700_40:
 18589  003600  2820               	incf	i2___flmul@aexp^0,w,c
 18590  003602  A4D8               	btfss	status,2,c
 18591  003604  EF06  F01B         	goto	i2u701_41
 18592  003608  EF08  F01B         	goto	i2u701_40
 18593  00360C                     i2u701_41:
 18594  00360C  EF10  F01B         	goto	i2l5786
 18595  003610                     i2u701_40:
 18596  003610  0E00               	movlw	0
 18597  003612  6E13               	movwf	i2___flmul@a^0,c
 18598  003614  0E00               	movlw	0
 18599  003616  6E14               	movwf	(i2___flmul@a+1)^0,c
 18600  003618  0E00               	movlw	0
 18601  00361A  6E15               	movwf	(i2___flmul@a+2)^0,c
 18602  00361C  0E00               	movlw	0
 18603  00361E  6E16               	movwf	(i2___flmul@a+3)^0,c
 18604  003620                     i2l5786:
 18605  003620  8E15               	bsf	(i2___flmul@a+2)^0,7,c
 18606  003622  EF1B  F01B         	goto	i2l1268
 18607  003626                     i2l5788:
 18608  003626  0E00               	movlw	0
 18609  003628  6E13               	movwf	i2___flmul@a^0,c
 18610  00362A  0E00               	movlw	0
 18611  00362C  6E14               	movwf	(i2___flmul@a+1)^0,c
 18612  00362E  0E00               	movlw	0
 18613  003630  6E15               	movwf	(i2___flmul@a+2)^0,c
 18614  003632  0E00               	movlw	0
 18615  003634  6E16               	movwf	(i2___flmul@a+3)^0,c
 18616  003636                     i2l1268:
 18617  003636  5020               	movf	i2___flmul@aexp^0,w,c
 18618  003638  B4D8               	btfsc	status,2,c
 18619  00363A  EF21  F01B         	goto	i2u702_41
 18620  00363E  EF23  F01B         	goto	i2u702_40
 18621  003642                     i2u702_41:
 18622  003642  EF2B  F01B         	goto	i2l5792
 18623  003646                     i2u702_40:
 18624  003646  5021               	movf	i2___flmul@bexp^0,w,c
 18625  003648  A4D8               	btfss	status,2,c
 18626  00364A  EF29  F01B         	goto	i2u703_41
 18627  00364E  EF2B  F01B         	goto	i2u703_40
 18628  003652                     i2u703_41:
 18629  003652  EF35  F01B         	goto	i2l5796
 18630  003656                     i2u703_40:
 18631  003656                     i2l5792:
 18632  003656  0E00               	movlw	0
 18633  003658  6E0F               	movwf	?i2___flmul^0,c
 18634  00365A  0E00               	movlw	0
 18635  00365C  6E10               	movwf	(?i2___flmul+1)^0,c
 18636  00365E  0E00               	movlw	0
 18637  003660  6E11               	movwf	(?i2___flmul+2)^0,c
 18638  003662  0E00               	movlw	0
 18639  003664  6E12               	movwf	(?i2___flmul+3)^0,c
 18640  003666  EFCD  F01C         	goto	i2l1272
 18641  00366A                     i2l5796:
 18642  00366A  5015               	movf	(i2___flmul@a+2)^0,w,c
 18643  00366C  020F               	mulwf	i2___flmul@b^0,c
 18644  00366E  CFF3 F026          	movff	prodl,i2___flmul@temp
 18645  003672  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18646  003676  5026               	movf	i2___flmul@temp^0,w,c
 18647  003678  6E1C               	movwf	i2___flmul@grs^0,c
 18648  00367A  6A1D               	clrf	(i2___flmul@grs+1)^0,c
 18649  00367C  6A1E               	clrf	(i2___flmul@grs+2)^0,c
 18650  00367E  6A1F               	clrf	(i2___flmul@grs+3)^0,c
 18651  003680  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18652  003682  6E22               	movwf	i2___flmul@prod^0,c
 18653  003684  6A23               	clrf	(i2___flmul@prod+1)^0,c
 18654  003686  6A24               	clrf	(i2___flmul@prod+2)^0,c
 18655  003688  6A25               	clrf	(i2___flmul@prod+3)^0,c
 18656  00368A  5014               	movf	(i2___flmul@a+1)^0,w,c
 18657  00368C  0210               	mulwf	(i2___flmul@b+1)^0,c
 18658  00368E  CFF3 F026          	movff	prodl,i2___flmul@temp
 18659  003692  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18660  003696  5026               	movf	i2___flmul@temp^0,w,c
 18661  003698  261C               	addwf	i2___flmul@grs^0,f,c
 18662  00369A  0E00               	movlw	0
 18663  00369C  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 18664  00369E  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 18665  0036A0  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 18666  0036A2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18667  0036A4  2622               	addwf	i2___flmul@prod^0,f,c
 18668  0036A6  0E00               	movlw	0
 18669  0036A8  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 18670  0036AA  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 18671  0036AC  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 18672  0036AE  5013               	movf	i2___flmul@a^0,w,c
 18673  0036B0  0211               	mulwf	(i2___flmul@b+2)^0,c
 18674  0036B2  CFF3 F026          	movff	prodl,i2___flmul@temp
 18675  0036B6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18676  0036BA  5026               	movf	i2___flmul@temp^0,w,c
 18677  0036BC  261C               	addwf	i2___flmul@grs^0,f,c
 18678  0036BE  0E00               	movlw	0
 18679  0036C0  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 18680  0036C2  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 18681  0036C4  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 18682  0036C6  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18683  0036C8  2622               	addwf	i2___flmul@prod^0,f,c
 18684  0036CA  0E00               	movlw	0
 18685  0036CC  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 18686  0036CE  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 18687  0036D0  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 18688  0036D2  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 18689  0036D6  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 18690  0036DA  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 18691  0036DE  6A1C               	clrf	i2___flmul@grs^0,c
 18692  0036E0  5013               	movf	i2___flmul@a^0,w,c
 18693  0036E2  0210               	mulwf	(i2___flmul@b+1)^0,c
 18694  0036E4  CFF3 F026          	movff	prodl,i2___flmul@temp
 18695  0036E8  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18696  0036EC  5026               	movf	i2___flmul@temp^0,w,c
 18697  0036EE  261C               	addwf	i2___flmul@grs^0,f,c
 18698  0036F0  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18699  0036F2  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 18700  0036F4  0E00               	movlw	0
 18701  0036F6  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 18702  0036F8  0E00               	movlw	0
 18703  0036FA  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 18704  0036FC  5014               	movf	(i2___flmul@a+1)^0,w,c
 18705  0036FE  020F               	mulwf	i2___flmul@b^0,c
 18706  003700  CFF3 F026          	movff	prodl,i2___flmul@temp
 18707  003704  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18708  003708  5026               	movf	i2___flmul@temp^0,w,c
 18709  00370A  261C               	addwf	i2___flmul@grs^0,f,c
 18710  00370C  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18711  00370E  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 18712  003710  0E00               	movlw	0
 18713  003712  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 18714  003714  0E00               	movlw	0
 18715  003716  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 18716  003718  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 18717  00371C  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 18718  003720  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 18719  003724  6A1C               	clrf	i2___flmul@grs^0,c
 18720  003726  5013               	movf	i2___flmul@a^0,w,c
 18721  003728  020F               	mulwf	i2___flmul@b^0,c
 18722  00372A  CFF3 F026          	movff	prodl,i2___flmul@temp
 18723  00372E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18724  003732  5026               	movf	i2___flmul@temp^0,w,c
 18725  003734  261C               	addwf	i2___flmul@grs^0,f,c
 18726  003736  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18727  003738  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 18728  00373A  0E00               	movlw	0
 18729  00373C  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 18730  00373E  0E00               	movlw	0
 18731  003740  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 18732  003742  5015               	movf	(i2___flmul@a+2)^0,w,c
 18733  003744  0210               	mulwf	(i2___flmul@b+1)^0,c
 18734  003746  CFF3 F026          	movff	prodl,i2___flmul@temp
 18735  00374A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18736  00374E  5026               	movf	i2___flmul@temp^0,w,c
 18737  003750  2622               	addwf	i2___flmul@prod^0,f,c
 18738  003752  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18739  003754  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 18740  003756  0E00               	movlw	0
 18741  003758  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 18742  00375A  0E00               	movlw	0
 18743  00375C  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 18744  00375E  5014               	movf	(i2___flmul@a+1)^0,w,c
 18745  003760  0211               	mulwf	(i2___flmul@b+2)^0,c
 18746  003762  CFF3 F026          	movff	prodl,i2___flmul@temp
 18747  003766  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18748  00376A  5026               	movf	i2___flmul@temp^0,w,c
 18749  00376C  2622               	addwf	i2___flmul@prod^0,f,c
 18750  00376E  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18751  003770  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 18752  003772  0E00               	movlw	0
 18753  003774  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 18754  003776  0E00               	movlw	0
 18755  003778  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 18756  00377A  5015               	movf	(i2___flmul@a+2)^0,w,c
 18757  00377C  0211               	mulwf	(i2___flmul@b+2)^0,c
 18758  00377E  CFF3 F026          	movff	prodl,i2___flmul@temp
 18759  003782  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18760  003786  5026               	movf	i2___flmul@temp^0,w,c
 18761  003788  6E17               	movwf	??i2___flmul^0,c
 18762  00378A  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18763  00378C  6E18               	movwf	(??i2___flmul+1)^0,c
 18764  00378E  6A19               	clrf	(??i2___flmul+2)^0,c
 18765  003790  6A1A               	clrf	(??i2___flmul+3)^0,c
 18766  003792  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 18767  003796  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 18768  00379A  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 18769  00379E  6A17               	clrf	??i2___flmul^0,c
 18770  0037A0  5017               	movf	??i2___flmul^0,w,c
 18771  0037A2  2622               	addwf	i2___flmul@prod^0,f,c
 18772  0037A4  5018               	movf	(??i2___flmul+1)^0,w,c
 18773  0037A6  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 18774  0037A8  5019               	movf	(??i2___flmul+2)^0,w,c
 18775  0037AA  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 18776  0037AC  501A               	movf	(??i2___flmul+3)^0,w,c
 18777  0037AE  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 18778  0037B0  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 18779  0037B4  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 18780  0037B8  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 18781  0037BC  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 18782  0037C0  0E19               	movlw	25
 18783  0037C2  EFE8  F01B         	goto	i2u704_40
 18784  0037C6                     i2u704_45:
 18785  0037C6  90D8               	bcf	status,0,c
 18786  0037C8  321A               	rrcf	(??i2___flmul+3)^0,f,c
 18787  0037CA  3219               	rrcf	(??i2___flmul+2)^0,f,c
 18788  0037CC  3218               	rrcf	(??i2___flmul+1)^0,f,c
 18789  0037CE  3217               	rrcf	??i2___flmul^0,f,c
 18790  0037D0                     i2u704_40:
 18791  0037D0  2EE8               	decfsz	wreg,f,c
 18792  0037D2  EFE3  F01B         	goto	i2u704_45
 18793  0037D6  5017               	movf	??i2___flmul^0,w,c
 18794  0037D8  2622               	addwf	i2___flmul@prod^0,f,c
 18795  0037DA  5018               	movf	(??i2___flmul+1)^0,w,c
 18796  0037DC  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 18797  0037DE  5019               	movf	(??i2___flmul+2)^0,w,c
 18798  0037E0  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 18799  0037E2  501A               	movf	(??i2___flmul+3)^0,w,c
 18800  0037E4  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 18801  0037E6  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 18802  0037EA  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 18803  0037EE  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 18804  0037F2  6A1C               	clrf	i2___flmul@grs^0,c
 18805  0037F4  5020               	movf	i2___flmul@aexp^0,w,c
 18806  0037F6  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 18807  0037FA  6A18               	clrf	(??i2___flmul+1)^0,c
 18808  0037FC  2617               	addwf	??i2___flmul^0,f,c
 18809  0037FE  0E00               	movlw	0
 18810  003800  2218               	addwfc	(??i2___flmul+1)^0,f,c
 18811  003802  0E82               	movlw	130
 18812  003804  2417               	addwf	??i2___flmul^0,w,c
 18813  003806  6E26               	movwf	i2___flmul@temp^0,c
 18814  003808  0EFF               	movlw	255
 18815  00380A  2018               	addwfc	(??i2___flmul+1)^0,w,c
 18816  00380C  6E27               	movwf	(i2___flmul@temp+1)^0,c
 18817  00380E  EF1E  F01C         	goto	i2l5844
 18818  003812                     i2l5838:
 18819  003812  90D8               	bcf	status,0,c
 18820  003814  3622               	rlcf	i2___flmul@prod^0,f,c
 18821  003816  3623               	rlcf	(i2___flmul@prod+1)^0,f,c
 18822  003818  3624               	rlcf	(i2___flmul@prod+2)^0,f,c
 18823  00381A  3625               	rlcf	(i2___flmul@prod+3)^0,f,c
 18824  00381C  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 18825  00381E  EF13  F01C         	goto	i2u705_41
 18826  003822  EF15  F01C         	goto	i2u705_40
 18827  003826                     i2u705_41:
 18828  003826  EF16  F01C         	goto	i2l1275
 18829  00382A                     i2u705_40:
 18830  00382A  8022               	bsf	i2___flmul@prod^0,0,c
 18831  00382C                     i2l1275:
 18832  00382C  90D8               	bcf	status,0,c
 18833  00382E  361C               	rlcf	i2___flmul@grs^0,f,c
 18834  003830  361D               	rlcf	(i2___flmul@grs+1)^0,f,c
 18835  003832  361E               	rlcf	(i2___flmul@grs+2)^0,f,c
 18836  003834  361F               	rlcf	(i2___flmul@grs+3)^0,f,c
 18837  003836  0626               	decf	i2___flmul@temp^0,f,c
 18838  003838  A0D8               	btfss	status,0,c
 18839  00383A  0627               	decf	(i2___flmul@temp+1)^0,f,c
 18840  00383C                     i2l5844:
 18841  00383C  AE24               	btfss	(i2___flmul@prod+2)^0,7,c
 18842  00383E  EF23  F01C         	goto	i2u706_41
 18843  003842  EF25  F01C         	goto	i2u706_40
 18844  003846                     i2u706_41:
 18845  003846  EF09  F01C         	goto	i2l5838
 18846  00384A                     i2u706_40:
 18847  00384A  0E00               	movlw	0
 18848  00384C  6E20               	movwf	i2___flmul@aexp^0,c
 18849  00384E  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 18850  003850  EF2C  F01C         	goto	i2u707_41
 18851  003854  EF2E  F01C         	goto	i2u707_40
 18852  003858                     i2u707_41:
 18853  003858  EF52  F01C         	goto	i2l1277
 18854  00385C                     i2u707_40:
 18855  00385C  0EFF               	movlw	255
 18856  00385E  141C               	andwf	i2___flmul@grs^0,w,c
 18857  003860  6E17               	movwf	??i2___flmul^0,c
 18858  003862  0EFF               	movlw	255
 18859  003864  141D               	andwf	(i2___flmul@grs+1)^0,w,c
 18860  003866  6E18               	movwf	(??i2___flmul+1)^0,c
 18861  003868  0EFF               	movlw	255
 18862  00386A  141E               	andwf	(i2___flmul@grs+2)^0,w,c
 18863  00386C  6E19               	movwf	(??i2___flmul+2)^0,c
 18864  00386E  0E7F               	movlw	127
 18865  003870  141F               	andwf	(i2___flmul@grs+3)^0,w,c
 18866  003872  6E1A               	movwf	(??i2___flmul+3)^0,c
 18867  003874  5017               	movf	??i2___flmul^0,w,c
 18868  003876  1018               	iorwf	(??i2___flmul+1)^0,w,c
 18869  003878  1019               	iorwf	(??i2___flmul+2)^0,w,c
 18870  00387A  101A               	iorwf	(??i2___flmul+3)^0,w,c
 18871  00387C  B4D8               	btfsc	status,2,c
 18872  00387E  EF43  F01C         	goto	i2u708_41
 18873  003882  EF45  F01C         	goto	i2u708_40
 18874  003886                     i2u708_41:
 18875  003886  EF49  F01C         	goto	i2l1278
 18876  00388A                     i2u708_40:
 18877  00388A                     i2l5852:
 18878  00388A  0E01               	movlw	1
 18879  00388C  6E20               	movwf	i2___flmul@aexp^0,c
 18880  00388E  EF52  F01C         	goto	i2l1277
 18881  003892                     i2l1278:
 18882  003892  A022               	btfss	i2___flmul@prod^0,0,c
 18883  003894  EF4E  F01C         	goto	i2u709_41
 18884  003898  EF50  F01C         	goto	i2u709_40
 18885  00389C                     i2u709_41:
 18886  00389C  EF52  F01C         	goto	i2l1277
 18887  0038A0                     i2u709_40:
 18888  0038A0  EF45  F01C         	goto	i2l5852
 18889  0038A4                     i2l1277:
 18890  0038A4  5020               	movf	i2___flmul@aexp^0,w,c
 18891  0038A6  B4D8               	btfsc	status,2,c
 18892  0038A8  EF58  F01C         	goto	i2u710_41
 18893  0038AC  EF5A  F01C         	goto	i2u710_40
 18894  0038B0                     i2u710_41:
 18895  0038B0  EF7E  F01C         	goto	i2l5864
 18896  0038B4                     i2u710_40:
 18897  0038B4  0E01               	movlw	1
 18898  0038B6  2622               	addwf	i2___flmul@prod^0,f,c
 18899  0038B8  0E00               	movlw	0
 18900  0038BA  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 18901  0038BC  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 18902  0038BE  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 18903  0038C0  A025               	btfss	(i2___flmul@prod+3)^0,0,c
 18904  0038C2  EF65  F01C         	goto	i2u711_41
 18905  0038C6  EF67  F01C         	goto	i2u711_40
 18906  0038CA                     i2u711_41:
 18907  0038CA  EF7E  F01C         	goto	i2l5864
 18908  0038CE                     i2u711_40:
 18909  0038CE  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 18910  0038D2  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 18911  0038D6  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 18912  0038DA  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 18913  0038DE  341A               	rlcf	(??i2___flmul+3)^0,w,c
 18914  0038E0  321A               	rrcf	(??i2___flmul+3)^0,f,c
 18915  0038E2  3219               	rrcf	(??i2___flmul+2)^0,f,c
 18916  0038E4  3218               	rrcf	(??i2___flmul+1)^0,f,c
 18917  0038E6  3217               	rrcf	??i2___flmul^0,f,c
 18918  0038E8  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 18919  0038EC  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 18920  0038F0  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 18921  0038F4  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 18922  0038F8  4A26               	infsnz	i2___flmul@temp^0,f,c
 18923  0038FA  2A27               	incf	(i2___flmul@temp+1)^0,f,c
 18924  0038FC                     i2l5864:
 18925  0038FC  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 18926  0038FE  EF89  F01C         	goto	i2u712_41
 18927  003902  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18928  003904  E108               	bnz	i2u712_40
 18929  003906  2826               	incf	i2___flmul@temp^0,w,c
 18930  003908  A0D8               	btfss	status,0,c
 18931  00390A  EF89  F01C         	goto	i2u712_41
 18932  00390E  EF8B  F01C         	goto	i2u712_40
 18933  003912                     i2u712_41:
 18934  003912  EF95  F01C         	goto	i2l5868
 18935  003916                     i2u712_40:
 18936  003916  0E00               	movlw	0
 18937  003918  6E22               	movwf	i2___flmul@prod^0,c
 18938  00391A  0E00               	movlw	0
 18939  00391C  6E23               	movwf	(i2___flmul@prod+1)^0,c
 18940  00391E  0E80               	movlw	128
 18941  003920  6E24               	movwf	(i2___flmul@prod+2)^0,c
 18942  003922  0E7F               	movlw	127
 18943  003924  6E25               	movwf	(i2___flmul@prod+3)^0,c
 18944  003926  EFC3  F01C         	goto	i2l5880
 18945  00392A                     i2l5868:
 18946  00392A  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 18947  00392C  EFA2  F01C         	goto	i2u713_40
 18948  003930  5027               	movf	(i2___flmul@temp+1)^0,w,c
 18949  003932  E106               	bnz	i2u713_41
 18950  003934  0426               	decf	i2___flmul@temp^0,w,c
 18951  003936  B0D8               	btfsc	status,0,c
 18952  003938  EFA0  F01C         	goto	i2u713_41
 18953  00393C  EFA2  F01C         	goto	i2u713_40
 18954  003940                     i2u713_41:
 18955  003940  EFAE  F01C         	goto	i2l1285
 18956  003944                     i2u713_40:
 18957  003944  0E00               	movlw	0
 18958  003946  6E22               	movwf	i2___flmul@prod^0,c
 18959  003948  0E00               	movlw	0
 18960  00394A  6E23               	movwf	(i2___flmul@prod+1)^0,c
 18961  00394C  0E00               	movlw	0
 18962  00394E  6E24               	movwf	(i2___flmul@prod+2)^0,c
 18963  003950  0E00               	movlw	0
 18964  003952  6E25               	movwf	(i2___flmul@prod+3)^0,c
 18965  003954  0E00               	movlw	0
 18966  003956  6E1B               	movwf	i2___flmul@sign^0,c
 18967  003958  EFC3  F01C         	goto	i2l5880
 18968  00395C                     i2l1285:
 18969  00395C  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 18970  003960  0EFF               	movlw	255
 18971  003962  1622               	andwf	i2___flmul@prod^0,f,c
 18972  003964  0EFF               	movlw	255
 18973  003966  1623               	andwf	(i2___flmul@prod+1)^0,f,c
 18974  003968  0E7F               	movlw	127
 18975  00396A  1624               	andwf	(i2___flmul@prod+2)^0,f,c
 18976  00396C  0E00               	movlw	0
 18977  00396E  1625               	andwf	(i2___flmul@prod+3)^0,f,c
 18978  003970  A021               	btfss	i2___flmul@bexp^0,0,c
 18979  003972  EFBD  F01C         	goto	i2u714_41
 18980  003976  EFBF  F01C         	goto	i2u714_40
 18981  00397A                     i2u714_41:
 18982  00397A  EFC0  F01C         	goto	i2l5878
 18983  00397E                     i2u714_40:
 18984  00397E  8E24               	bsf	(i2___flmul@prod+2)^0,7,c
 18985  003980                     i2l5878:
 18986  003980  90D8               	bcf	status,0,c
 18987  003982  3021               	rrcf	i2___flmul@bexp^0,w,c
 18988  003984  6E25               	movwf	(i2___flmul@prod+3)^0,c
 18989  003986                     i2l5880:
 18990  003986  501B               	movf	i2___flmul@sign^0,w,c
 18991  003988  1225               	iorwf	(i2___flmul@prod+3)^0,f,c
 18992  00398A  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 18993  00398E  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 18994  003992  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 18995  003996  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 18996  00399A                     i2l1272:
 18997  00399A  0012               	return		;funcret
 18998  00399C                     __end_ofi2___flmul:
 18999                           	callstack 0
 19000                           
 19001 ;; *************** function i2__tdiv_to_l_ *****************
 19002 ;; Defined at:
 19003 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
 19004 ;; Parameters:    Size  Location     Type
 19005 ;;  f1              4    0[COMRAM] float 
 19006 ;;  f2              4    4[COMRAM] float 
 19007 ;; Auto vars:     Size  Location     Type
 19008 ;;  quot            4   11[COMRAM] unsigned long 
 19009 ;;  exp1            1   16[COMRAM] unsigned char 
 19010 ;;  cntr            1   15[COMRAM] unsigned char 
 19011 ;; Return value:  Size  Location     Type
 19012 ;;                  4    0[COMRAM] unsigned long 
 19013 ;; Registers used:
 19014 ;;		wreg, status,2, status,0
 19015 ;; Tracked objects:
 19016 ;;		On entry : 0/0
 19017 ;;		On exit  : 0/0
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19020 ;;      Params:         8       0       0       0       0       0       0
 19021 ;;      Locals:         6       0       0       0       0       0       0
 19022 ;;      Temps:          3       0       0       0       0       0       0
 19023 ;;      Totals:        17       0       0       0       0       0       0
 19024 ;;Total ram usage:       17 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; This function calls:
 19027 ;;		Nothing
 19028 ;; This function is called by:
 19029 ;;		i2_sprintf
 19030 ;; This function uses a non-reentrant model
 19031 ;;
 19032                           
 19033                           	psect	text59
 19034  005C2C                     __ptext59:
 19035                           	callstack 0
 19036  005C2C                     i2__tdiv_to_l_:
 19037                           	callstack 23
 19038  005C2C  C003  F009         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 19039  005C30  6A0A               	clrf	(??i2__tdiv_to_l_+1)^0,c
 19040  005C32  6A0B               	clrf	(??i2__tdiv_to_l_+2)^0,c
 19041  005C34  3402               	rlcf	(i2__tdiv_to_l_@f1+1)^0,w,c
 19042  005C36  3609               	rlcf	??i2__tdiv_to_l_^0,f,c
 19043  005C38  E301               	bnc	u845_41
 19044  005C3A  800A               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 19045  005C3C                     u845_41:
 19046  005C3C  5009               	movf	??i2__tdiv_to_l_^0,w,c
 19047  005C3E  6E11               	movwf	i2__tdiv_to_l_@exp1^0,c
 19048  005C40  5011               	movf	i2__tdiv_to_l_@exp1^0,w,c
 19049  005C42  A4D8               	btfss	status,2,c
 19050  005C44  EF26  F02E         	goto	i2u846_41
 19051  005C48  EF28  F02E         	goto	i2u846_40
 19052  005C4C                     i2u846_41:
 19053  005C4C  EF32  F02E         	goto	i2l6760
 19054  005C50                     i2u846_40:
 19055  005C50                     i2l6756:
 19056  005C50  0E00               	movlw	0
 19057  005C52  6E01               	movwf	?i2__tdiv_to_l_^0,c
 19058  005C54  0E00               	movlw	0
 19059  005C56  6E02               	movwf	(?i2__tdiv_to_l_+1)^0,c
 19060  005C58  0E00               	movlw	0
 19061  005C5A  6E03               	movwf	(?i2__tdiv_to_l_+2)^0,c
 19062  005C5C  0E00               	movlw	0
 19063  005C5E  6E04               	movwf	(?i2__tdiv_to_l_+3)^0,c
 19064  005C60  EFC0  F02E         	goto	i2l995
 19065  005C64                     i2l6760:
 19066  005C64  C007  F009         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 19067  005C68  6A0A               	clrf	(??i2__tdiv_to_l_+1)^0,c
 19068  005C6A  6A0B               	clrf	(??i2__tdiv_to_l_+2)^0,c
 19069  005C6C  3406               	rlcf	(i2__tdiv_to_l_@f2+1)^0,w,c
 19070  005C6E  3609               	rlcf	??i2__tdiv_to_l_^0,f,c
 19071  005C70  E301               	bnc	u847_41
 19072  005C72  800A               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 19073  005C74                     u847_41:
 19074  005C74  5009               	movf	??i2__tdiv_to_l_^0,w,c
 19075  005C76  6E10               	movwf	i2__tdiv_to_l_@cntr^0,c
 19076  005C78  5010               	movf	i2__tdiv_to_l_@cntr^0,w,c
 19077  005C7A  A4D8               	btfss	status,2,c
 19078  005C7C  EF42  F02E         	goto	i2u848_41
 19079  005C80  EF44  F02E         	goto	i2u848_40
 19080  005C84                     i2u848_41:
 19081  005C84  EF46  F02E         	goto	i2l6766
 19082  005C88                     i2u848_40:
 19083  005C88  EF28  F02E         	goto	i2l6756
 19084  005C8C                     i2l6766:
 19085  005C8C  8E02               	bsf	(i2__tdiv_to_l_@f1+1)^0,7,c
 19086  005C8E  0EFF               	movlw	255
 19087  005C90  1601               	andwf	i2__tdiv_to_l_@f1^0,f,c
 19088  005C92  0EFF               	movlw	255
 19089  005C94  1602               	andwf	(i2__tdiv_to_l_@f1+1)^0,f,c
 19090  005C96  0E00               	movlw	0
 19091  005C98  1603               	andwf	(i2__tdiv_to_l_@f1+2)^0,f,c
 19092  005C9A  8E06               	bsf	(i2__tdiv_to_l_@f2+1)^0,7,c
 19093  005C9C  0EFF               	movlw	255
 19094  005C9E  1605               	andwf	i2__tdiv_to_l_@f2^0,f,c
 19095  005CA0  0EFF               	movlw	255
 19096  005CA2  1606               	andwf	(i2__tdiv_to_l_@f2+1)^0,f,c
 19097  005CA4  0E00               	movlw	0
 19098  005CA6  1607               	andwf	(i2__tdiv_to_l_@f2+2)^0,f,c
 19099  005CA8  0E00               	movlw	0
 19100  005CAA  6E0C               	movwf	i2__tdiv_to_l_@quot^0,c
 19101  005CAC  0E00               	movlw	0
 19102  005CAE  6E0D               	movwf	(i2__tdiv_to_l_@quot+1)^0,c
 19103  005CB0  0E00               	movlw	0
 19104  005CB2  6E0E               	movwf	(i2__tdiv_to_l_@quot+2)^0,c
 19105  005CB4  0E00               	movlw	0
 19106  005CB6  6E0F               	movwf	(i2__tdiv_to_l_@quot+3)^0,c
 19107  005CB8  0E7F               	movlw	127
 19108  005CBA  5E11               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 19109  005CBC  5010               	movf	i2__tdiv_to_l_@cntr^0,w,c
 19110  005CBE  0F98               	addlw	152
 19111  005CC0  5E11               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 19112  005CC2  0E18               	movlw	24
 19113  005CC4  6E10               	movwf	i2__tdiv_to_l_@cntr^0,c
 19114  005CC6                     i2l997:
 19115  005CC6  90D8               	bcf	status,0,c
 19116  005CC8  360C               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 19117  005CCA  360D               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 19118  005CCC  360E               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 19119  005CCE  360F               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 19120  005CD0  5005               	movf	i2__tdiv_to_l_@f2^0,w,c
 19121  005CD2  5C01               	subwf	i2__tdiv_to_l_@f1^0,w,c
 19122  005CD4  5006               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 19123  005CD6  5802               	subwfb	(i2__tdiv_to_l_@f1+1)^0,w,c
 19124  005CD8  5007               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 19125  005CDA  5803               	subwfb	(i2__tdiv_to_l_@f1+2)^0,w,c
 19126  005CDC  A0D8               	btfss	status,0,c
 19127  005CDE  EF73  F02E         	goto	i2u849_41
 19128  005CE2  EF75  F02E         	goto	i2u849_40
 19129  005CE6                     i2u849_41:
 19130  005CE6  EF7C  F02E         	goto	i2l998
 19131  005CEA                     i2u849_40:
 19132  005CEA  5005               	movf	i2__tdiv_to_l_@f2^0,w,c
 19133  005CEC  5E01               	subwf	i2__tdiv_to_l_@f1^0,f,c
 19134  005CEE  5006               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 19135  005CF0  5A02               	subwfb	(i2__tdiv_to_l_@f1+1)^0,f,c
 19136  005CF2  5007               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 19137  005CF4  5A03               	subwfb	(i2__tdiv_to_l_@f1+2)^0,f,c
 19138  005CF6  800C               	bsf	i2__tdiv_to_l_@quot^0,0,c
 19139  005CF8                     i2l998:
 19140  005CF8  90D8               	bcf	status,0,c
 19141  005CFA  3601               	rlcf	i2__tdiv_to_l_@f1^0,f,c
 19142  005CFC  3602               	rlcf	(i2__tdiv_to_l_@f1+1)^0,f,c
 19143  005CFE  3603               	rlcf	(i2__tdiv_to_l_@f1+2)^0,f,c
 19144  005D00  2E10               	decfsz	i2__tdiv_to_l_@cntr^0,f,c
 19145  005D02  EF63  F02E         	goto	i2l997
 19146  005D06  BE11               	btfsc	i2__tdiv_to_l_@exp1^0,7,c
 19147  005D08  EF8A  F02E         	goto	i2u850_40
 19148  005D0C  EF88  F02E         	goto	i2u850_41
 19149  005D10                     i2u850_41:
 19150  005D10  EFA0  F02E         	goto	i2l6800
 19151  005D14                     i2u850_40:
 19152  005D14  5011               	movf	i2__tdiv_to_l_@exp1^0,w,c
 19153  005D16  0A80               	xorlw	128
 19154  005D18  0F97               	addlw	151
 19155  005D1A  B0D8               	btfsc	status,0,c
 19156  005D1C  EF92  F02E         	goto	i2u851_41
 19157  005D20  EF94  F02E         	goto	i2u851_40
 19158  005D24                     i2u851_41:
 19159  005D24  EF96  F02E         	goto	i2l6796
 19160  005D28                     i2u851_40:
 19161  005D28  EF28  F02E         	goto	i2l6756
 19162  005D2C                     i2l6796:
 19163  005D2C  90D8               	bcf	status,0,c
 19164  005D2E  320F               	rrcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 19165  005D30  320E               	rrcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 19166  005D32  320D               	rrcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 19167  005D34  320C               	rrcf	i2__tdiv_to_l_@quot^0,f,c
 19168  005D36  3E11               	incfsz	i2__tdiv_to_l_@exp1^0,f,c
 19169  005D38  EF96  F02E         	goto	i2l6796
 19170  005D3C  EFB8  F02E         	goto	i2l1004
 19171  005D40                     i2l6800:
 19172  005D40  0E17               	movlw	23
 19173  005D42  6411               	cpfsgt	i2__tdiv_to_l_@exp1^0,c
 19174  005D44  EFA6  F02E         	goto	i2u852_41
 19175  005D48  EFA8  F02E         	goto	i2u852_40
 19176  005D4C                     i2u852_41:
 19177  005D4C  EFB0  F02E         	goto	i2l6808
 19178  005D50                     i2u852_40:
 19179  005D50  EF28  F02E         	goto	i2l6756
 19180  005D54                     i2l6806:
 19181  005D54  90D8               	bcf	status,0,c
 19182  005D56  360C               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 19183  005D58  360D               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 19184  005D5A  360E               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 19185  005D5C  360F               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 19186  005D5E  0611               	decf	i2__tdiv_to_l_@exp1^0,f,c
 19187  005D60                     i2l6808:
 19188  005D60  5011               	movf	i2__tdiv_to_l_@exp1^0,w,c
 19189  005D62  A4D8               	btfss	status,2,c
 19190  005D64  EFB6  F02E         	goto	i2u853_41
 19191  005D68  EFB8  F02E         	goto	i2u853_40
 19192  005D6C                     i2u853_41:
 19193  005D6C  EFAA  F02E         	goto	i2l6806
 19194  005D70                     i2u853_40:
 19195  005D70                     i2l1004:
 19196  005D70  C00C  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 19197  005D74  C00D  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 19198  005D78  C00E  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 19199  005D7C  C00F  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 19200  005D80                     i2l995:
 19201  005D80  0012               	return		;funcret
 19202  005D82                     __end_ofi2__tdiv_to_l_:
 19203                           	callstack 0
 19204                           
 19205 ;; *************** function i2__div_to_l_ *****************
 19206 ;; Defined at:
 19207 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
 19208 ;; Parameters:    Size  Location     Type
 19209 ;;  f1              4    0[COMRAM] unsigned long 
 19210 ;;  f2              4    4[COMRAM] unsigned long 
 19211 ;; Auto vars:     Size  Location     Type
 19212 ;;  quot            4    8[COMRAM] unsigned long 
 19213 ;;  exp1            1   13[COMRAM] unsigned char 
 19214 ;;  cntr            1   12[COMRAM] unsigned char 
 19215 ;; Return value:  Size  Location     Type
 19216 ;;                  4    0[COMRAM] unsigned long 
 19217 ;; Registers used:
 19218 ;;		wreg, status,2, status,0
 19219 ;; Tracked objects:
 19220 ;;		On entry : 0/0
 19221 ;;		On exit  : 0/0
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19224 ;;      Params:         8       0       0       0       0       0       0
 19225 ;;      Locals:         6       0       0       0       0       0       0
 19226 ;;      Temps:          0       0       0       0       0       0       0
 19227 ;;      Totals:        14       0       0       0       0       0       0
 19228 ;;Total ram usage:       14 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; This function calls:
 19231 ;;		Nothing
 19232 ;; This function is called by:
 19233 ;;		i2_sprintf
 19234 ;; This function uses a non-reentrant model
 19235 ;;
 19236                           
 19237                           	psect	text60
 19238  00601E                     __ptext60:
 19239                           	callstack 0
 19240  00601E                     i2__div_to_l_:
 19241                           	callstack 23
 19242  00601E  3403               	rlcf	(i2__div_to_l_@f1+2)^0,w,c
 19243  006020  3404               	rlcf	(i2__div_to_l_@f1+3)^0,w,c
 19244  006022  6E0E               	movwf	i2__div_to_l_@exp1^0,c
 19245  006024  500E               	movf	i2__div_to_l_@exp1^0,w,c
 19246  006026  A4D8               	btfss	status,2,c
 19247  006028  EF18  F030         	goto	i2u822_41
 19248  00602C  EF1A  F030         	goto	i2u822_40
 19249  006030                     i2u822_41:
 19250  006030  EF24  F030         	goto	i2l6610
 19251  006034                     i2u822_40:
 19252  006034                     i2l6606:
 19253  006034  0E00               	movlw	0
 19254  006036  6E01               	movwf	?i2__div_to_l_^0,c
 19255  006038  0E00               	movlw	0
 19256  00603A  6E02               	movwf	(?i2__div_to_l_+1)^0,c
 19257  00603C  0E00               	movlw	0
 19258  00603E  6E03               	movwf	(?i2__div_to_l_+2)^0,c
 19259  006040  0E00               	movlw	0
 19260  006042  6E04               	movwf	(?i2__div_to_l_+3)^0,c
 19261  006044  EFB4  F030         	goto	i2l886
 19262  006048                     i2l6610:
 19263  006048  3407               	rlcf	(i2__div_to_l_@f2+2)^0,w,c
 19264  00604A  3408               	rlcf	(i2__div_to_l_@f2+3)^0,w,c
 19265  00604C  6E0D               	movwf	i2__div_to_l_@cntr^0,c
 19266  00604E  500D               	movf	i2__div_to_l_@cntr^0,w,c
 19267  006050  A4D8               	btfss	status,2,c
 19268  006052  EF2D  F030         	goto	i2u823_41
 19269  006056  EF2F  F030         	goto	i2u823_40
 19270  00605A                     i2u823_41:
 19271  00605A  EF31  F030         	goto	i2l6616
 19272  00605E                     i2u823_40:
 19273  00605E  EF1A  F030         	goto	i2l6606
 19274  006062                     i2l6616:
 19275  006062  8E03               	bsf	(i2__div_to_l_@f1+2)^0,7,c
 19276  006064  0EFF               	movlw	255
 19277  006066  1601               	andwf	i2__div_to_l_@f1^0,f,c
 19278  006068  0EFF               	movlw	255
 19279  00606A  1602               	andwf	(i2__div_to_l_@f1+1)^0,f,c
 19280  00606C  0EFF               	movlw	255
 19281  00606E  1603               	andwf	(i2__div_to_l_@f1+2)^0,f,c
 19282  006070  0E00               	movlw	0
 19283  006072  1604               	andwf	(i2__div_to_l_@f1+3)^0,f,c
 19284  006074  8E07               	bsf	(i2__div_to_l_@f2+2)^0,7,c
 19285  006076  0EFF               	movlw	255
 19286  006078  1605               	andwf	i2__div_to_l_@f2^0,f,c
 19287  00607A  0EFF               	movlw	255
 19288  00607C  1606               	andwf	(i2__div_to_l_@f2+1)^0,f,c
 19289  00607E  0EFF               	movlw	255
 19290  006080  1607               	andwf	(i2__div_to_l_@f2+2)^0,f,c
 19291  006082  0E00               	movlw	0
 19292  006084  1608               	andwf	(i2__div_to_l_@f2+3)^0,f,c
 19293  006086  0E00               	movlw	0
 19294  006088  6E09               	movwf	i2__div_to_l_@quot^0,c
 19295  00608A  0E00               	movlw	0
 19296  00608C  6E0A               	movwf	(i2__div_to_l_@quot+1)^0,c
 19297  00608E  0E00               	movlw	0
 19298  006090  6E0B               	movwf	(i2__div_to_l_@quot+2)^0,c
 19299  006092  0E00               	movlw	0
 19300  006094  6E0C               	movwf	(i2__div_to_l_@quot+3)^0,c
 19301  006096  0E7F               	movlw	127
 19302  006098  5E0E               	subwf	i2__div_to_l_@exp1^0,f,c
 19303  00609A  500D               	movf	i2__div_to_l_@cntr^0,w,c
 19304  00609C  0FA0               	addlw	160
 19305  00609E  5E0E               	subwf	i2__div_to_l_@exp1^0,f,c
 19306  0060A0  0E20               	movlw	32
 19307  0060A2  6E0D               	movwf	i2__div_to_l_@cntr^0,c
 19308  0060A4                     i2l6630:
 19309  0060A4  90D8               	bcf	status,0,c
 19310  0060A6  3609               	rlcf	i2__div_to_l_@quot^0,f,c
 19311  0060A8  360A               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 19312  0060AA  360B               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 19313  0060AC  360C               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 19314  0060AE  5005               	movf	i2__div_to_l_@f2^0,w,c
 19315  0060B0  5C01               	subwf	i2__div_to_l_@f1^0,w,c
 19316  0060B2  5006               	movf	(i2__div_to_l_@f2+1)^0,w,c
 19317  0060B4  5802               	subwfb	(i2__div_to_l_@f1+1)^0,w,c
 19318  0060B6  5007               	movf	(i2__div_to_l_@f2+2)^0,w,c
 19319  0060B8  5803               	subwfb	(i2__div_to_l_@f1+2)^0,w,c
 19320  0060BA  5008               	movf	(i2__div_to_l_@f2+3)^0,w,c
 19321  0060BC  5804               	subwfb	(i2__div_to_l_@f1+3)^0,w,c
 19322  0060BE  A0D8               	btfss	status,0,c
 19323  0060C0  EF64  F030         	goto	i2u824_41
 19324  0060C4  EF66  F030         	goto	i2u824_40
 19325  0060C8                     i2u824_41:
 19326  0060C8  EF6F  F030         	goto	i2l6638
 19327  0060CC                     i2u824_40:
 19328  0060CC  5005               	movf	i2__div_to_l_@f2^0,w,c
 19329  0060CE  5E01               	subwf	i2__div_to_l_@f1^0,f,c
 19330  0060D0  5006               	movf	(i2__div_to_l_@f2+1)^0,w,c
 19331  0060D2  5A02               	subwfb	(i2__div_to_l_@f1+1)^0,f,c
 19332  0060D4  5007               	movf	(i2__div_to_l_@f2+2)^0,w,c
 19333  0060D6  5A03               	subwfb	(i2__div_to_l_@f1+2)^0,f,c
 19334  0060D8  5008               	movf	(i2__div_to_l_@f2+3)^0,w,c
 19335  0060DA  5A04               	subwfb	(i2__div_to_l_@f1+3)^0,f,c
 19336  0060DC  8009               	bsf	i2__div_to_l_@quot^0,0,c
 19337  0060DE                     i2l6638:
 19338  0060DE  90D8               	bcf	status,0,c
 19339  0060E0  3601               	rlcf	i2__div_to_l_@f1^0,f,c
 19340  0060E2  3602               	rlcf	(i2__div_to_l_@f1+1)^0,f,c
 19341  0060E4  3603               	rlcf	(i2__div_to_l_@f1+2)^0,f,c
 19342  0060E6  3604               	rlcf	(i2__div_to_l_@f1+3)^0,f,c
 19343  0060E8  2E0D               	decfsz	i2__div_to_l_@cntr^0,f,c
 19344  0060EA  EF52  F030         	goto	i2l6630
 19345  0060EE  BE0E               	btfsc	i2__div_to_l_@exp1^0,7,c
 19346  0060F0  EF7E  F030         	goto	i2u825_40
 19347  0060F4  EF7C  F030         	goto	i2u825_41
 19348  0060F8                     i2u825_41:
 19349  0060F8  EF94  F030         	goto	i2l6654
 19350  0060FC                     i2u825_40:
 19351  0060FC  500E               	movf	i2__div_to_l_@exp1^0,w,c
 19352  0060FE  0A80               	xorlw	128
 19353  006100  0F9F               	addlw	159
 19354  006102  B0D8               	btfsc	status,0,c
 19355  006104  EF86  F030         	goto	i2u826_41
 19356  006108  EF88  F030         	goto	i2u826_40
 19357  00610C                     i2u826_41:
 19358  00610C  EF8A  F030         	goto	i2l6650
 19359  006110                     i2u826_40:
 19360  006110  EF1A  F030         	goto	i2l6606
 19361  006114                     i2l6650:
 19362  006114  90D8               	bcf	status,0,c
 19363  006116  320C               	rrcf	(i2__div_to_l_@quot+3)^0,f,c
 19364  006118  320B               	rrcf	(i2__div_to_l_@quot+2)^0,f,c
 19365  00611A  320A               	rrcf	(i2__div_to_l_@quot+1)^0,f,c
 19366  00611C  3209               	rrcf	i2__div_to_l_@quot^0,f,c
 19367  00611E  3E0E               	incfsz	i2__div_to_l_@exp1^0,f,c
 19368  006120  EF8A  F030         	goto	i2l6650
 19369  006124  EFAC  F030         	goto	i2l895
 19370  006128                     i2l6654:
 19371  006128  0E1F               	movlw	31
 19372  00612A  640E               	cpfsgt	i2__div_to_l_@exp1^0,c
 19373  00612C  EF9A  F030         	goto	i2u827_41
 19374  006130  EF9C  F030         	goto	i2u827_40
 19375  006134                     i2u827_41:
 19376  006134  EFA4  F030         	goto	i2l6662
 19377  006138                     i2u827_40:
 19378  006138  EF1A  F030         	goto	i2l6606
 19379  00613C                     i2l6660:
 19380  00613C  90D8               	bcf	status,0,c
 19381  00613E  3609               	rlcf	i2__div_to_l_@quot^0,f,c
 19382  006140  360A               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 19383  006142  360B               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 19384  006144  360C               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 19385  006146  060E               	decf	i2__div_to_l_@exp1^0,f,c
 19386  006148                     i2l6662:
 19387  006148  500E               	movf	i2__div_to_l_@exp1^0,w,c
 19388  00614A  A4D8               	btfss	status,2,c
 19389  00614C  EFAA  F030         	goto	i2u828_41
 19390  006150  EFAC  F030         	goto	i2u828_40
 19391  006154                     i2u828_41:
 19392  006154  EF9E  F030         	goto	i2l6660
 19393  006158                     i2u828_40:
 19394  006158                     i2l895:
 19395  006158  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 19396  00615C  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 19397  006160  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 19398  006164  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 19399  006168                     i2l886:
 19400  006168  0012               	return		;funcret
 19401  00616A                     __end_ofi2__div_to_l_:
 19402                           	callstack 0
 19403                           
 19404 ;; *************** function i2___xxtofl *****************
 19405 ;; Defined at:
 19406 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 19407 ;; Parameters:    Size  Location     Type
 19408 ;;  sign            1    wreg     unsigned char 
 19409 ;;  val             4    0[COMRAM] long 
 19410 ;; Auto vars:     Size  Location     Type
 19411 ;;  sign            1    8[COMRAM] unsigned char 
 19412 ;;  arg             4   10[COMRAM] unsigned long 
 19413 ;;  exp             1    9[COMRAM] unsigned char 
 19414 ;; Return value:  Size  Location     Type
 19415 ;;                  4    0[COMRAM] unsigned char 
 19416 ;; Registers used:
 19417 ;;		wreg, status,2, status,0
 19418 ;; Tracked objects:
 19419 ;;		On entry : 0/0
 19420 ;;		On exit  : 0/0
 19421 ;;		Unchanged: 0/0
 19422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19423 ;;      Params:         4       0       0       0       0       0       0
 19424 ;;      Locals:         6       0       0       0       0       0       0
 19425 ;;      Temps:          4       0       0       0       0       0       0
 19426 ;;      Totals:        14       0       0       0       0       0       0
 19427 ;;Total ram usage:       14 bytes
 19428 ;; Hardware stack levels used:    1
 19429 ;; This function calls:
 19430 ;;		Nothing
 19431 ;; This function is called by:
 19432 ;;		i2_leituraCXI
 19433 ;;		i2_leituraCXS
 19434 ;;		i2_sprintf
 19435 ;; This function uses a non-reentrant model
 19436 ;;
 19437                           
 19438                           	psect	text61
 19439  005920                     __ptext61:
 19440                           	callstack 0
 19441  005920                     i2___xxtofl:
 19442                           	callstack 23
 19443                           
 19444                           ;incstack = 0
 19445                           ;i2___xxtofl@sign stored from wreg
 19446  005920  6E09               	movwf	i2___xxtofl@sign^0,c
 19447  005922  5009               	movf	i2___xxtofl@sign^0,w,c
 19448  005924  B4D8               	btfsc	status,2,c
 19449  005926  EF97  F02C         	goto	i2u880_41
 19450  00592A  EF99  F02C         	goto	i2u880_40
 19451  00592E                     i2u880_41:
 19452  00592E  EFBB  F02C         	goto	i2l1309
 19453  005932                     i2u880_40:
 19454  005932  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 19455  005934  EFA0  F02C         	goto	i2u881_40
 19456  005938  EF9E  F02C         	goto	i2u881_41
 19457  00593C                     i2u881_41:
 19458  00593C  EFBB  F02C         	goto	i2l1309
 19459  005940                     i2u881_40:
 19460  005940  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 19461  005944  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 19462  005948  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 19463  00594C  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 19464  005950  1E05               	comf	??i2___xxtofl^0,f,c
 19465  005952  1E06               	comf	(??i2___xxtofl+1)^0,f,c
 19466  005954  1E07               	comf	(??i2___xxtofl+2)^0,f,c
 19467  005956  1E08               	comf	(??i2___xxtofl+3)^0,f,c
 19468  005958  2A05               	incf	??i2___xxtofl^0,f,c
 19469  00595A  0E00               	movlw	0
 19470  00595C  2206               	addwfc	(??i2___xxtofl+1)^0,f,c
 19471  00595E  2207               	addwfc	(??i2___xxtofl+2)^0,f,c
 19472  005960  2208               	addwfc	(??i2___xxtofl+3)^0,f,c
 19473  005962  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 19474  005966  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 19475  00596A  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 19476  00596E  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 19477  005972  EFC3  F02C         	goto	i2l6976
 19478  005976                     i2l1309:
 19479  005976  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 19480  00597A  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 19481  00597E  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 19482  005982  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 19483  005986                     i2l6976:
 19484  005986  5001               	movf	i2___xxtofl@val^0,w,c
 19485  005988  1002               	iorwf	(i2___xxtofl@val+1)^0,w,c
 19486  00598A  1003               	iorwf	(i2___xxtofl@val+2)^0,w,c
 19487  00598C  1004               	iorwf	(i2___xxtofl@val+3)^0,w,c
 19488  00598E  A4D8               	btfss	status,2,c
 19489  005990  EFCC  F02C         	goto	i2u882_41
 19490  005994  EFCE  F02C         	goto	i2u882_40
 19491  005998                     i2u882_41:
 19492  005998  EFD8  F02C         	goto	i2l6982
 19493  00599C                     i2u882_40:
 19494  00599C  0E00               	movlw	0
 19495  00599E  6E01               	movwf	?i2___xxtofl^0,c
 19496  0059A0  0E00               	movlw	0
 19497  0059A2  6E02               	movwf	(?i2___xxtofl+1)^0,c
 19498  0059A4  0E00               	movlw	0
 19499  0059A6  6E03               	movwf	(?i2___xxtofl+2)^0,c
 19500  0059A8  0E00               	movlw	0
 19501  0059AA  6E04               	movwf	(?i2___xxtofl+3)^0,c
 19502  0059AC  EF69  F02D         	goto	i2l1312
 19503  0059B0                     i2l6982:
 19504  0059B0  0E96               	movlw	150
 19505  0059B2  6E0A               	movwf	i2___xxtofl@exp^0,c
 19506  0059B4  EFE2  F02C         	goto	i2l6986
 19507  0059B8                     i2l6984:
 19508  0059B8  2A0A               	incf	i2___xxtofl@exp^0,f,c
 19509  0059BA  90D8               	bcf	status,0,c
 19510  0059BC  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 19511  0059BE  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 19512  0059C0  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 19513  0059C2  320B               	rrcf	i2___xxtofl@arg^0,f,c
 19514  0059C4                     i2l6986:
 19515  0059C4  0E00               	movlw	0
 19516  0059C6  140B               	andwf	i2___xxtofl@arg^0,w,c
 19517  0059C8  6E05               	movwf	??i2___xxtofl^0,c
 19518  0059CA  0E00               	movlw	0
 19519  0059CC  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 19520  0059CE  6E06               	movwf	(??i2___xxtofl+1)^0,c
 19521  0059D0  0E00               	movlw	0
 19522  0059D2  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 19523  0059D4  6E07               	movwf	(??i2___xxtofl+2)^0,c
 19524  0059D6  0EFE               	movlw	254
 19525  0059D8  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 19526  0059DA  6E08               	movwf	(??i2___xxtofl+3)^0,c
 19527  0059DC  5005               	movf	??i2___xxtofl^0,w,c
 19528  0059DE  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 19529  0059E0  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 19530  0059E2  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 19531  0059E4  A4D8               	btfss	status,2,c
 19532  0059E6  EFF7  F02C         	goto	i2u883_41
 19533  0059EA  EFF9  F02C         	goto	i2u883_40
 19534  0059EE                     i2u883_41:
 19535  0059EE  EFDC  F02C         	goto	i2l6984
 19536  0059F2                     i2u883_40:
 19537  0059F2  EF07  F02D         	goto	i2l1316
 19538  0059F6                     i2l6988:
 19539  0059F6  2A0A               	incf	i2___xxtofl@exp^0,f,c
 19540  0059F8  0E01               	movlw	1
 19541  0059FA  260B               	addwf	i2___xxtofl@arg^0,f,c
 19542  0059FC  0E00               	movlw	0
 19543  0059FE  220C               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 19544  005A00  220D               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 19545  005A02  220E               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 19546  005A04  90D8               	bcf	status,0,c
 19547  005A06  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 19548  005A08  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 19549  005A0A  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 19550  005A0C  320B               	rrcf	i2___xxtofl@arg^0,f,c
 19551  005A0E                     i2l1316:
 19552  005A0E  0E00               	movlw	0
 19553  005A10  140B               	andwf	i2___xxtofl@arg^0,w,c
 19554  005A12  6E05               	movwf	??i2___xxtofl^0,c
 19555  005A14  0E00               	movlw	0
 19556  005A16  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 19557  005A18  6E06               	movwf	(??i2___xxtofl+1)^0,c
 19558  005A1A  0E00               	movlw	0
 19559  005A1C  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 19560  005A1E  6E07               	movwf	(??i2___xxtofl+2)^0,c
 19561  005A20  0EFF               	movlw	255
 19562  005A22  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 19563  005A24  6E08               	movwf	(??i2___xxtofl+3)^0,c
 19564  005A26  5005               	movf	??i2___xxtofl^0,w,c
 19565  005A28  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 19566  005A2A  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 19567  005A2C  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 19568  005A2E  A4D8               	btfss	status,2,c
 19569  005A30  EF1C  F02D         	goto	i2u884_41
 19570  005A34  EF1E  F02D         	goto	i2u884_40
 19571  005A38                     i2u884_41:
 19572  005A38  EFFB  F02C         	goto	i2l6988
 19573  005A3C                     i2u884_40:
 19574  005A3C  EF26  F02D         	goto	i2l6996
 19575  005A40                     i2l6994:
 19576  005A40  060A               	decf	i2___xxtofl@exp^0,f,c
 19577  005A42  90D8               	bcf	status,0,c
 19578  005A44  360B               	rlcf	i2___xxtofl@arg^0,f,c
 19579  005A46  360C               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 19580  005A48  360D               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 19581  005A4A  360E               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 19582  005A4C                     i2l6996:
 19583  005A4C  BE0D               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 19584  005A4E  EF2B  F02D         	goto	i2u885_41
 19585  005A52  EF2D  F02D         	goto	i2u885_40
 19586  005A56                     i2u885_41:
 19587  005A56  EF35  F02D         	goto	i2l1323
 19588  005A5A                     i2u885_40:
 19589  005A5A  0E02               	movlw	2
 19590  005A5C  600A               	cpfslt	i2___xxtofl@exp^0,c
 19591  005A5E  EF33  F02D         	goto	i2u886_41
 19592  005A62  EF35  F02D         	goto	i2u886_40
 19593  005A66                     i2u886_41:
 19594  005A66  EF20  F02D         	goto	i2l6994
 19595  005A6A                     i2u886_40:
 19596  005A6A                     i2l1323:
 19597  005A6A  B00A               	btfsc	i2___xxtofl@exp^0,0,c
 19598  005A6C  EF3A  F02D         	goto	i2u887_41
 19599  005A70  EF3C  F02D         	goto	i2u887_40
 19600  005A74                     i2u887_41:
 19601  005A74  EF3D  F02D         	goto	i2l7002
 19602  005A78                     i2u887_40:
 19603  005A78  9E0D               	bcf	(i2___xxtofl@arg+2)^0,7,c
 19604  005A7A                     i2l7002:
 19605  005A7A  90D8               	bcf	status,0,c
 19606  005A7C  320A               	rrcf	i2___xxtofl@exp^0,f,c
 19607  005A7E  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 19608  005A82  6A06               	clrf	(??i2___xxtofl+1)^0,c
 19609  005A84  6A07               	clrf	(??i2___xxtofl+2)^0,c
 19610  005A86  6A08               	clrf	(??i2___xxtofl+3)^0,c
 19611  005A88  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 19612  005A8C  6A07               	clrf	(??i2___xxtofl+2)^0,c
 19613  005A8E  6A06               	clrf	(??i2___xxtofl+1)^0,c
 19614  005A90  6A05               	clrf	??i2___xxtofl^0,c
 19615  005A92  5005               	movf	??i2___xxtofl^0,w,c
 19616  005A94  120B               	iorwf	i2___xxtofl@arg^0,f,c
 19617  005A96  5006               	movf	(??i2___xxtofl+1)^0,w,c
 19618  005A98  120C               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 19619  005A9A  5007               	movf	(??i2___xxtofl+2)^0,w,c
 19620  005A9C  120D               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 19621  005A9E  5008               	movf	(??i2___xxtofl+3)^0,w,c
 19622  005AA0  120E               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 19623  005AA2  5009               	movf	i2___xxtofl@sign^0,w,c
 19624  005AA4  B4D8               	btfsc	status,2,c
 19625  005AA6  EF57  F02D         	goto	i2u888_41
 19626  005AAA  EF59  F02D         	goto	i2u888_40
 19627  005AAE                     i2u888_41:
 19628  005AAE  EF61  F02D         	goto	i2l7012
 19629  005AB2                     i2u888_40:
 19630  005AB2  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 19631  005AB4  EF60  F02D         	goto	i2u889_40
 19632  005AB8  EF5E  F02D         	goto	i2u889_41
 19633  005ABC                     i2u889_41:
 19634  005ABC  EF61  F02D         	goto	i2l7012
 19635  005AC0                     i2u889_40:
 19636  005AC0  8E0E               	bsf	(i2___xxtofl@arg+3)^0,7,c
 19637  005AC2                     i2l7012:
 19638  005AC2  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 19639  005AC6  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 19640  005ACA  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 19641  005ACE  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 19642  005AD2                     i2l1312:
 19643  005AD2  0012               	return		;funcret
 19644  005AD4                     __end_ofi2___xxtofl:
 19645                           	callstack 0
 19646                           
 19647 ;; *************** function i2___wmul *****************
 19648 ;; Defined at:
 19649 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 19650 ;; Parameters:    Size  Location     Type
 19651 ;;  multiplier      2    0[COMRAM] unsigned int 
 19652 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19653 ;; Auto vars:     Size  Location     Type
 19654 ;;  product         2    4[COMRAM] unsigned int 
 19655 ;; Return value:  Size  Location     Type
 19656 ;;                  2    0[COMRAM] unsigned int 
 19657 ;; Registers used:
 19658 ;;		wreg, status,2, status,0, prodl, prodh
 19659 ;; Tracked objects:
 19660 ;;		On entry : 0/0
 19661 ;;		On exit  : 0/0
 19662 ;;		Unchanged: 0/0
 19663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19664 ;;      Params:         4       0       0       0       0       0       0
 19665 ;;      Locals:         2       0       0       0       0       0       0
 19666 ;;      Temps:          0       0       0       0       0       0       0
 19667 ;;      Totals:         6       0       0       0       0       0       0
 19668 ;;Total ram usage:        6 bytes
 19669 ;; Hardware stack levels used:    1
 19670 ;; This function calls:
 19671 ;;		Nothing
 19672 ;; This function is called by:
 19673 ;;		i2_sprintf
 19674 ;; This function uses a non-reentrant model
 19675 ;;
 19676                           
 19677                           	psect	text62
 19678  0000A6                     __ptext62:
 19679                           	callstack 0
 19680  0000A6                     i2___wmul:
 19681                           	callstack 23
 19682  0000A6  5001               	movf	i2___wmul@multiplier^0,w,c
 19683  0000A8  0203               	mulwf	i2___wmul@multiplicand^0,c
 19684  0000AA  CFF3 F005          	movff	prodl,i2___wmul@product
 19685  0000AE  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19686  0000B2  5001               	movf	i2___wmul@multiplier^0,w,c
 19687  0000B4  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 19688  0000B6  50F3               	movf	243,w,c
 19689  0000B8  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19690  0000BA  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 19691  0000BC  0203               	mulwf	i2___wmul@multiplicand^0,c
 19692  0000BE  50F3               	movf	243,w,c
 19693  0000C0  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19694  0000C2  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19695  0000C6  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19696  0000CA  0012               	return		;funcret
 19697  0000CC                     __end_ofi2___wmul:
 19698                           	callstack 0
 19699                           
 19700 ;; *************** function i2___llmod *****************
 19701 ;; Defined at:
 19702 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;  dividend        4   13[COMRAM] unsigned long 
 19705 ;;  divisor         4   17[COMRAM] unsigned long 
 19706 ;; Auto vars:     Size  Location     Type
 19707 ;;  counter         1   21[COMRAM] unsigned char 
 19708 ;; Return value:  Size  Location     Type
 19709 ;;                  4   13[COMRAM] unsigned long 
 19710 ;; Registers used:
 19711 ;;		wreg, status,2, status,0
 19712 ;; Tracked objects:
 19713 ;;		On entry : 0/0
 19714 ;;		On exit  : 0/0
 19715 ;;		Unchanged: 0/0
 19716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19717 ;;      Params:         8       0       0       0       0       0       0
 19718 ;;      Locals:         1       0       0       0       0       0       0
 19719 ;;      Temps:          0       0       0       0       0       0       0
 19720 ;;      Totals:         9       0       0       0       0       0       0
 19721 ;;Total ram usage:        9 bytes
 19722 ;; Hardware stack levels used:    1
 19723 ;; This function calls:
 19724 ;;		Nothing
 19725 ;; This function is called by:
 19726 ;;		i2_sprintf
 19727 ;; This function uses a non-reentrant model
 19728 ;;
 19729                           
 19730                           	psect	text63
 19731  007820                     __ptext63:
 19732                           	callstack 0
 19733  007820                     i2___llmod:
 19734                           	callstack 23
 19735  007820  5012               	movf	i2___llmod@divisor^0,w,c
 19736  007822  1013               	iorwf	(i2___llmod@divisor+1)^0,w,c
 19737  007824  1014               	iorwf	(i2___llmod@divisor+2)^0,w,c
 19738  007826  1015               	iorwf	(i2___llmod@divisor+3)^0,w,c
 19739  007828  B4D8               	btfsc	status,2,c
 19740  00782A  EF19  F03C         	goto	i2u854_41
 19741  00782E  EF1B  F03C         	goto	i2u854_40
 19742  007832                     i2u854_41:
 19743  007832  EF4B  F03C         	goto	i2l1074
 19744  007836                     i2u854_40:
 19745  007836  0E01               	movlw	1
 19746  007838  6E16               	movwf	i2___llmod@counter^0,c
 19747  00783A  EF25  F03C         	goto	i2l6816
 19748  00783E                     i2l6814:
 19749  00783E  90D8               	bcf	status,0,c
 19750  007840  3612               	rlcf	i2___llmod@divisor^0,f,c
 19751  007842  3613               	rlcf	(i2___llmod@divisor+1)^0,f,c
 19752  007844  3614               	rlcf	(i2___llmod@divisor+2)^0,f,c
 19753  007846  3615               	rlcf	(i2___llmod@divisor+3)^0,f,c
 19754  007848  2A16               	incf	i2___llmod@counter^0,f,c
 19755  00784A                     i2l6816:
 19756  00784A  AE15               	btfss	(i2___llmod@divisor+3)^0,7,c
 19757  00784C  EF2A  F03C         	goto	i2u855_41
 19758  007850  EF2C  F03C         	goto	i2u855_40
 19759  007854                     i2u855_41:
 19760  007854  EF1F  F03C         	goto	i2l6814
 19761  007858                     i2u855_40:
 19762  007858                     i2l6818:
 19763  007858  5012               	movf	i2___llmod@divisor^0,w,c
 19764  00785A  5C0E               	subwf	i2___llmod@dividend^0,w,c
 19765  00785C  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 19766  00785E  580F               	subwfb	(i2___llmod@dividend+1)^0,w,c
 19767  007860  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 19768  007862  5810               	subwfb	(i2___llmod@dividend+2)^0,w,c
 19769  007864  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 19770  007866  5811               	subwfb	(i2___llmod@dividend+3)^0,w,c
 19771  007868  A0D8               	btfss	status,0,c
 19772  00786A  EF39  F03C         	goto	i2u856_41
 19773  00786E  EF3B  F03C         	goto	i2u856_40
 19774  007872                     i2u856_41:
 19775  007872  EF43  F03C         	goto	i2l6822
 19776  007876                     i2u856_40:
 19777  007876  5012               	movf	i2___llmod@divisor^0,w,c
 19778  007878  5E0E               	subwf	i2___llmod@dividend^0,f,c
 19779  00787A  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 19780  00787C  5A0F               	subwfb	(i2___llmod@dividend+1)^0,f,c
 19781  00787E  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 19782  007880  5A10               	subwfb	(i2___llmod@dividend+2)^0,f,c
 19783  007882  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 19784  007884  5A11               	subwfb	(i2___llmod@dividend+3)^0,f,c
 19785  007886                     i2l6822:
 19786  007886  90D8               	bcf	status,0,c
 19787  007888  3215               	rrcf	(i2___llmod@divisor+3)^0,f,c
 19788  00788A  3214               	rrcf	(i2___llmod@divisor+2)^0,f,c
 19789  00788C  3213               	rrcf	(i2___llmod@divisor+1)^0,f,c
 19790  00788E  3212               	rrcf	i2___llmod@divisor^0,f,c
 19791  007890  2E16               	decfsz	i2___llmod@counter^0,f,c
 19792  007892  EF2C  F03C         	goto	i2l6818
 19793  007896                     i2l1074:
 19794  007896  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 19795  00789A  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 19796  00789E  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 19797  0078A2  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 19798  0078A6  0012               	return		;funcret
 19799  0078A8                     __end_ofi2___llmod:
 19800                           	callstack 0
 19801                           
 19802 ;; *************** function i2___lldiv *****************
 19803 ;; Defined at:
 19804 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 19805 ;; Parameters:    Size  Location     Type
 19806 ;;  dividend        4    0[COMRAM] unsigned long 
 19807 ;;  divisor         4    4[COMRAM] unsigned long 
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;  quotient        4    8[COMRAM] unsigned long 
 19810 ;;  counter         1   12[COMRAM] unsigned char 
 19811 ;; Return value:  Size  Location     Type
 19812 ;;                  4    0[COMRAM] unsigned long 
 19813 ;; Registers used:
 19814 ;;		wreg, status,2, status,0
 19815 ;; Tracked objects:
 19816 ;;		On entry : 0/0
 19817 ;;		On exit  : 0/0
 19818 ;;		Unchanged: 0/0
 19819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19820 ;;      Params:         8       0       0       0       0       0       0
 19821 ;;      Locals:         5       0       0       0       0       0       0
 19822 ;;      Temps:          0       0       0       0       0       0       0
 19823 ;;      Totals:        13       0       0       0       0       0       0
 19824 ;;Total ram usage:       13 bytes
 19825 ;; Hardware stack levels used:    1
 19826 ;; This function calls:
 19827 ;;		Nothing
 19828 ;; This function is called by:
 19829 ;;		i2_sprintf
 19830 ;; This function uses a non-reentrant model
 19831 ;;
 19832                           
 19833                           	psect	text64
 19834  007654                     __ptext64:
 19835                           	callstack 0
 19836  007654                     i2___lldiv:
 19837                           	callstack 23
 19838  007654  0E00               	movlw	0
 19839  007656  6E09               	movwf	i2___lldiv@quotient^0,c
 19840  007658  0E00               	movlw	0
 19841  00765A  6E0A               	movwf	(i2___lldiv@quotient+1)^0,c
 19842  00765C  0E00               	movlw	0
 19843  00765E  6E0B               	movwf	(i2___lldiv@quotient+2)^0,c
 19844  007660  0E00               	movlw	0
 19845  007662  6E0C               	movwf	(i2___lldiv@quotient+3)^0,c
 19846  007664  5005               	movf	i2___lldiv@divisor^0,w,c
 19847  007666  1006               	iorwf	(i2___lldiv@divisor+1)^0,w,c
 19848  007668  1007               	iorwf	(i2___lldiv@divisor+2)^0,w,c
 19849  00766A  1008               	iorwf	(i2___lldiv@divisor+3)^0,w,c
 19850  00766C  B4D8               	btfsc	status,2,c
 19851  00766E  EF3B  F03B         	goto	i2u819_41
 19852  007672  EF3D  F03B         	goto	i2u819_40
 19853  007676                     i2u819_41:
 19854  007676  EF73  F03B         	goto	i2l659
 19855  00767A                     i2u819_40:
 19856  00767A  0E01               	movlw	1
 19857  00767C  6E0D               	movwf	i2___lldiv@counter^0,c
 19858  00767E  EF47  F03B         	goto	i2l6590
 19859  007682                     i2l6588:
 19860  007682  90D8               	bcf	status,0,c
 19861  007684  3605               	rlcf	i2___lldiv@divisor^0,f,c
 19862  007686  3606               	rlcf	(i2___lldiv@divisor+1)^0,f,c
 19863  007688  3607               	rlcf	(i2___lldiv@divisor+2)^0,f,c
 19864  00768A  3608               	rlcf	(i2___lldiv@divisor+3)^0,f,c
 19865  00768C  2A0D               	incf	i2___lldiv@counter^0,f,c
 19866  00768E                     i2l6590:
 19867  00768E  AE08               	btfss	(i2___lldiv@divisor+3)^0,7,c
 19868  007690  EF4C  F03B         	goto	i2u820_41
 19869  007694  EF4E  F03B         	goto	i2u820_40
 19870  007698                     i2u820_41:
 19871  007698  EF41  F03B         	goto	i2l6588
 19872  00769C                     i2u820_40:
 19873  00769C                     i2l6592:
 19874  00769C  90D8               	bcf	status,0,c
 19875  00769E  3609               	rlcf	i2___lldiv@quotient^0,f,c
 19876  0076A0  360A               	rlcf	(i2___lldiv@quotient+1)^0,f,c
 19877  0076A2  360B               	rlcf	(i2___lldiv@quotient+2)^0,f,c
 19878  0076A4  360C               	rlcf	(i2___lldiv@quotient+3)^0,f,c
 19879  0076A6  5005               	movf	i2___lldiv@divisor^0,w,c
 19880  0076A8  5C01               	subwf	i2___lldiv@dividend^0,w,c
 19881  0076AA  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 19882  0076AC  5802               	subwfb	(i2___lldiv@dividend+1)^0,w,c
 19883  0076AE  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 19884  0076B0  5803               	subwfb	(i2___lldiv@dividend+2)^0,w,c
 19885  0076B2  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 19886  0076B4  5804               	subwfb	(i2___lldiv@dividend+3)^0,w,c
 19887  0076B6  A0D8               	btfss	status,0,c
 19888  0076B8  EF60  F03B         	goto	i2u821_41
 19889  0076BC  EF62  F03B         	goto	i2u821_40
 19890  0076C0                     i2u821_41:
 19891  0076C0  EF6B  F03B         	goto	i2l6600
 19892  0076C4                     i2u821_40:
 19893  0076C4  5005               	movf	i2___lldiv@divisor^0,w,c
 19894  0076C6  5E01               	subwf	i2___lldiv@dividend^0,f,c
 19895  0076C8  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 19896  0076CA  5A02               	subwfb	(i2___lldiv@dividend+1)^0,f,c
 19897  0076CC  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 19898  0076CE  5A03               	subwfb	(i2___lldiv@dividend+2)^0,f,c
 19899  0076D0  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 19900  0076D2  5A04               	subwfb	(i2___lldiv@dividend+3)^0,f,c
 19901  0076D4  8009               	bsf	i2___lldiv@quotient^0,0,c
 19902  0076D6                     i2l6600:
 19903  0076D6  90D8               	bcf	status,0,c
 19904  0076D8  3208               	rrcf	(i2___lldiv@divisor+3)^0,f,c
 19905  0076DA  3207               	rrcf	(i2___lldiv@divisor+2)^0,f,c
 19906  0076DC  3206               	rrcf	(i2___lldiv@divisor+1)^0,f,c
 19907  0076DE  3205               	rrcf	i2___lldiv@divisor^0,f,c
 19908  0076E0  2E0D               	decfsz	i2___lldiv@counter^0,f,c
 19909  0076E2  EF4E  F03B         	goto	i2l6592
 19910  0076E6                     i2l659:
 19911  0076E6  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 19912  0076EA  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 19913  0076EE  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 19914  0076F2  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 19915  0076F6  0012               	return		;funcret
 19916  0076F8                     __end_ofi2___lldiv:
 19917                           	callstack 0
 19918                           
 19919 ;; *************** function i2___fltol *****************
 19920 ;; Defined at:
 19921 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
 19922 ;; Parameters:    Size  Location     Type
 19923 ;;  f1              4   39[COMRAM] unsigned long 
 19924 ;; Auto vars:     Size  Location     Type
 19925 ;;  exp1            1   48[COMRAM] unsigned char 
 19926 ;;  sign1           1   47[COMRAM] unsigned char 
 19927 ;; Return value:  Size  Location     Type
 19928 ;;                  4   39[COMRAM] long 
 19929 ;; Registers used:
 19930 ;;		wreg, status,2, status,0
 19931 ;; Tracked objects:
 19932 ;;		On entry : 0/0
 19933 ;;		On exit  : 0/0
 19934 ;;		Unchanged: 0/0
 19935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19936 ;;      Params:         4       0       0       0       0       0       0
 19937 ;;      Locals:         2       0       0       0       0       0       0
 19938 ;;      Temps:          4       0       0       0       0       0       0
 19939 ;;      Totals:        10       0       0       0       0       0       0
 19940 ;;Total ram usage:       10 bytes
 19941 ;; Hardware stack levels used:    1
 19942 ;; This function calls:
 19943 ;;		Nothing
 19944 ;; This function is called by:
 19945 ;;		i2_sprintf
 19946 ;; This function uses a non-reentrant model
 19947 ;;
 19948                           
 19949                           	psect	text65
 19950  006A8E                     __ptext65:
 19951                           	callstack 0
 19952  006A8E                     i2___fltol:
 19953                           	callstack 23
 19954  006A8E  342A               	rlcf	(i2___fltol@f1+2)^0,w,c
 19955  006A90  342B               	rlcf	(i2___fltol@f1+3)^0,w,c
 19956  006A92  6E31               	movwf	i2___fltol@exp1^0,c
 19957  006A94  5031               	movf	i2___fltol@exp1^0,w,c
 19958  006A96  A4D8               	btfss	status,2,c
 19959  006A98  EF50  F035         	goto	i2u838_41
 19960  006A9C  EF52  F035         	goto	i2u838_40
 19961  006AA0                     i2u838_41:
 19962  006AA0  EF5C  F035         	goto	i2l6716
 19963  006AA4                     i2u838_40:
 19964  006AA4                     i2l6712:
 19965  006AA4  0E00               	movlw	0
 19966  006AA6  6E28               	movwf	?i2___fltol^0,c
 19967  006AA8  0E00               	movlw	0
 19968  006AAA  6E29               	movwf	(?i2___fltol+1)^0,c
 19969  006AAC  0E00               	movlw	0
 19970  006AAE  6E2A               	movwf	(?i2___fltol+2)^0,c
 19971  006AB0  0E00               	movlw	0
 19972  006AB2  6E2B               	movwf	(?i2___fltol+3)^0,c
 19973  006AB4  EFC9  F035         	goto	i2l938
 19974  006AB8                     i2l6716:
 19975  006AB8  C028  F02C         	movff	i2___fltol@f1,??i2___fltol
 19976  006ABC  C029  F02D         	movff	i2___fltol@f1+1,??i2___fltol+1
 19977  006AC0  C02A  F02E         	movff	i2___fltol@f1+2,??i2___fltol+2
 19978  006AC4  C02B  F02F         	movff	i2___fltol@f1+3,??i2___fltol+3
 19979  006AC8  0E20               	movlw	32
 19980  006ACA  EF6C  F035         	goto	i2u839_40
 19981  006ACE                     i2u839_45:
 19982  006ACE  90D8               	bcf	status,0,c
 19983  006AD0  322F               	rrcf	(??i2___fltol+3)^0,f,c
 19984  006AD2  322E               	rrcf	(??i2___fltol+2)^0,f,c
 19985  006AD4  322D               	rrcf	(??i2___fltol+1)^0,f,c
 19986  006AD6  322C               	rrcf	??i2___fltol^0,f,c
 19987  006AD8                     i2u839_40:
 19988  006AD8  2EE8               	decfsz	wreg,f,c
 19989  006ADA  EF67  F035         	goto	i2u839_45
 19990  006ADE  502C               	movf	??i2___fltol^0,w,c
 19991  006AE0  6E30               	movwf	i2___fltol@sign1^0,c
 19992  006AE2  8E2A               	bsf	(i2___fltol@f1+2)^0,7,c
 19993  006AE4  0EFF               	movlw	255
 19994  006AE6  1628               	andwf	i2___fltol@f1^0,f,c
 19995  006AE8  0EFF               	movlw	255
 19996  006AEA  1629               	andwf	(i2___fltol@f1+1)^0,f,c
 19997  006AEC  0EFF               	movlw	255
 19998  006AEE  162A               	andwf	(i2___fltol@f1+2)^0,f,c
 19999  006AF0  0E00               	movlw	0
 20000  006AF2  162B               	andwf	(i2___fltol@f1+3)^0,f,c
 20001  006AF4  0E96               	movlw	150
 20002  006AF6  5E31               	subwf	i2___fltol@exp1^0,f,c
 20003  006AF8  BE31               	btfsc	i2___fltol@exp1^0,7,c
 20004  006AFA  EF83  F035         	goto	i2u840_40
 20005  006AFE  EF81  F035         	goto	i2u840_41
 20006  006B02                     i2u840_41:
 20007  006B02  EF99  F035         	goto	i2l6736
 20008  006B06                     i2u840_40:
 20009  006B06  5031               	movf	i2___fltol@exp1^0,w,c
 20010  006B08  0A80               	xorlw	128
 20011  006B0A  0F97               	addlw	151
 20012  006B0C  B0D8               	btfsc	status,0,c
 20013  006B0E  EF8B  F035         	goto	i2u841_41
 20014  006B12  EF8D  F035         	goto	i2u841_40
 20015  006B16                     i2u841_41:
 20016  006B16  EF8F  F035         	goto	i2l6732
 20017  006B1A                     i2u841_40:
 20018  006B1A  EF52  F035         	goto	i2l6712
 20019  006B1E                     i2l6732:
 20020  006B1E  90D8               	bcf	status,0,c
 20021  006B20  322B               	rrcf	(i2___fltol@f1+3)^0,f,c
 20022  006B22  322A               	rrcf	(i2___fltol@f1+2)^0,f,c
 20023  006B24  3229               	rrcf	(i2___fltol@f1+1)^0,f,c
 20024  006B26  3228               	rrcf	i2___fltol@f1^0,f,c
 20025  006B28  3E31               	incfsz	i2___fltol@exp1^0,f,c
 20026  006B2A  EF8F  F035         	goto	i2l6732
 20027  006B2E  EFB1  F035         	goto	i2l6746
 20028  006B32                     i2l6736:
 20029  006B32  0E1F               	movlw	31
 20030  006B34  6431               	cpfsgt	i2___fltol@exp1^0,c
 20031  006B36  EF9F  F035         	goto	i2u842_41
 20032  006B3A  EFA1  F035         	goto	i2u842_40
 20033  006B3E                     i2u842_41:
 20034  006B3E  EFA9  F035         	goto	i2l6744
 20035  006B42                     i2u842_40:
 20036  006B42  EF52  F035         	goto	i2l6712
 20037  006B46                     i2l6742:
 20038  006B46  90D8               	bcf	status,0,c
 20039  006B48  3628               	rlcf	i2___fltol@f1^0,f,c
 20040  006B4A  3629               	rlcf	(i2___fltol@f1+1)^0,f,c
 20041  006B4C  362A               	rlcf	(i2___fltol@f1+2)^0,f,c
 20042  006B4E  362B               	rlcf	(i2___fltol@f1+3)^0,f,c
 20043  006B50  0631               	decf	i2___fltol@exp1^0,f,c
 20044  006B52                     i2l6744:
 20045  006B52  5031               	movf	i2___fltol@exp1^0,w,c
 20046  006B54  A4D8               	btfss	status,2,c
 20047  006B56  EFAF  F035         	goto	i2u843_41
 20048  006B5A  EFB1  F035         	goto	i2u843_40
 20049  006B5E                     i2u843_41:
 20050  006B5E  EFA3  F035         	goto	i2l6742
 20051  006B62                     i2u843_40:
 20052  006B62                     i2l6746:
 20053  006B62  5030               	movf	i2___fltol@sign1^0,w,c
 20054  006B64  B4D8               	btfsc	status,2,c
 20055  006B66  EFB7  F035         	goto	i2u844_41
 20056  006B6A  EFB9  F035         	goto	i2u844_40
 20057  006B6E                     i2u844_41:
 20058  006B6E  EFC1  F035         	goto	i2l6750
 20059  006B72                     i2u844_40:
 20060  006B72  1E2B               	comf	(i2___fltol@f1+3)^0,f,c
 20061  006B74  1E2A               	comf	(i2___fltol@f1+2)^0,f,c
 20062  006B76  1E29               	comf	(i2___fltol@f1+1)^0,f,c
 20063  006B78  6C28               	negf	i2___fltol@f1^0,c
 20064  006B7A  0E00               	movlw	0
 20065  006B7C  2229               	addwfc	(i2___fltol@f1+1)^0,f,c
 20066  006B7E  222A               	addwfc	(i2___fltol@f1+2)^0,f,c
 20067  006B80  222B               	addwfc	(i2___fltol@f1+3)^0,f,c
 20068  006B82                     i2l6750:
 20069  006B82  C028  F028         	movff	i2___fltol@f1,?i2___fltol
 20070  006B86  C029  F029         	movff	i2___fltol@f1+1,?i2___fltol+1
 20071  006B8A  C02A  F02A         	movff	i2___fltol@f1+2,?i2___fltol+2
 20072  006B8E  C02B  F02B         	movff	i2___fltol@f1+3,?i2___fltol+3
 20073  006B92                     i2l938:
 20074  006B92  0012               	return		;funcret
 20075  006B94                     __end_ofi2___fltol:
 20076                           	callstack 0
 20077                           
 20078 ;; *************** function i2___flsub *****************
 20079 ;; Defined at:
 20080 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 20081 ;; Parameters:    Size  Location     Type
 20082 ;;  b               4   68[COMRAM] long 
 20083 ;;  a               4   72[COMRAM] long 
 20084 ;; Auto vars:     Size  Location     Type
 20085 ;;		None
 20086 ;; Return value:  Size  Location     Type
 20087 ;;                  4   68[COMRAM] long 
 20088 ;; Registers used:
 20089 ;;		wreg, status,2, status,0, cstack
 20090 ;; Tracked objects:
 20091 ;;		On entry : 0/0
 20092 ;;		On exit  : 0/0
 20093 ;;		Unchanged: 0/0
 20094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20095 ;;      Params:         8       0       0       0       0       0       0
 20096 ;;      Locals:         0       0       0       0       0       0       0
 20097 ;;      Temps:          0       0       0       0       0       0       0
 20098 ;;      Totals:         8       0       0       0       0       0       0
 20099 ;;Total ram usage:        8 bytes
 20100 ;; Hardware stack levels used:    1
 20101 ;; Hardware stack levels required when called:    1
 20102 ;; This function calls:
 20103 ;;		i2___fladd
 20104 ;; This function is called by:
 20105 ;;		i2_sprintf
 20106 ;; This function uses a non-reentrant model
 20107 ;;
 20108                           
 20109                           	psect	text66
 20110  007EE6                     __ptext66:
 20111                           	callstack 0
 20112  007EE6                     i2___flsub:
 20113                           	callstack 22
 20114  007EE6  0E00               	movlw	0
 20115  007EE8  1A49               	xorwf	i2___flsub@a^0,f,c
 20116  007EEA  0E00               	movlw	0
 20117  007EEC  1A4A               	xorwf	(i2___flsub@a+1)^0,f,c
 20118  007EEE  0E00               	movlw	0
 20119  007EF0  1A4B               	xorwf	(i2___flsub@a+2)^0,f,c
 20120  007EF2  0E80               	movlw	128
 20121  007EF4  1A4C               	xorwf	(i2___flsub@a+3)^0,f,c
 20122  007EF6  C045  F035         	movff	i2___flsub@b,i2___fladd@b
 20123  007EFA  C046  F036         	movff	i2___flsub@b+1,i2___fladd@b+1
 20124  007EFE  C047  F037         	movff	i2___flsub@b+2,i2___fladd@b+2
 20125  007F02  C048  F038         	movff	i2___flsub@b+3,i2___fladd@b+3
 20126  007F06  C049  F039         	movff	i2___flsub@a,i2___fladd@a
 20127  007F0A  C04A  F03A         	movff	i2___flsub@a+1,i2___fladd@a+1
 20128  007F0E  C04B  F03B         	movff	i2___flsub@a+2,i2___fladd@a+2
 20129  007F12  C04C  F03C         	movff	i2___flsub@a+3,i2___fladd@a+3
 20130  007F16  EC43  F016         	call	i2___fladd	;wreg free
 20131  007F1A  C035  F045         	movff	?i2___fladd,?i2___flsub
 20132  007F1E  C036  F046         	movff	?i2___fladd+1,?i2___flsub+1
 20133  007F22  C037  F047         	movff	?i2___fladd+2,?i2___flsub+2
 20134  007F26  C038  F048         	movff	?i2___fladd+3,?i2___flsub+3
 20135  007F2A  0012               	return		;funcret
 20136  007F2C                     __end_ofi2___flsub:
 20137                           	callstack 0
 20138                           
 20139 ;; *************** function i2___fladd *****************
 20140 ;; Defined at:
 20141 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 20142 ;; Parameters:    Size  Location     Type
 20143 ;;  b               4   52[COMRAM] long 
 20144 ;;  a               4   56[COMRAM] long 
 20145 ;; Auto vars:     Size  Location     Type
 20146 ;;  grs             1   67[COMRAM] unsigned char 
 20147 ;;  bexp            1   66[COMRAM] unsigned char 
 20148 ;;  aexp            1   65[COMRAM] unsigned char 
 20149 ;;  signs           1   64[COMRAM] unsigned char 
 20150 ;; Return value:  Size  Location     Type
 20151 ;;                  4   52[COMRAM] unsigned char 
 20152 ;; Registers used:
 20153 ;;		wreg, status,2, status,0
 20154 ;; Tracked objects:
 20155 ;;		On entry : 0/0
 20156 ;;		On exit  : 0/0
 20157 ;;		Unchanged: 0/0
 20158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20159 ;;      Params:         8       0       0       0       0       0       0
 20160 ;;      Locals:         4       0       0       0       0       0       0
 20161 ;;      Temps:          4       0       0       0       0       0       0
 20162 ;;      Totals:        16       0       0       0       0       0       0
 20163 ;;Total ram usage:       16 bytes
 20164 ;; Hardware stack levels used:    1
 20165 ;; This function calls:
 20166 ;;		Nothing
 20167 ;; This function is called by:
 20168 ;;		i2_sprintf
 20169 ;;		i2___flsub
 20170 ;; This function uses a non-reentrant model
 20171 ;;
 20172                           
 20173                           	psect	text67
 20174  002C86                     __ptext67:
 20175                           	callstack 0
 20176  002C86                     i2___fladd:
 20177                           	callstack 22
 20178  002C86  5038               	movf	(i2___fladd@b+3)^0,w,c
 20179  002C88  0B80               	andlw	128
 20180  002C8A  6E41               	movwf	i2___fladd@signs^0,c
 20181  002C8C  5038               	movf	(i2___fladd@b+3)^0,w,c
 20182  002C8E  2438               	addwf	(i2___fladd@b+3)^0,w,c
 20183  002C90  6E43               	movwf	i2___fladd@bexp^0,c
 20184  002C92  AE37               	btfss	(i2___fladd@b+2)^0,7,c
 20185  002C94  EF4E  F016         	goto	i2u657_41
 20186  002C98  EF50  F016         	goto	i2u657_40
 20187  002C9C                     i2u657_41:
 20188  002C9C  EF51  F016         	goto	i2l5560
 20189  002CA0                     i2u657_40:
 20190  002CA0  8043               	bsf	i2___fladd@bexp^0,0,c
 20191  002CA2                     i2l5560:
 20192  002CA2  5043               	movf	i2___fladd@bexp^0,w,c
 20193  002CA4  B4D8               	btfsc	status,2,c
 20194  002CA6  EF57  F016         	goto	i2u658_41
 20195  002CAA  EF59  F016         	goto	i2u658_40
 20196  002CAE                     i2u658_41:
 20197  002CAE  EF6E  F016         	goto	i2l5570
 20198  002CB2                     i2u658_40:
 20199  002CB2  2843               	incf	i2___fladd@bexp^0,w,c
 20200  002CB4  A4D8               	btfss	status,2,c
 20201  002CB6  EF5F  F016         	goto	i2u659_41
 20202  002CBA  EF61  F016         	goto	i2u659_40
 20203  002CBE                     i2u659_41:
 20204  002CBE  EF69  F016         	goto	i2l5566
 20205  002CC2                     i2u659_40:
 20206  002CC2  0E00               	movlw	0
 20207  002CC4  6E35               	movwf	i2___fladd@b^0,c
 20208  002CC6  0E00               	movlw	0
 20209  002CC8  6E36               	movwf	(i2___fladd@b+1)^0,c
 20210  002CCA  0E00               	movlw	0
 20211  002CCC  6E37               	movwf	(i2___fladd@b+2)^0,c
 20212  002CCE  0E00               	movlw	0
 20213  002CD0  6E38               	movwf	(i2___fladd@b+3)^0,c
 20214  002CD2                     i2l5566:
 20215  002CD2  8E37               	bsf	(i2___fladd@b+2)^0,7,c
 20216  002CD4  0E00               	movlw	0
 20217  002CD6  6E38               	movwf	(i2___fladd@b+3)^0,c
 20218  002CD8  EF76  F016         	goto	i2l5572
 20219  002CDC                     i2l5570:
 20220  002CDC  0E00               	movlw	0
 20221  002CDE  6E35               	movwf	i2___fladd@b^0,c
 20222  002CE0  0E00               	movlw	0
 20223  002CE2  6E36               	movwf	(i2___fladd@b+1)^0,c
 20224  002CE4  0E00               	movlw	0
 20225  002CE6  6E37               	movwf	(i2___fladd@b+2)^0,c
 20226  002CE8  0E00               	movlw	0
 20227  002CEA  6E38               	movwf	(i2___fladd@b+3)^0,c
 20228  002CEC                     i2l5572:
 20229  002CEC  503C               	movf	(i2___fladd@a+3)^0,w,c
 20230  002CEE  0B80               	andlw	128
 20231  002CF0  6E42               	movwf	i2___fladd@aexp^0,c
 20232  002CF2  5041               	movf	i2___fladd@signs^0,w,c
 20233  002CF4  1842               	xorwf	i2___fladd@aexp^0,w,c
 20234  002CF6  B4D8               	btfsc	status,2,c
 20235  002CF8  EF80  F016         	goto	i2u660_41
 20236  002CFC  EF82  F016         	goto	i2u660_40
 20237  002D00                     i2u660_41:
 20238  002D00  EF83  F016         	goto	i2l5578
 20239  002D04                     i2u660_40:
 20240  002D04  8C41               	bsf	i2___fladd@signs^0,6,c
 20241  002D06                     i2l5578:
 20242  002D06  503C               	movf	(i2___fladd@a+3)^0,w,c
 20243  002D08  243C               	addwf	(i2___fladd@a+3)^0,w,c
 20244  002D0A  6E42               	movwf	i2___fladd@aexp^0,c
 20245  002D0C  AE3B               	btfss	(i2___fladd@a+2)^0,7,c
 20246  002D0E  EF8B  F016         	goto	i2u661_41
 20247  002D12  EF8D  F016         	goto	i2u661_40
 20248  002D16                     i2u661_41:
 20249  002D16  EF8E  F016         	goto	i2l5584
 20250  002D1A                     i2u661_40:
 20251  002D1A  8042               	bsf	i2___fladd@aexp^0,0,c
 20252  002D1C                     i2l5584:
 20253  002D1C  5042               	movf	i2___fladd@aexp^0,w,c
 20254  002D1E  B4D8               	btfsc	status,2,c
 20255  002D20  EF94  F016         	goto	i2u662_41
 20256  002D24  EF96  F016         	goto	i2u662_40
 20257  002D28                     i2u662_41:
 20258  002D28  EFAB  F016         	goto	i2l5594
 20259  002D2C                     i2u662_40:
 20260  002D2C  2842               	incf	i2___fladd@aexp^0,w,c
 20261  002D2E  A4D8               	btfss	status,2,c
 20262  002D30  EF9C  F016         	goto	i2u663_41
 20263  002D34  EF9E  F016         	goto	i2u663_40
 20264  002D38                     i2u663_41:
 20265  002D38  EFA6  F016         	goto	i2l5590
 20266  002D3C                     i2u663_40:
 20267  002D3C  0E00               	movlw	0
 20268  002D3E  6E39               	movwf	i2___fladd@a^0,c
 20269  002D40  0E00               	movlw	0
 20270  002D42  6E3A               	movwf	(i2___fladd@a+1)^0,c
 20271  002D44  0E00               	movlw	0
 20272  002D46  6E3B               	movwf	(i2___fladd@a+2)^0,c
 20273  002D48  0E00               	movlw	0
 20274  002D4A  6E3C               	movwf	(i2___fladd@a+3)^0,c
 20275  002D4C                     i2l5590:
 20276  002D4C  8E3B               	bsf	(i2___fladd@a+2)^0,7,c
 20277  002D4E  0E00               	movlw	0
 20278  002D50  6E3C               	movwf	(i2___fladd@a+3)^0,c
 20279  002D52  EFB3  F016         	goto	i2l5596
 20280  002D56                     i2l5594:
 20281  002D56  0E00               	movlw	0
 20282  002D58  6E39               	movwf	i2___fladd@a^0,c
 20283  002D5A  0E00               	movlw	0
 20284  002D5C  6E3A               	movwf	(i2___fladd@a+1)^0,c
 20285  002D5E  0E00               	movlw	0
 20286  002D60  6E3B               	movwf	(i2___fladd@a+2)^0,c
 20287  002D62  0E00               	movlw	0
 20288  002D64  6E3C               	movwf	(i2___fladd@a+3)^0,c
 20289  002D66                     i2l5596:
 20290  002D66  5043               	movf	i2___fladd@bexp^0,w,c
 20291  002D68  5C42               	subwf	i2___fladd@aexp^0,w,c
 20292  002D6A  B0D8               	btfsc	status,0,c
 20293  002D6C  EFBA  F016         	goto	i2u664_41
 20294  002D70  EFBC  F016         	goto	i2u664_40
 20295  002D74                     i2u664_41:
 20296  002D74  EFE3  F016         	goto	i2l5632
 20297  002D78                     i2u664_40:
 20298  002D78  AC41               	btfss	i2___fladd@signs^0,6,c
 20299  002D7A  EFC1  F016         	goto	i2u665_41
 20300  002D7E  EFC3  F016         	goto	i2u665_40
 20301  002D82                     i2u665_41:
 20302  002D82  EFC5  F016         	goto	i2l5602
 20303  002D86                     i2u665_40:
 20304  002D86  0E80               	movlw	128
 20305  002D88  1A41               	xorwf	i2___fladd@signs^0,f,c
 20306  002D8A                     i2l5602:
 20307  002D8A  C043  F044         	movff	i2___fladd@bexp,i2___fladd@grs
 20308  002D8E  C042  F043         	movff	i2___fladd@aexp,i2___fladd@bexp
 20309  002D92  C044  F042         	movff	i2___fladd@grs,i2___fladd@aexp
 20310  002D96  C035  F044         	movff	i2___fladd@b,i2___fladd@grs
 20311  002D9A  C039  F035         	movff	i2___fladd@a,i2___fladd@b
 20312  002D9E  C044  F039         	movff	i2___fladd@grs,i2___fladd@a
 20313  002DA2  C036  F044         	movff	i2___fladd@b+1,i2___fladd@grs
 20314  002DA6  C03A  F036         	movff	i2___fladd@a+1,i2___fladd@b+1
 20315  002DAA  C044  F03A         	movff	i2___fladd@grs,i2___fladd@a+1
 20316  002DAE  C037  F044         	movff	i2___fladd@b+2,i2___fladd@grs
 20317  002DB2  C03B  F037         	movff	i2___fladd@a+2,i2___fladd@b+2
 20318  002DB6  C044  F03B         	movff	i2___fladd@grs,i2___fladd@a+2
 20319  002DBA  C038  F044         	movff	i2___fladd@b+3,i2___fladd@grs
 20320  002DBE  C03C  F038         	movff	i2___fladd@a+3,i2___fladd@b+3
 20321  002DC2  C044  F03C         	movff	i2___fladd@grs,i2___fladd@a+3
 20322  002DC6                     i2l5632:
 20323  002DC6  0E00               	movlw	0
 20324  002DC8  6E44               	movwf	i2___fladd@grs^0,c
 20325  002DCA  5043               	movf	i2___fladd@bexp^0,w,c
 20326  002DCC  C042  F03D         	movff	i2___fladd@aexp,??i2___fladd
 20327  002DD0  6A3E               	clrf	(??i2___fladd+1)^0,c
 20328  002DD2  5E3D               	subwf	??i2___fladd^0,f,c
 20329  002DD4  0E00               	movlw	0
 20330  002DD6  5A3E               	subwfb	(??i2___fladd+1)^0,f,c
 20331  002DD8  BE3E               	btfsc	(??i2___fladd+1)^0,7,c
 20332  002DDA  EFF8  F016         	goto	i2u666_41
 20333  002DDE  503E               	movf	(??i2___fladd+1)^0,w,c
 20334  002DE0  E109               	bnz	i2u666_40
 20335  002DE2  0E1A               	movlw	26
 20336  002DE4  5C3D               	subwf	??i2___fladd^0,w,c
 20337  002DE6  A0D8               	btfss	status,0,c
 20338  002DE8  EFF8  F016         	goto	i2u666_41
 20339  002DEC  EFFA  F016         	goto	i2u666_40
 20340  002DF0                     i2u666_41:
 20341  002DF0  EF31  F017         	goto	i2l1183
 20342  002DF4                     i2u666_40:
 20343  002DF4  5035               	movf	i2___fladd@b^0,w,c
 20344  002DF6  1036               	iorwf	(i2___fladd@b+1)^0,w,c
 20345  002DF8  1037               	iorwf	(i2___fladd@b+2)^0,w,c
 20346  002DFA  1038               	iorwf	(i2___fladd@b+3)^0,w,c
 20347  002DFC  A4D8               	btfss	status,2,c
 20348  002DFE  EF03  F017         	goto	i2u667_41
 20349  002E02  EF06  F017         	goto	i2u667_40
 20350  002E06                     i2u667_41:
 20351  002E06  0E01               	movlw	1
 20352  002E08  EF07  F017         	goto	i2u668_40
 20353  002E0C                     i2u667_40:
 20354  002E0C  0E00               	movlw	0
 20355  002E0E                     i2u668_40:
 20356  002E0E  6E44               	movwf	i2___fladd@grs^0,c
 20357  002E10  0E00               	movlw	0
 20358  002E12  6E35               	movwf	i2___fladd@b^0,c
 20359  002E14  0E00               	movlw	0
 20360  002E16  6E36               	movwf	(i2___fladd@b+1)^0,c
 20361  002E18  0E00               	movlw	0
 20362  002E1A  6E37               	movwf	(i2___fladd@b+2)^0,c
 20363  002E1C  0E00               	movlw	0
 20364  002E1E  6E38               	movwf	(i2___fladd@b+3)^0,c
 20365  002E20  C042  F043         	movff	i2___fladd@aexp,i2___fladd@bexp
 20366  002E24  EF3A  F017         	goto	i2l1182
 20367  002E28                     i2l1184:
 20368  002E28  A044               	btfss	i2___fladd@grs^0,0,c
 20369  002E2A  EF19  F017         	goto	i2u669_41
 20370  002E2E  EF1B  F017         	goto	i2u669_40
 20371  002E32                     i2u669_41:
 20372  002E32  EF21  F017         	goto	i2l5644
 20373  002E36                     i2u669_40:
 20374  002E36  90D8               	bcf	status,0,c
 20375  002E38  3044               	rrcf	i2___fladd@grs^0,w,c
 20376  002E3A  0901               	iorlw	1
 20377  002E3C  6E44               	movwf	i2___fladd@grs^0,c
 20378  002E3E  EF23  F017         	goto	i2l5646
 20379  002E42                     i2l5644:
 20380  002E42  90D8               	bcf	status,0,c
 20381  002E44  3244               	rrcf	i2___fladd@grs^0,f,c
 20382  002E46                     i2l5646:
 20383  002E46  A035               	btfss	i2___fladd@b^0,0,c
 20384  002E48  EF28  F017         	goto	i2u670_41
 20385  002E4C  EF2A  F017         	goto	i2u670_40
 20386  002E50                     i2u670_41:
 20387  002E50  EF2B  F017         	goto	i2l5650
 20388  002E54                     i2u670_40:
 20389  002E54  8E44               	bsf	i2___fladd@grs^0,7,c
 20390  002E56                     i2l5650:
 20391  002E56  3438               	rlcf	(i2___fladd@b+3)^0,w,c
 20392  002E58  3238               	rrcf	(i2___fladd@b+3)^0,f,c
 20393  002E5A  3237               	rrcf	(i2___fladd@b+2)^0,f,c
 20394  002E5C  3236               	rrcf	(i2___fladd@b+1)^0,f,c
 20395  002E5E  3235               	rrcf	i2___fladd@b^0,f,c
 20396  002E60  2A43               	incf	i2___fladd@bexp^0,f,c
 20397  002E62                     i2l1183:
 20398  002E62  5042               	movf	i2___fladd@aexp^0,w,c
 20399  002E64  5C43               	subwf	i2___fladd@bexp^0,w,c
 20400  002E66  A0D8               	btfss	status,0,c
 20401  002E68  EF38  F017         	goto	i2u671_41
 20402  002E6C  EF3A  F017         	goto	i2u671_40
 20403  002E70                     i2u671_41:
 20404  002E70  EF14  F017         	goto	i2l1184
 20405  002E74                     i2u671_40:
 20406  002E74                     i2l1182:
 20407  002E74  BC41               	btfsc	i2___fladd@signs^0,6,c
 20408  002E76  EF3F  F017         	goto	i2u672_41
 20409  002E7A  EF41  F017         	goto	i2u672_40
 20410  002E7E                     i2u672_41:
 20411  002E7E  EF81  F017         	goto	i2l5678
 20412  002E82                     i2u672_40:
 20413  002E82  5043               	movf	i2___fladd@bexp^0,w,c
 20414  002E84  A4D8               	btfss	status,2,c
 20415  002E86  EF47  F017         	goto	i2u673_41
 20416  002E8A  EF49  F017         	goto	i2u673_40
 20417  002E8E                     i2u673_41:
 20418  002E8E  EF53  F017         	goto	i2l5660
 20419  002E92                     i2u673_40:
 20420  002E92  0E00               	movlw	0
 20421  002E94  6E35               	movwf	?i2___fladd^0,c
 20422  002E96  0E00               	movlw	0
 20423  002E98  6E36               	movwf	(?i2___fladd+1)^0,c
 20424  002E9A  0E00               	movlw	0
 20425  002E9C  6E37               	movwf	(?i2___fladd+2)^0,c
 20426  002E9E  0E00               	movlw	0
 20427  002EA0  6E38               	movwf	(?i2___fladd+3)^0,c
 20428  002EA2  EFA2  F018         	goto	i2l1191
 20429  002EA6                     i2l5660:
 20430  002EA6  5039               	movf	i2___fladd@a^0,w,c
 20431  002EA8  2635               	addwf	i2___fladd@b^0,f,c
 20432  002EAA  503A               	movf	(i2___fladd@a+1)^0,w,c
 20433  002EAC  2236               	addwfc	(i2___fladd@b+1)^0,f,c
 20434  002EAE  503B               	movf	(i2___fladd@a+2)^0,w,c
 20435  002EB0  2237               	addwfc	(i2___fladd@b+2)^0,f,c
 20436  002EB2  503C               	movf	(i2___fladd@a+3)^0,w,c
 20437  002EB4  2238               	addwfc	(i2___fladd@b+3)^0,f,c
 20438  002EB6  A038               	btfss	(i2___fladd@b+3)^0,0,c
 20439  002EB8  EF60  F017         	goto	i2u674_41
 20440  002EBC  EF62  F017         	goto	i2u674_40
 20441  002EC0                     i2u674_41:
 20442  002EC0  EF0E  F018         	goto	i2l5714
 20443  002EC4                     i2u674_40:
 20444  002EC4  A044               	btfss	i2___fladd@grs^0,0,c
 20445  002EC6  EF67  F017         	goto	i2u675_41
 20446  002ECA  EF69  F017         	goto	i2u675_40
 20447  002ECE                     i2u675_41:
 20448  002ECE  EF6F  F017         	goto	i2l5668
 20449  002ED2                     i2u675_40:
 20450  002ED2  90D8               	bcf	status,0,c
 20451  002ED4  3044               	rrcf	i2___fladd@grs^0,w,c
 20452  002ED6  0901               	iorlw	1
 20453  002ED8  6E44               	movwf	i2___fladd@grs^0,c
 20454  002EDA  EF71  F017         	goto	i2l5670
 20455  002EDE                     i2l5668:
 20456  002EDE  90D8               	bcf	status,0,c
 20457  002EE0  3244               	rrcf	i2___fladd@grs^0,f,c
 20458  002EE2                     i2l5670:
 20459  002EE2  A035               	btfss	i2___fladd@b^0,0,c
 20460  002EE4  EF76  F017         	goto	i2u676_41
 20461  002EE8  EF78  F017         	goto	i2u676_40
 20462  002EEC                     i2u676_41:
 20463  002EEC  EF79  F017         	goto	i2l5674
 20464  002EF0                     i2u676_40:
 20465  002EF0  8E44               	bsf	i2___fladd@grs^0,7,c
 20466  002EF2                     i2l5674:
 20467  002EF2  3438               	rlcf	(i2___fladd@b+3)^0,w,c
 20468  002EF4  3238               	rrcf	(i2___fladd@b+3)^0,f,c
 20469  002EF6  3237               	rrcf	(i2___fladd@b+2)^0,f,c
 20470  002EF8  3236               	rrcf	(i2___fladd@b+1)^0,f,c
 20471  002EFA  3235               	rrcf	i2___fladd@b^0,f,c
 20472  002EFC  2A43               	incf	i2___fladd@bexp^0,f,c
 20473  002EFE  EF0E  F018         	goto	i2l5714
 20474  002F02                     i2l5678:
 20475  002F02  5039               	movf	i2___fladd@a^0,w,c
 20476  002F04  5C35               	subwf	i2___fladd@b^0,w,c
 20477  002F06  503A               	movf	(i2___fladd@a+1)^0,w,c
 20478  002F08  5836               	subwfb	(i2___fladd@b+1)^0,w,c
 20479  002F0A  503B               	movf	(i2___fladd@a+2)^0,w,c
 20480  002F0C  5837               	subwfb	(i2___fladd@b+2)^0,w,c
 20481  002F0E  5038               	movf	(i2___fladd@b+3)^0,w,c
 20482  002F10  0A80               	xorlw	128
 20483  002F12  6E3D               	movwf	??i2___fladd^0,c
 20484  002F14  503C               	movf	(i2___fladd@a+3)^0,w,c
 20485  002F16  0A80               	xorlw	128
 20486  002F18  583D               	subwfb	??i2___fladd^0,w,c
 20487  002F1A  B0D8               	btfsc	status,0,c
 20488  002F1C  EF92  F017         	goto	i2u677_41
 20489  002F20  EF94  F017         	goto	i2u677_40
 20490  002F24                     i2u677_41:
 20491  002F24  EFBF  F017         	goto	i2l5688
 20492  002F28                     i2u677_40:
 20493  002F28  5035               	movf	i2___fladd@b^0,w,c
 20494  002F2A  5C39               	subwf	i2___fladd@a^0,w,c
 20495  002F2C  6E3D               	movwf	??i2___fladd^0,c
 20496  002F2E  5036               	movf	(i2___fladd@b+1)^0,w,c
 20497  002F30  583A               	subwfb	(i2___fladd@a+1)^0,w,c
 20498  002F32  6E3E               	movwf	(??i2___fladd+1)^0,c
 20499  002F34  5037               	movf	(i2___fladd@b+2)^0,w,c
 20500  002F36  583B               	subwfb	(i2___fladd@a+2)^0,w,c
 20501  002F38  6E3F               	movwf	(??i2___fladd+2)^0,c
 20502  002F3A  5038               	movf	(i2___fladd@b+3)^0,w,c
 20503  002F3C  583C               	subwfb	(i2___fladd@a+3)^0,w,c
 20504  002F3E  6E40               	movwf	(??i2___fladd+3)^0,c
 20505  002F40  0EFF               	movlw	255
 20506  002F42  243D               	addwf	??i2___fladd^0,w,c
 20507  002F44  6E35               	movwf	i2___fladd@b^0,c
 20508  002F46  0EFF               	movlw	255
 20509  002F48  203E               	addwfc	(??i2___fladd+1)^0,w,c
 20510  002F4A  6E36               	movwf	(i2___fladd@b+1)^0,c
 20511  002F4C  0EFF               	movlw	255
 20512  002F4E  203F               	addwfc	(??i2___fladd+2)^0,w,c
 20513  002F50  6E37               	movwf	(i2___fladd@b+2)^0,c
 20514  002F52  0EFF               	movlw	255
 20515  002F54  2040               	addwfc	(??i2___fladd+3)^0,w,c
 20516  002F56  6E38               	movwf	(i2___fladd@b+3)^0,c
 20517  002F58  0E80               	movlw	128
 20518  002F5A  1A41               	xorwf	i2___fladd@signs^0,f,c
 20519  002F5C  6C44               	negf	i2___fladd@grs^0,c
 20520  002F5E  5044               	movf	i2___fladd@grs^0,w,c
 20521  002F60  A4D8               	btfss	status,2,c
 20522  002F62  EFB5  F017         	goto	i2u678_41
 20523  002F66  EFB7  F017         	goto	i2u678_40
 20524  002F6A                     i2u678_41:
 20525  002F6A  EFC7  F017         	goto	i2l1199
 20526  002F6E                     i2u678_40:
 20527  002F6E  0E01               	movlw	1
 20528  002F70  2635               	addwf	i2___fladd@b^0,f,c
 20529  002F72  0E00               	movlw	0
 20530  002F74  2236               	addwfc	(i2___fladd@b+1)^0,f,c
 20531  002F76  2237               	addwfc	(i2___fladd@b+2)^0,f,c
 20532  002F78  2238               	addwfc	(i2___fladd@b+3)^0,f,c
 20533  002F7A  EFC7  F017         	goto	i2l1199
 20534  002F7E                     i2l5688:
 20535  002F7E  5039               	movf	i2___fladd@a^0,w,c
 20536  002F80  5E35               	subwf	i2___fladd@b^0,f,c
 20537  002F82  503A               	movf	(i2___fladd@a+1)^0,w,c
 20538  002F84  5A36               	subwfb	(i2___fladd@b+1)^0,f,c
 20539  002F86  503B               	movf	(i2___fladd@a+2)^0,w,c
 20540  002F88  5A37               	subwfb	(i2___fladd@b+2)^0,f,c
 20541  002F8A  503C               	movf	(i2___fladd@a+3)^0,w,c
 20542  002F8C  5A38               	subwfb	(i2___fladd@b+3)^0,f,c
 20543  002F8E                     i2l1199:
 20544  002F8E  5035               	movf	i2___fladd@b^0,w,c
 20545  002F90  1036               	iorwf	(i2___fladd@b+1)^0,w,c
 20546  002F92  1037               	iorwf	(i2___fladd@b+2)^0,w,c
 20547  002F94  1038               	iorwf	(i2___fladd@b+3)^0,w,c
 20548  002F96  A4D8               	btfss	status,2,c
 20549  002F98  EFD0  F017         	goto	i2u679_41
 20550  002F9C  EFD2  F017         	goto	i2u679_40
 20551  002FA0                     i2u679_41:
 20552  002FA0  EF07  F018         	goto	i2l5712
 20553  002FA4                     i2u679_40:
 20554  002FA4  5044               	movf	i2___fladd@grs^0,w,c
 20555  002FA6  A4D8               	btfss	status,2,c
 20556  002FA8  EFD8  F017         	goto	i2u680_41
 20557  002FAC  EFDA  F017         	goto	i2u680_40
 20558  002FB0                     i2u680_41:
 20559  002FB0  EF07  F018         	goto	i2l5712
 20560  002FB4                     i2u680_40:
 20561  002FB4  0E00               	movlw	0
 20562  002FB6  6E35               	movwf	?i2___fladd^0,c
 20563  002FB8  0E00               	movlw	0
 20564  002FBA  6E36               	movwf	(?i2___fladd+1)^0,c
 20565  002FBC  0E00               	movlw	0
 20566  002FBE  6E37               	movwf	(?i2___fladd+2)^0,c
 20567  002FC0  0E00               	movlw	0
 20568  002FC2  6E38               	movwf	(?i2___fladd+3)^0,c
 20569  002FC4  EFA2  F018         	goto	i2l1191
 20570  002FC8                     i2l5696:
 20571  002FC8  90D8               	bcf	status,0,c
 20572  002FCA  3635               	rlcf	i2___fladd@b^0,f,c
 20573  002FCC  3636               	rlcf	(i2___fladd@b+1)^0,f,c
 20574  002FCE  3637               	rlcf	(i2___fladd@b+2)^0,f,c
 20575  002FD0  3638               	rlcf	(i2___fladd@b+3)^0,f,c
 20576  002FD2  AE44               	btfss	i2___fladd@grs^0,7,c
 20577  002FD4  EFEE  F017         	goto	i2u681_41
 20578  002FD8  EFF0  F017         	goto	i2u681_40
 20579  002FDC                     i2u681_41:
 20580  002FDC  EFF1  F017         	goto	i2l5702
 20581  002FE0                     i2u681_40:
 20582  002FE0  8035               	bsf	i2___fladd@b^0,0,c
 20583  002FE2                     i2l5702:
 20584  002FE2  A044               	btfss	i2___fladd@grs^0,0,c
 20585  002FE4  EFF6  F017         	goto	i2u682_41
 20586  002FE8  EFF8  F017         	goto	i2u682_40
 20587  002FEC                     i2u682_41:
 20588  002FEC  EFFC  F017         	goto	i2l5706
 20589  002FF0                     i2u682_40:
 20590  002FF0  80D8               	bsf	status,0,c
 20591  002FF2  3644               	rlcf	i2___fladd@grs^0,f,c
 20592  002FF4  EFFE  F017         	goto	i2l5708
 20593  002FF8                     i2l5706:
 20594  002FF8  90D8               	bcf	status,0,c
 20595  002FFA  3644               	rlcf	i2___fladd@grs^0,f,c
 20596  002FFC                     i2l5708:
 20597  002FFC  5043               	movf	i2___fladd@bexp^0,w,c
 20598  002FFE  B4D8               	btfsc	status,2,c
 20599  003000  EF04  F018         	goto	i2u683_41
 20600  003004  EF06  F018         	goto	i2u683_40
 20601  003008                     i2u683_41:
 20602  003008  EF07  F018         	goto	i2l5712
 20603  00300C                     i2u683_40:
 20604  00300C  0643               	decf	i2___fladd@bexp^0,f,c
 20605  00300E                     i2l5712:
 20606  00300E  AE37               	btfss	(i2___fladd@b+2)^0,7,c
 20607  003010  EF0C  F018         	goto	i2u684_41
 20608  003014  EF0E  F018         	goto	i2u684_40
 20609  003018                     i2u684_41:
 20610  003018  EFE4  F017         	goto	i2l5696
 20611  00301C                     i2u684_40:
 20612  00301C                     i2l5714:
 20613  00301C  0E00               	movlw	0
 20614  00301E  6E42               	movwf	i2___fladd@aexp^0,c
 20615  003020  AE44               	btfss	i2___fladd@grs^0,7,c
 20616  003022  EF15  F018         	goto	i2u685_41
 20617  003026  EF17  F018         	goto	i2u685_40
 20618  00302A                     i2u685_41:
 20619  00302A  EF2F  F018         	goto	i2l1208
 20620  00302E                     i2u685_40:
 20621  00302E  C044  F03D         	movff	i2___fladd@grs,??i2___fladd
 20622  003032  0E7F               	movlw	127
 20623  003034  163D               	andwf	??i2___fladd^0,f,c
 20624  003036  B4D8               	btfsc	status,2,c
 20625  003038  EF20  F018         	goto	i2u686_41
 20626  00303C  EF22  F018         	goto	i2u686_40
 20627  003040                     i2u686_41:
 20628  003040  EF26  F018         	goto	i2l1209
 20629  003044                     i2u686_40:
 20630  003044                     i2l5720:
 20631  003044  0E01               	movlw	1
 20632  003046  6E42               	movwf	i2___fladd@aexp^0,c
 20633  003048  EF2F  F018         	goto	i2l1208
 20634  00304C                     i2l1209:
 20635  00304C  A035               	btfss	i2___fladd@b^0,0,c
 20636  00304E  EF2B  F018         	goto	i2u687_41
 20637  003052  EF2D  F018         	goto	i2u687_40
 20638  003056                     i2u687_41:
 20639  003056  EF2F  F018         	goto	i2l1208
 20640  00305A                     i2u687_40:
 20641  00305A  EF22  F018         	goto	i2l5720
 20642  00305E                     i2l1208:
 20643  00305E  5042               	movf	i2___fladd@aexp^0,w,c
 20644  003060  B4D8               	btfsc	status,2,c
 20645  003062  EF35  F018         	goto	i2u688_41
 20646  003066  EF37  F018         	goto	i2u688_40
 20647  00306A                     i2u688_41:
 20648  00306A  EF62  F018         	goto	i2l5732
 20649  00306E                     i2u688_40:
 20650  00306E  0E01               	movlw	1
 20651  003070  2635               	addwf	i2___fladd@b^0,f,c
 20652  003072  0E00               	movlw	0
 20653  003074  2236               	addwfc	(i2___fladd@b+1)^0,f,c
 20654  003076  2237               	addwfc	(i2___fladd@b+2)^0,f,c
 20655  003078  2238               	addwfc	(i2___fladd@b+3)^0,f,c
 20656  00307A  A038               	btfss	(i2___fladd@b+3)^0,0,c
 20657  00307C  EF42  F018         	goto	i2u689_41
 20658  003080  EF44  F018         	goto	i2u689_40
 20659  003084                     i2u689_41:
 20660  003084  EF62  F018         	goto	i2l5732
 20661  003088                     i2u689_40:
 20662  003088  C035  F03D         	movff	i2___fladd@b,??i2___fladd
 20663  00308C  C036  F03E         	movff	i2___fladd@b+1,??i2___fladd+1
 20664  003090  C037  F03F         	movff	i2___fladd@b+2,??i2___fladd+2
 20665  003094  C038  F040         	movff	i2___fladd@b+3,??i2___fladd+3
 20666  003098  3440               	rlcf	(??i2___fladd+3)^0,w,c
 20667  00309A  3240               	rrcf	(??i2___fladd+3)^0,f,c
 20668  00309C  323F               	rrcf	(??i2___fladd+2)^0,f,c
 20669  00309E  323E               	rrcf	(??i2___fladd+1)^0,f,c
 20670  0030A0  323D               	rrcf	??i2___fladd^0,f,c
 20671  0030A2  C03D  F035         	movff	??i2___fladd,i2___fladd@b
 20672  0030A6  C03E  F036         	movff	??i2___fladd+1,i2___fladd@b+1
 20673  0030AA  C03F  F037         	movff	??i2___fladd+2,i2___fladd@b+2
 20674  0030AE  C040  F038         	movff	??i2___fladd+3,i2___fladd@b+3
 20675  0030B2  2843               	incf	i2___fladd@bexp^0,w,c
 20676  0030B4  B4D8               	btfsc	status,2,c
 20677  0030B6  EF5F  F018         	goto	i2u690_41
 20678  0030BA  EF61  F018         	goto	i2u690_40
 20679  0030BE                     i2u690_41:
 20680  0030BE  EF62  F018         	goto	i2l5732
 20681  0030C2                     i2u690_40:
 20682  0030C2  2A43               	incf	i2___fladd@bexp^0,f,c
 20683  0030C4                     i2l5732:
 20684  0030C4  2843               	incf	i2___fladd@bexp^0,w,c
 20685  0030C6  B4D8               	btfsc	status,2,c
 20686  0030C8  EF68  F018         	goto	i2u691_41
 20687  0030CC  EF6A  F018         	goto	i2u691_40
 20688  0030D0                     i2u691_41:
 20689  0030D0  EF72  F018         	goto	i2l5736
 20690  0030D4                     i2u691_40:
 20691  0030D4  5043               	movf	i2___fladd@bexp^0,w,c
 20692  0030D6  A4D8               	btfss	status,2,c
 20693  0030D8  EF70  F018         	goto	i2u692_41
 20694  0030DC  EF72  F018         	goto	i2u692_40
 20695  0030E0                     i2u692_41:
 20696  0030E0  EF84  F018         	goto	i2l5740
 20697  0030E4                     i2u692_40:
 20698  0030E4                     i2l5736:
 20699  0030E4  0E00               	movlw	0
 20700  0030E6  6E35               	movwf	i2___fladd@b^0,c
 20701  0030E8  0E00               	movlw	0
 20702  0030EA  6E36               	movwf	(i2___fladd@b+1)^0,c
 20703  0030EC  0E00               	movlw	0
 20704  0030EE  6E37               	movwf	(i2___fladd@b+2)^0,c
 20705  0030F0  0E00               	movlw	0
 20706  0030F2  6E38               	movwf	(i2___fladd@b+3)^0,c
 20707  0030F4  5043               	movf	i2___fladd@bexp^0,w,c
 20708  0030F6  A4D8               	btfss	status,2,c
 20709  0030F8  EF80  F018         	goto	i2u693_41
 20710  0030FC  EF82  F018         	goto	i2u693_40
 20711  003100                     i2u693_41:
 20712  003100  EF84  F018         	goto	i2l5740
 20713  003104                     i2u693_40:
 20714  003104  0E00               	movlw	0
 20715  003106  6E41               	movwf	i2___fladd@signs^0,c
 20716  003108                     i2l5740:
 20717  003108  A043               	btfss	i2___fladd@bexp^0,0,c
 20718  00310A  EF89  F018         	goto	i2u694_41
 20719  00310E  EF8B  F018         	goto	i2u694_40
 20720  003112                     i2u694_41:
 20721  003112  EF8E  F018         	goto	i2l5744
 20722  003116                     i2u694_40:
 20723  003116  8E37               	bsf	(i2___fladd@b+2)^0,7,c
 20724  003118  EF8F  F018         	goto	i2l5746
 20725  00311C                     i2l5744:
 20726  00311C  9E37               	bcf	(i2___fladd@b+2)^0,7,c
 20727  00311E                     i2l5746:
 20728  00311E  90D8               	bcf	status,0,c
 20729  003120  3043               	rrcf	i2___fladd@bexp^0,w,c
 20730  003122  6E38               	movwf	(i2___fladd@b+3)^0,c
 20731  003124  AE41               	btfss	i2___fladd@signs^0,7,c
 20732  003126  EF97  F018         	goto	i2u695_41
 20733  00312A  EF99  F018         	goto	i2u695_40
 20734  00312E                     i2u695_41:
 20735  00312E  EF9A  F018         	goto	i2l5752
 20736  003132                     i2u695_40:
 20737  003132  8E38               	bsf	(i2___fladd@b+3)^0,7,c
 20738  003134                     i2l5752:
 20739  003134  C035  F035         	movff	i2___fladd@b,?i2___fladd
 20740  003138  C036  F036         	movff	i2___fladd@b+1,?i2___fladd+1
 20741  00313C  C037  F037         	movff	i2___fladd@b+2,?i2___fladd+2
 20742  003140  C038  F038         	movff	i2___fladd@b+3,?i2___fladd+3
 20743  003144                     i2l1191:
 20744  003144  0012               	return		;funcret
 20745  003146                     __end_ofi2___fladd:
 20746                           	callstack 0
 20747                           
 20748 ;; *************** function i2___flneg *****************
 20749 ;; Defined at:
 20750 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
 20751 ;; Parameters:    Size  Location     Type
 20752 ;;  f1              4    0[COMRAM] unsigned char 
 20753 ;; Auto vars:     Size  Location     Type
 20754 ;;		None
 20755 ;; Return value:  Size  Location     Type
 20756 ;;                  4    0[COMRAM] unsigned char 
 20757 ;; Registers used:
 20758 ;;		wreg, status,2, status,0
 20759 ;; Tracked objects:
 20760 ;;		On entry : 0/0
 20761 ;;		On exit  : 0/0
 20762 ;;		Unchanged: 0/0
 20763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20764 ;;      Params:         4       0       0       0       0       0       0
 20765 ;;      Locals:         0       0       0       0       0       0       0
 20766 ;;      Temps:          0       0       0       0       0       0       0
 20767 ;;      Totals:         4       0       0       0       0       0       0
 20768 ;;Total ram usage:        4 bytes
 20769 ;; Hardware stack levels used:    1
 20770 ;; This function calls:
 20771 ;;		Nothing
 20772 ;; This function is called by:
 20773 ;;		i2_sprintf
 20774 ;; This function uses a non-reentrant model
 20775 ;;
 20776                           
 20777                           	psect	text68
 20778  007FA0                     __ptext68:
 20779                           	callstack 0
 20780  007FA0                     i2___flneg:
 20781                           	callstack 23
 20782  007FA0  5001               	movf	i2___flneg@f1^0,w,c
 20783  007FA2  1002               	iorwf	(i2___flneg@f1+1)^0,w,c
 20784  007FA4  1003               	iorwf	(i2___flneg@f1+2)^0,w,c
 20785  007FA6  1004               	iorwf	(i2___flneg@f1+3)^0,w,c
 20786  007FA8  B4D8               	btfsc	status,2,c
 20787  007FAA  EFD9  F03F         	goto	i2u837_41
 20788  007FAE  EFDB  F03F         	goto	i2u837_40
 20789  007FB2                     i2u837_41:
 20790  007FB2  EFE3  F03F         	goto	i2l6706
 20791  007FB6                     i2u837_40:
 20792  007FB6  0E00               	movlw	0
 20793  007FB8  1A01               	xorwf	i2___flneg@f1^0,f,c
 20794  007FBA  0E00               	movlw	0
 20795  007FBC  1A02               	xorwf	(i2___flneg@f1+1)^0,f,c
 20796  007FBE  0E00               	movlw	0
 20797  007FC0  1A03               	xorwf	(i2___flneg@f1+2)^0,f,c
 20798  007FC2  0E80               	movlw	128
 20799  007FC4  1A04               	xorwf	(i2___flneg@f1+3)^0,f,c
 20800  007FC6                     i2l6706:
 20801  007FC6  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 20802  007FCA  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 20803  007FCE  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 20804  007FD2  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 20805  007FD6  0012               	return		;funcret
 20806  007FD8                     __end_ofi2___flneg:
 20807                           	callstack 0
 20808                           
 20809 ;; *************** function i2___flge *****************
 20810 ;; Defined at:
 20811 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;  ff1             4    0[COMRAM] unsigned char 
 20814 ;;  ff2             4    4[COMRAM] unsigned char 
 20815 ;; Auto vars:     Size  Location     Type
 20816 ;;		None
 20817 ;; Return value:  Size  Location     Type
 20818 ;;		None               void
 20819 ;; Registers used:
 20820 ;;		wreg, status,2, status,0
 20821 ;; Tracked objects:
 20822 ;;		On entry : 0/0
 20823 ;;		On exit  : 0/0
 20824 ;;		Unchanged: 0/0
 20825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20826 ;;      Params:         8       0       0       0       0       0       0
 20827 ;;      Locals:         0       0       0       0       0       0       0
 20828 ;;      Temps:          4       0       0       0       0       0       0
 20829 ;;      Totals:        12       0       0       0       0       0       0
 20830 ;;Total ram usage:       12 bytes
 20831 ;; Hardware stack levels used:    1
 20832 ;; This function calls:
 20833 ;;		Nothing
 20834 ;; This function is called by:
 20835 ;;		i2_sprintf
 20836 ;; This function uses a non-reentrant model
 20837 ;;
 20838                           
 20839                           	psect	text69
 20840  006B94                     __ptext69:
 20841                           	callstack 0
 20842  006B94                     i2___flge:
 20843                           	callstack 23
 20844  006B94  0E00               	movlw	0
 20845  006B96  1401               	andwf	i2___flge@ff1^0,w,c
 20846  006B98  6E09               	movwf	??i2___flge^0,c
 20847  006B9A  0E00               	movlw	0
 20848  006B9C  1402               	andwf	(i2___flge@ff1+1)^0,w,c
 20849  006B9E  6E0A               	movwf	(??i2___flge+1)^0,c
 20850  006BA0  0E80               	movlw	128
 20851  006BA2  1403               	andwf	(i2___flge@ff1+2)^0,w,c
 20852  006BA4  6E0B               	movwf	(??i2___flge+2)^0,c
 20853  006BA6  0E7F               	movlw	127
 20854  006BA8  1404               	andwf	(i2___flge@ff1+3)^0,w,c
 20855  006BAA  6E0C               	movwf	(??i2___flge+3)^0,c
 20856  006BAC  5009               	movf	??i2___flge^0,w,c
 20857  006BAE  100A               	iorwf	(??i2___flge+1)^0,w,c
 20858  006BB0  100B               	iorwf	(??i2___flge+2)^0,w,c
 20859  006BB2  100C               	iorwf	(??i2___flge+3)^0,w,c
 20860  006BB4  A4D8               	btfss	status,2,c
 20861  006BB6  EFDF  F035         	goto	i2u832_41
 20862  006BBA  EFE1  F035         	goto	i2u832_40
 20863  006BBE                     i2u832_41:
 20864  006BBE  EFE9  F035         	goto	i2l6684
 20865  006BC2                     i2u832_40:
 20866  006BC2  0E00               	movlw	0
 20867  006BC4  6E01               	movwf	i2___flge@ff1^0,c
 20868  006BC6  0E00               	movlw	0
 20869  006BC8  6E02               	movwf	(i2___flge@ff1+1)^0,c
 20870  006BCA  0E00               	movlw	0
 20871  006BCC  6E03               	movwf	(i2___flge@ff1+2)^0,c
 20872  006BCE  0E00               	movlw	0
 20873  006BD0  6E04               	movwf	(i2___flge@ff1+3)^0,c
 20874  006BD2                     i2l6684:
 20875  006BD2  0E00               	movlw	0
 20876  006BD4  1405               	andwf	i2___flge@ff2^0,w,c
 20877  006BD6  6E09               	movwf	??i2___flge^0,c
 20878  006BD8  0E00               	movlw	0
 20879  006BDA  1406               	andwf	(i2___flge@ff2+1)^0,w,c
 20880  006BDC  6E0A               	movwf	(??i2___flge+1)^0,c
 20881  006BDE  0E80               	movlw	128
 20882  006BE0  1407               	andwf	(i2___flge@ff2+2)^0,w,c
 20883  006BE2  6E0B               	movwf	(??i2___flge+2)^0,c
 20884  006BE4  0E7F               	movlw	127
 20885  006BE6  1408               	andwf	(i2___flge@ff2+3)^0,w,c
 20886  006BE8  6E0C               	movwf	(??i2___flge+3)^0,c
 20887  006BEA  5009               	movf	??i2___flge^0,w,c
 20888  006BEC  100A               	iorwf	(??i2___flge+1)^0,w,c
 20889  006BEE  100B               	iorwf	(??i2___flge+2)^0,w,c
 20890  006BF0  100C               	iorwf	(??i2___flge+3)^0,w,c
 20891  006BF2  A4D8               	btfss	status,2,c
 20892  006BF4  EFFE  F035         	goto	i2u833_41
 20893  006BF8  EF00  F036         	goto	i2u833_40
 20894  006BFC                     i2u833_41:
 20895  006BFC  EF08  F036         	goto	i2l6688
 20896  006C00                     i2u833_40:
 20897  006C00  0E00               	movlw	0
 20898  006C02  6E05               	movwf	i2___flge@ff2^0,c
 20899  006C04  0E00               	movlw	0
 20900  006C06  6E06               	movwf	(i2___flge@ff2+1)^0,c
 20901  006C08  0E00               	movlw	0
 20902  006C0A  6E07               	movwf	(i2___flge@ff2+2)^0,c
 20903  006C0C  0E00               	movlw	0
 20904  006C0E  6E08               	movwf	(i2___flge@ff2+3)^0,c
 20905  006C10                     i2l6688:
 20906  006C10  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
 20907  006C12  EF0D  F036         	goto	i2u834_41
 20908  006C16  EF0F  F036         	goto	i2u834_40
 20909  006C1A                     i2u834_41:
 20910  006C1A  EF18  F036         	goto	i2l6692
 20911  006C1E                     i2u834_40:
 20912  006C1E  6C01               	negf	i2___flge@ff1^0,c
 20913  006C20  1E02               	comf	(i2___flge@ff1+1)^0,f,c
 20914  006C22  B0D8               	btfsc	status,0,c
 20915  006C24  2A02               	incf	(i2___flge@ff1+1)^0,f,c
 20916  006C26  1E03               	comf	(i2___flge@ff1+2)^0,f,c
 20917  006C28  B0D8               	btfsc	status,0,c
 20918  006C2A  2A03               	incf	(i2___flge@ff1+2)^0,f,c
 20919  006C2C  0E80               	movlw	128
 20920  006C2E  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
 20921  006C30                     i2l6692:
 20922  006C30  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
 20923  006C32  EF1D  F036         	goto	i2u835_41
 20924  006C36  EF1F  F036         	goto	i2u835_40
 20925  006C3A                     i2u835_41:
 20926  006C3A  EF28  F036         	goto	i2l910
 20927  006C3E                     i2u835_40:
 20928  006C3E  6C05               	negf	i2___flge@ff2^0,c
 20929  006C40  1E06               	comf	(i2___flge@ff2+1)^0,f,c
 20930  006C42  B0D8               	btfsc	status,0,c
 20931  006C44  2A06               	incf	(i2___flge@ff2+1)^0,f,c
 20932  006C46  1E07               	comf	(i2___flge@ff2+2)^0,f,c
 20933  006C48  B0D8               	btfsc	status,0,c
 20934  006C4A  2A07               	incf	(i2___flge@ff2+2)^0,f,c
 20935  006C4C  0E80               	movlw	128
 20936  006C4E  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
 20937  006C50                     i2l910:
 20938  006C50  0E00               	movlw	0
 20939  006C52  1A01               	xorwf	i2___flge@ff1^0,f,c
 20940  006C54  0E00               	movlw	0
 20941  006C56  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
 20942  006C58  0E00               	movlw	0
 20943  006C5A  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
 20944  006C5C  0E80               	movlw	128
 20945  006C5E  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
 20946  006C60  0E00               	movlw	0
 20947  006C62  1A05               	xorwf	i2___flge@ff2^0,f,c
 20948  006C64  0E00               	movlw	0
 20949  006C66  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
 20950  006C68  0E00               	movlw	0
 20951  006C6A  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
 20952  006C6C  0E80               	movlw	128
 20953  006C6E  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
 20954  006C70  5005               	movf	i2___flge@ff2^0,w,c
 20955  006C72  5C01               	subwf	i2___flge@ff1^0,w,c
 20956  006C74  5006               	movf	(i2___flge@ff2+1)^0,w,c
 20957  006C76  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
 20958  006C78  5007               	movf	(i2___flge@ff2+2)^0,w,c
 20959  006C7A  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
 20960  006C7C  5008               	movf	(i2___flge@ff2+3)^0,w,c
 20961  006C7E  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
 20962  006C80  B0D8               	btfsc	status,0,c
 20963  006C82  EF45  F036         	goto	i2u836_41
 20964  006C86  EF47  F036         	goto	i2u836_40
 20965  006C8A                     i2u836_41:
 20966  006C8A  EF4A  F036         	goto	i2l6698
 20967  006C8E                     i2u836_40:
 20968  006C8E  90D8               	bcf	status,0,c
 20969  006C90  EF4B  F036         	goto	i2l911
 20970  006C94                     i2l6698:
 20971  006C94  80D8               	bsf	status,0,c
 20972  006C96                     i2l911:
 20973  006C96  0012               	return		;funcret
 20974  006C98                     __end_ofi2___flge:
 20975                           	callstack 0
 20976                           
 20977 ;; *************** function i2___fleq *****************
 20978 ;; Defined at:
 20979 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
 20980 ;; Parameters:    Size  Location     Type
 20981 ;;  ff1             4    0[COMRAM] unsigned char 
 20982 ;;  ff2             4    4[COMRAM] unsigned char 
 20983 ;; Auto vars:     Size  Location     Type
 20984 ;;		None
 20985 ;; Return value:  Size  Location     Type
 20986 ;;		None               void
 20987 ;; Registers used:
 20988 ;;		wreg, status,2, status,0
 20989 ;; Tracked objects:
 20990 ;;		On entry : 0/0
 20991 ;;		On exit  : 0/0
 20992 ;;		Unchanged: 0/0
 20993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20994 ;;      Params:         8       0       0       0       0       0       0
 20995 ;;      Locals:         0       0       0       0       0       0       0
 20996 ;;      Temps:          4       0       0       0       0       0       0
 20997 ;;      Totals:        12       0       0       0       0       0       0
 20998 ;;Total ram usage:       12 bytes
 20999 ;; Hardware stack levels used:    1
 21000 ;; This function calls:
 21001 ;;		Nothing
 21002 ;; This function is called by:
 21003 ;;		i2_sprintf
 21004 ;; This function uses a non-reentrant model
 21005 ;;
 21006                           
 21007                           	psect	text70
 21008  007504                     __ptext70:
 21009                           	callstack 0
 21010  007504                     i2___fleq:
 21011                           	callstack 23
 21012  007504  0E00               	movlw	0
 21013  007506  1401               	andwf	i2___fleq@ff1^0,w,c
 21014  007508  6E09               	movwf	??i2___fleq^0,c
 21015  00750A  0E00               	movlw	0
 21016  00750C  1402               	andwf	(i2___fleq@ff1+1)^0,w,c
 21017  00750E  6E0A               	movwf	(??i2___fleq+1)^0,c
 21018  007510  0E80               	movlw	128
 21019  007512  1403               	andwf	(i2___fleq@ff1+2)^0,w,c
 21020  007514  6E0B               	movwf	(??i2___fleq+2)^0,c
 21021  007516  0E7F               	movlw	127
 21022  007518  1404               	andwf	(i2___fleq@ff1+3)^0,w,c
 21023  00751A  6E0C               	movwf	(??i2___fleq+3)^0,c
 21024  00751C  5009               	movf	??i2___fleq^0,w,c
 21025  00751E  100A               	iorwf	(??i2___fleq+1)^0,w,c
 21026  007520  100B               	iorwf	(??i2___fleq+2)^0,w,c
 21027  007522  100C               	iorwf	(??i2___fleq+3)^0,w,c
 21028  007524  A4D8               	btfss	status,2,c
 21029  007526  EF97  F03A         	goto	i2u829_41
 21030  00752A  EF99  F03A         	goto	i2u829_40
 21031  00752E                     i2u829_41:
 21032  00752E  EFA1  F03A         	goto	i2l6668
 21033  007532                     i2u829_40:
 21034  007532  0E00               	movlw	0
 21035  007534  6E01               	movwf	i2___fleq@ff1^0,c
 21036  007536  0E00               	movlw	0
 21037  007538  6E02               	movwf	(i2___fleq@ff1+1)^0,c
 21038  00753A  0E00               	movlw	0
 21039  00753C  6E03               	movwf	(i2___fleq@ff1+2)^0,c
 21040  00753E  0E00               	movlw	0
 21041  007540  6E04               	movwf	(i2___fleq@ff1+3)^0,c
 21042  007542                     i2l6668:
 21043  007542  0E00               	movlw	0
 21044  007544  1405               	andwf	i2___fleq@ff2^0,w,c
 21045  007546  6E09               	movwf	??i2___fleq^0,c
 21046  007548  0E00               	movlw	0
 21047  00754A  1406               	andwf	(i2___fleq@ff2+1)^0,w,c
 21048  00754C  6E0A               	movwf	(??i2___fleq+1)^0,c
 21049  00754E  0E80               	movlw	128
 21050  007550  1407               	andwf	(i2___fleq@ff2+2)^0,w,c
 21051  007552  6E0B               	movwf	(??i2___fleq+2)^0,c
 21052  007554  0E7F               	movlw	127
 21053  007556  1408               	andwf	(i2___fleq@ff2+3)^0,w,c
 21054  007558  6E0C               	movwf	(??i2___fleq+3)^0,c
 21055  00755A  5009               	movf	??i2___fleq^0,w,c
 21056  00755C  100A               	iorwf	(??i2___fleq+1)^0,w,c
 21057  00755E  100B               	iorwf	(??i2___fleq+2)^0,w,c
 21058  007560  100C               	iorwf	(??i2___fleq+3)^0,w,c
 21059  007562  A4D8               	btfss	status,2,c
 21060  007564  EFB6  F03A         	goto	i2u830_41
 21061  007568  EFB8  F03A         	goto	i2u830_40
 21062  00756C                     i2u830_41:
 21063  00756C  EFC0  F03A         	goto	i2l6672
 21064  007570                     i2u830_40:
 21065  007570  0E00               	movlw	0
 21066  007572  6E05               	movwf	i2___fleq@ff2^0,c
 21067  007574  0E00               	movlw	0
 21068  007576  6E06               	movwf	(i2___fleq@ff2+1)^0,c
 21069  007578  0E00               	movlw	0
 21070  00757A  6E07               	movwf	(i2___fleq@ff2+2)^0,c
 21071  00757C  0E00               	movlw	0
 21072  00757E  6E08               	movwf	(i2___fleq@ff2+3)^0,c
 21073  007580                     i2l6672:
 21074  007580  5005               	movf	i2___fleq@ff2^0,w,c
 21075  007582  1801               	xorwf	i2___fleq@ff1^0,w,c
 21076  007584  E10F               	bnz	i2u831_40
 21077  007586  5006               	movf	(i2___fleq@ff2+1)^0,w,c
 21078  007588  1802               	xorwf	(i2___fleq@ff1+1)^0,w,c
 21079  00758A  E10C               	bnz	i2u831_40
 21080  00758C  5007               	movf	(i2___fleq@ff2+2)^0,w,c
 21081  00758E  1803               	xorwf	(i2___fleq@ff1+2)^0,w,c
 21082  007590  E109               	bnz	i2u831_40
 21083  007592  5008               	movf	(i2___fleq@ff2+3)^0,w,c
 21084  007594  1804               	xorwf	(i2___fleq@ff1+3)^0,w,c
 21085  007596  B4D8               	btfsc	status,2,c
 21086  007598  EFD0  F03A         	goto	i2u831_41
 21087  00759C  EFD2  F03A         	goto	i2u831_40
 21088  0075A0                     i2u831_41:
 21089  0075A0  EFD5  F03A         	goto	i2l6676
 21090  0075A4                     i2u831_40:
 21091  0075A4  90D8               	bcf	status,0,c
 21092  0075A6  EFD6  F03A         	goto	i2l904
 21093  0075AA                     i2l6676:
 21094  0075AA  80D8               	bsf	status,0,c
 21095  0075AC                     i2l904:
 21096  0075AC  0012               	return		;funcret
 21097  0075AE                     __end_ofi2___fleq:
 21098                           	callstack 0
 21099                           
 21100 ;; *************** function i2_adc_amostra *****************
 21101 ;; Defined at:
 21102 ;;		line 44 in file "adc.c"
 21103 ;; Parameters:    Size  Location     Type
 21104 ;;  canal           1    wreg     unsigned char 
 21105 ;; Auto vars:     Size  Location     Type
 21106 ;;  canal           1    6[COMRAM] unsigned char 
 21107 ;; Return value:  Size  Location     Type
 21108 ;;                  2    0[COMRAM] unsigned int 
 21109 ;; Registers used:
 21110 ;;		wreg, status,2, status,0
 21111 ;; Tracked objects:
 21112 ;;		On entry : 0/0
 21113 ;;		On exit  : 0/0
 21114 ;;		Unchanged: 0/0
 21115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21116 ;;      Params:         2       0       0       0       0       0       0
 21117 ;;      Locals:         1       0       0       0       0       0       0
 21118 ;;      Temps:          4       0       0       0       0       0       0
 21119 ;;      Totals:         7       0       0       0       0       0       0
 21120 ;;Total ram usage:        7 bytes
 21121 ;; Hardware stack levels used:    1
 21122 ;; This function calls:
 21123 ;;		Nothing
 21124 ;; This function is called by:
 21125 ;;		_transmitedados
 21126 ;;		i2_leituraCXI
 21127 ;;		i2_leituraCXS
 21128 ;; This function uses a non-reentrant model
 21129 ;;
 21130                           
 21131                           	psect	text71
 21132  007B2E                     __ptext71:
 21133                           	callstack 0
 21134  007B2E                     i2_adc_amostra:
 21135                           	callstack 23
 21136                           
 21137                           ;incstack = 0
 21138                           ;i2adc_amostra@canal stored from wreg
 21139  007B2E  6E07               	movwf	i2adc_amostra@canal^0,c
 21140  007B30                     
 21141                           ;adc.c: 62: switch(canal)
 21142  007B30  EFA6  F03D         	goto	i2l6468
 21143  007B34                     i2l6460:
 21144                           
 21145                           ;adc.c: 65: ADCON0=0b00000001;
 21146  007B34  0E01               	movlw	1
 21147  007B36  6EC2               	movwf	194,c	;volatile
 21148                           
 21149                           ;adc.c: 66: break;
 21150  007B38  EFB5  F03D         	goto	i2l20
 21151  007B3C                     i2l6462:
 21152                           
 21153                           ;adc.c: 68: ADCON0=0b00000101;
 21154  007B3C  0E05               	movlw	5
 21155  007B3E  6EC2               	movwf	194,c	;volatile
 21156                           
 21157                           ;adc.c: 69: break;
 21158  007B40  EFB5  F03D         	goto	i2l20
 21159  007B44                     i2l6464:
 21160                           
 21161                           ;adc.c: 71: ADCON0=0x11;
 21162  007B44  0E11               	movlw	17
 21163  007B46  6EC2               	movwf	194,c	;volatile
 21164                           
 21165                           ;adc.c: 72: break;
 21166  007B48  EFB5  F03D         	goto	i2l20
 21167  007B4C                     i2l6468:
 21168  007B4C  5007               	movf	i2adc_amostra@canal^0,w,c
 21169                           
 21170                           ; Switch size 1, requested type "simple"
 21171                           ; Number of cases is 3, Range of values is 0 to 2
 21172                           ; switch strategies available:
 21173                           ; Name         Instructions Cycles
 21174                           ; simple_byte           10     6 (average)
 21175                           ;	Chosen strategy is simple_byte
 21176  007B4E  0A00               	xorlw	0	; case 0
 21177  007B50  B4D8               	btfsc	status,2,c
 21178  007B52  EF9A  F03D         	goto	i2l6460
 21179  007B56  0A01               	xorlw	1	; case 1
 21180  007B58  B4D8               	btfsc	status,2,c
 21181  007B5A  EF9E  F03D         	goto	i2l6462
 21182  007B5E  0A03               	xorlw	3	; case 2
 21183  007B60  B4D8               	btfsc	status,2,c
 21184  007B62  EFA2  F03D         	goto	i2l6464
 21185  007B66  EFB5  F03D         	goto	i2l20
 21186  007B6A                     i2l20:
 21187                           
 21188                           ;adc.c: 77: ADCON0bits.GO=1;
 21189  007B6A  82C2               	bsf	194,1,c	;volatile
 21190  007B6C                     i2l23:
 21191  007B6C  B2C2               	btfsc	194,1,c	;volatile
 21192  007B6E  EFBB  F03D         	goto	i2u804_41
 21193  007B72  EFBD  F03D         	goto	i2u804_40
 21194  007B76                     i2u804_41:
 21195  007B76  EFB6  F03D         	goto	i2l23
 21196  007B7A                     i2u804_40:
 21197  007B7A                     
 21198                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
 21199  007B7A  CFC3 F003          	movff	4035,??i2_adc_amostra	;volatile
 21200  007B7E  0E06               	movlw	6
 21201  007B80  6E04               	movwf	(??i2_adc_amostra+1)^0,c
 21202  007B82                     i2u805_45:
 21203  007B82  90D8               	bcf	status,0,c
 21204  007B84  3203               	rrcf	??i2_adc_amostra^0,f,c
 21205  007B86  2E04               	decfsz	(??i2_adc_amostra+1)^0,f,c
 21206  007B88  EFC1  F03D         	goto	i2u805_45
 21207  007B8C  5003               	movf	??i2_adc_amostra^0,w,c
 21208  007B8E  CFC4 F005          	movff	4036,??i2_adc_amostra+2	;volatile
 21209  007B92  6A06               	clrf	(??i2_adc_amostra+3)^0,c
 21210  007B94  90D8               	bcf	status,0,c
 21211  007B96  3605               	rlcf	(??i2_adc_amostra+2)^0,f,c
 21212  007B98  3606               	rlcf	(??i2_adc_amostra+3)^0,f,c
 21213  007B9A  90D8               	bcf	status,0,c
 21214  007B9C  3605               	rlcf	(??i2_adc_amostra+2)^0,f,c
 21215  007B9E  3606               	rlcf	(??i2_adc_amostra+3)^0,f,c
 21216  007BA0  1005               	iorwf	(??i2_adc_amostra+2)^0,w,c
 21217  007BA2  6E01               	movwf	?i2_adc_amostra^0,c
 21218  007BA4  5006               	movf	(??i2_adc_amostra+3)^0,w,c
 21219  007BA6  6E02               	movwf	(?i2_adc_amostra+1)^0,c
 21220  007BA8  0012               	return		;funcret
 21221  007BAA                     __end_ofi2_adc_amostra:
 21222                           	callstack 0
 21223                           
 21224 ;; *************** function _serial_tx_str *****************
 21225 ;; Defined at:
 21226 ;;		line 53 in file "serial.c"
 21227 ;; Parameters:    Size  Location     Type
 21228 ;;  val             2    1[COMRAM] PTR const unsigned char 
 21229 ;;		 -> buffer_tx(22), 
 21230 ;; Auto vars:     Size  Location     Type
 21231 ;;  i               1    3[COMRAM] unsigned char 
 21232 ;; Return value:  Size  Location     Type
 21233 ;;                  1    wreg      void 
 21234 ;; Registers used:
 21235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21236 ;; Tracked objects:
 21237 ;;		On entry : 0/0
 21238 ;;		On exit  : 0/0
 21239 ;;		Unchanged: 0/0
 21240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21241 ;;      Params:         2       0       0       0       0       0       0
 21242 ;;      Locals:         1       0       0       0       0       0       0
 21243 ;;      Temps:          0       0       0       0       0       0       0
 21244 ;;      Totals:         3       0       0       0       0       0       0
 21245 ;;Total ram usage:        3 bytes
 21246 ;; Hardware stack levels used:    1
 21247 ;; Hardware stack levels required when called:    1
 21248 ;; This function calls:
 21249 ;;		_serial_tx
 21250 ;; This function is called by:
 21251 ;;		_transmitedados
 21252 ;; This function uses a non-reentrant model
 21253 ;;
 21254                           
 21255                           	psect	text72
 21256  007F66                     __ptext72:
 21257                           	callstack 0
 21258  007F66                     _serial_tx_str:
 21259                           	callstack 23
 21260  007F66                     
 21261                           ;serial.c: 55: unsigned char i=0;
 21262  007F66  0E00               	movlw	0
 21263  007F68  6E04               	movwf	serial_tx_str@i^0,c
 21264                           
 21265                           ;serial.c: 57: while(val[i])
 21266  007F6A  EFC1  F03F         	goto	i2l7034
 21267  007F6E                     i2l7030:
 21268                           
 21269                           ;serial.c: 58: {;serial.c: 59: serial_tx(val[i]);
 21270  007F6E  5004               	movf	serial_tx_str@i^0,w,c
 21271  007F70  2402               	addwf	serial_tx_str@val^0,w,c
 21272  007F72  6ED9               	movwf	fsr2l,c
 21273  007F74  0E00               	movlw	0
 21274  007F76  2003               	addwfc	(serial_tx_str@val+1)^0,w,c
 21275  007F78  6EDA               	movwf	fsr2h,c
 21276  007F7A  50DF               	movf	indf2,w,c
 21277  007F7C  EC82  F000         	call	_serial_tx
 21278  007F80                     
 21279                           ;serial.c: 60: i++;
 21280  007F80  2A04               	incf	serial_tx_str@i^0,f,c
 21281  007F82                     i2l7034:
 21282  007F82  5004               	movf	serial_tx_str@i^0,w,c
 21283  007F84  2402               	addwf	serial_tx_str@val^0,w,c
 21284  007F86  6ED9               	movwf	fsr2l,c
 21285  007F88  0E00               	movlw	0
 21286  007F8A  2003               	addwfc	(serial_tx_str@val+1)^0,w,c
 21287  007F8C  6EDA               	movwf	fsr2h,c
 21288  007F8E  50DF               	movf	indf2,w,c
 21289  007F90  A4D8               	btfss	status,2,c
 21290  007F92  EFCD  F03F         	goto	i2u892_41
 21291  007F96  EFCF  F03F         	goto	i2u892_40
 21292  007F9A                     i2u892_41:
 21293  007F9A  EFB7  F03F         	goto	i2l7030
 21294  007F9E                     i2u892_40:
 21295  007F9E  0012               	return		;funcret
 21296  007FA0                     __end_of_serial_tx_str:
 21297                           	callstack 0
 21298                           
 21299 ;; *************** function _serial_tx *****************
 21300 ;; Defined at:
 21301 ;;		line 47 in file "serial.c"
 21302 ;; Parameters:    Size  Location     Type
 21303 ;;  val             1    wreg     unsigned char 
 21304 ;; Auto vars:     Size  Location     Type
 21305 ;;  val             1    0[COMRAM] unsigned char 
 21306 ;; Return value:  Size  Location     Type
 21307 ;;                  1    wreg      void 
 21308 ;; Registers used:
 21309 ;;		wreg
 21310 ;; Tracked objects:
 21311 ;;		On entry : 0/0
 21312 ;;		On exit  : 0/0
 21313 ;;		Unchanged: 0/0
 21314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21315 ;;      Params:         0       0       0       0       0       0       0
 21316 ;;      Locals:         1       0       0       0       0       0       0
 21317 ;;      Temps:          0       0       0       0       0       0       0
 21318 ;;      Totals:         1       0       0       0       0       0       0
 21319 ;;Total ram usage:        1 bytes
 21320 ;; Hardware stack levels used:    1
 21321 ;; This function calls:
 21322 ;;		Nothing
 21323 ;; This function is called by:
 21324 ;;		_serial_tx_str
 21325 ;; This function uses a non-reentrant model
 21326 ;;
 21327                           
 21328                           	psect	text73
 21329  000104                     __ptext73:
 21330                           	callstack 0
 21331  000104                     _serial_tx:
 21332                           	callstack 23
 21333                           
 21334                           ;incstack = 0
 21335                           ;serial_tx@val stored from wreg
 21336  000104  6E01               	movwf	serial_tx@val^0,c
 21337  000106                     
 21338                           ;serial.c: 49: TXREG=val;
 21339  000106  C001  FFAD         	movff	serial_tx@val,4013	;volatile
 21340  00010A                     i2l88:
 21341  00010A  A2AC               	btfss	172,1,c	;volatile
 21342  00010C  EF8A  F000         	goto	i2u717_41
 21343  000110  EF8C  F000         	goto	i2u717_40
 21344  000114                     i2u717_41:
 21345  000114  EF85  F000         	goto	i2l88
 21346  000118                     i2u717_40:
 21347  000118  0012               	return		;funcret
 21348  00011A                     __end_of_serial_tx:
 21349                           	callstack 0
 21350                           
 21351                           	psect	rparam
 21352  0000                     
 21353                           	psect	temp
 21354  00007E                     btemp:
 21355                           	callstack 0
 21356  00007E                     	ds	1
 21357  0000                     int$flags	set	btemp
 21358  0000                     wtemp8	set	btemp+1
 21359  0000                     ttemp5	set	btemp+1
 21360  0000                     ttemp6	set	btemp+4
 21361  0000                     ttemp7	set	btemp+8
 21362                           
 21363                           	psect	idloc
 21364                           
 21365                           ;Config register IDLOC0 @ 0x200000
 21366                           ;	unspecified, using default values
 21367  200000                     	org	2097152
 21368  200000  FF                 	db	255
 21369                           
 21370                           ;Config register IDLOC1 @ 0x200001
 21371                           ;	unspecified, using default values
 21372  200001                     	org	2097153
 21373  200001  FF                 	db	255
 21374                           
 21375                           ;Config register IDLOC2 @ 0x200002
 21376                           ;	unspecified, using default values
 21377  200002                     	org	2097154
 21378  200002  FF                 	db	255
 21379                           
 21380                           ;Config register IDLOC3 @ 0x200003
 21381                           ;	unspecified, using default values
 21382  200003                     	org	2097155
 21383  200003  FF                 	db	255
 21384                           
 21385                           ;Config register IDLOC4 @ 0x200004
 21386                           ;	unspecified, using default values
 21387  200004                     	org	2097156
 21388  200004  FF                 	db	255
 21389                           
 21390                           ;Config register IDLOC5 @ 0x200005
 21391                           ;	unspecified, using default values
 21392  200005                     	org	2097157
 21393  200005  FF                 	db	255
 21394                           
 21395                           ;Config register IDLOC6 @ 0x200006
 21396                           ;	unspecified, using default values
 21397  200006                     	org	2097158
 21398  200006  FF                 	db	255
 21399                           
 21400                           ;Config register IDLOC7 @ 0x200007
 21401                           ;	unspecified, using default values
 21402  200007                     	org	2097159
 21403  200007  FF                 	db	255
 21404                           
 21405                           	psect	config
 21406                           
 21407                           ; Padding undefined space
 21408  300000                     	org	3145728
 21409  300000  FF                 	db	255
 21410                           
 21411                           ;Config register CONFIG1H @ 0x300001
 21412                           ;	Oscillator Selection bits
 21413                           ;	OSC = HS, HS oscillator
 21414                           ;	Fail-Safe Clock Monitor Enable bit
 21415                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 21416                           ;	Internal/External Oscillator Switchover bit
 21417                           ;	IESO = OFF, Oscillator Switchover mode disabled
 21418  300001                     	org	3145729
 21419  300001  02                 	db	2
 21420                           
 21421                           ;Config register CONFIG2L @ 0x300002
 21422                           ;	Power-up Timer Enable bit
 21423                           ;	PWRT = OFF, PWRT disabled
 21424                           ;	Brown-out Reset Enable bits
 21425                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 21426                           ;	Brown Out Reset Voltage bits
 21427                           ;	BORV = 3, Minimum setting
 21428  300002                     	org	3145730
 21429  300002  1F                 	db	31
 21430                           
 21431                           ;Config register CONFIG2H @ 0x300003
 21432                           ;	Watchdog Timer Enable bit
 21433                           ;	WDT = ON, WDT enabled
 21434                           ;	Watchdog Timer Postscale Select bits
 21435                           ;	WDTPS = 32768, 1:32768
 21436  300003                     	org	3145731
 21437  300003  1F                 	db	31
 21438                           
 21439                           ; Padding undefined space
 21440  300004                     	org	3145732
 21441  300004  FF                 	db	255
 21442                           
 21443                           ;Config register CONFIG3H @ 0x300005
 21444                           ;	CCP2 MUX bit
 21445                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 21446                           ;	PORTB A/D Enable bit
 21447                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 21448                           ;	Low-Power Timer1 Oscillator Enable bit
 21449                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 21450                           ;	MCLR Pin Enable bit
 21451                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 21452  300005                     	org	3145733
 21453  300005  81                 	db	129
 21454                           
 21455                           ;Config register CONFIG4L @ 0x300006
 21456                           ;	Stack Full/Underflow Reset Enable bit
 21457                           ;	STVREN = ON, Stack full/underflow will cause Reset
 21458                           ;	Single-Supply ICSP Enable bit
 21459                           ;	LVP = ON, Single-Supply ICSP enabled
 21460                           ;	Extended Instruction Set Enable bit
 21461                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 21462                           ;	Background Debugger Enable bit
 21463                           ;	DEBUG = 0x1, unprogrammed default
 21464  300006                     	org	3145734
 21465  300006  85                 	db	133
 21466                           
 21467                           ; Padding undefined space
 21468  300007                     	org	3145735
 21469  300007  FF                 	db	255
 21470                           
 21471                           ;Config register CONFIG5L @ 0x300008
 21472                           ;	Code Protection bit
 21473                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 21474                           ;	Code Protection bit
 21475                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 21476                           ;	Code Protection bit
 21477                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 21478                           ;	Code Protection bit
 21479                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 21480  300008                     	org	3145736
 21481  300008  0F                 	db	15
 21482                           
 21483                           ;Config register CONFIG5H @ 0x300009
 21484                           ;	Boot Block Code Protection bit
 21485                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 21486                           ;	Data EEPROM Code Protection bit
 21487                           ;	CPD = OFF, Data EEPROM not code-protected
 21488  300009                     	org	3145737
 21489  300009  C0                 	db	192
 21490                           
 21491                           ;Config register CONFIG6L @ 0x30000A
 21492                           ;	Write Protection bit
 21493                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 21494                           ;	Write Protection bit
 21495                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 21496                           ;	Write Protection bit
 21497                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 21498                           ;	Write Protection bit
 21499                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 21500  30000A                     	org	3145738
 21501  30000A  0F                 	db	15
 21502                           
 21503                           ;Config register CONFIG6H @ 0x30000B
 21504                           ;	Configuration Register Write Protection bit
 21505                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 21506                           ;	Boot Block Write Protection bit
 21507                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 21508                           ;	Data EEPROM Write Protection bit
 21509                           ;	WRTD = OFF, Data EEPROM not write-protected
 21510  30000B                     	org	3145739
 21511  30000B  E0                 	db	224
 21512                           
 21513                           ;Config register CONFIG7L @ 0x30000C
 21514                           ;	Table Read Protection bit
 21515                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 21516                           ;	Table Read Protection bit
 21517                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 21518                           ;	Table Read Protection bit
 21519                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 21520                           ;	Table Read Protection bit
 21521                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 21522  30000C                     	org	3145740
 21523  30000C  0F                 	db	15
 21524                           
 21525                           ;Config register CONFIG7H @ 0x30000D
 21526                           ;	Boot Block Table Read Protection bit
 21527                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 21528  30000D                     	org	3145741
 21529  30000D  40                 	db	64
 21530                           tosu	equ	0xFFF
 21531                           tosh	equ	0xFFE
 21532                           tosl	equ	0xFFD
 21533                           stkptr	equ	0xFFC
 21534                           pclatu	equ	0xFFB
 21535                           pclath	equ	0xFFA
 21536                           pcl	equ	0xFF9
 21537                           tblptru	equ	0xFF8
 21538                           tblptrh	equ	0xFF7
 21539                           tblptrl	equ	0xFF6
 21540                           tablat	equ	0xFF5
 21541                           prodh	equ	0xFF4
 21542                           prodl	equ	0xFF3
 21543                           indf0	equ	0xFEF
 21544                           postinc0	equ	0xFEE
 21545                           postdec0	equ	0xFED
 21546                           preinc0	equ	0xFEC
 21547                           plusw0	equ	0xFEB
 21548                           fsr0h	equ	0xFEA
 21549                           fsr0l	equ	0xFE9
 21550                           wreg	equ	0xFE8
 21551                           indf1	equ	0xFE7
 21552                           postinc1	equ	0xFE6
 21553                           postdec1	equ	0xFE5
 21554                           preinc1	equ	0xFE4
 21555                           plusw1	equ	0xFE3
 21556                           fsr1h	equ	0xFE2
 21557                           fsr1l	equ	0xFE1
 21558                           bsr	equ	0xFE0
 21559                           indf2	equ	0xFDF
 21560                           postinc2	equ	0xFDE
 21561                           postdec2	equ	0xFDD
 21562                           preinc2	equ	0xFDC
 21563                           plusw2	equ	0xFDB
 21564                           fsr2h	equ	0xFDA
 21565                           fsr2l	equ	0xFD9
 21566                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    148
    Data        220
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    123     125
    BANK0           128     99     118
    BANK1           256     35     256
    BANK2           256      2      58
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 22
		 -> buffer_tx(BANK1[22]), str(BANK1[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    atualizatela@estados	PTR unsigned int  size(2) Largest target is 6
		 -> states(BANK0[6]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[11]), STR_2(CODE[7]), 
		 -> txt3e(BANK1[17]), txt2e(BANK1[17]), txt0(BANK1[17]), txt43(BANK2[17]), 
		 -> txt33(BANK1[12]), txt23(BANK1[12]), txt13(BANK2[17]), txt42(BANK1[17]), 
		 -> txt32(BANK1[13]), txt22(BANK1[13]), txt12(BANK1[17]), txt41(BANK1[17]), 
		 -> txt31(BANK1[9]), txt21(BANK1[7]), txt11(BANK1[17]), str(BANK1[4]), 

    sp__serial_rx_str_until	PTR unsigned char  size(2) Largest target is 0

    sp__serial_rx_str	PTR unsigned char  size(2) Largest target is 0

    serial_tx_str@val	PTR const unsigned char  size(2) Largest target is 22
		 -> buffer_tx(BANK1[22]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->i2_atualizatela
    i2_atualizatela->i2_sprintf
    i2_leituraCXS->i2___fldiv
    i2_leituraCXI->i2___fldiv
    i2___fldiv->i2___flmul
    i2_Lcd_Out->i2_Lcd_Chr_CP
    i2_Lcd_Out->i2_Lcd_Cmd
    _transmitedados->i2_sprintf
    i2_sprintf->i2___flsub
    i2_scale->i2___flmul
    i2___awdiv->i2___awmod
    i2_fround->i2___flmul
    i2___lwdiv->i2___lwmod
    i2___flmul->i2___awdiv
    i2___flmul->i2___xxtofl
    i2___llmod->i2___lldiv
    i2___fltol->i2___flmul
    i2___flsub->i2___fladd
    i2___fladd->i2_fround
    _serial_tx_str->_serial_tx

Critical Paths under _main in BANK0

    _main->_sprintf
    _testeMin->___flge
    _tc_tecla->_atraso_ms
    _maketela->_Lcd_Out
    _atualizatela->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _leituraCXS->___fldiv
    _leituraCXI->___fldiv
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _PWM1_Init->___aldiv
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_atualizatela
    _atualizatela->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  156617
                                             98 BANK0      1     1      0
                                              0 BANK2      2     2      0
                           _Lcd_Init
                          _PWM1_Init
                         _PWM1_Start
                             ___flge
                           _adc_init
                       _atualizatela
                         _leituraCXI
                         _leituraCXS
                           _maketela
                        _serial_init
                          _serial_rx
                            _sprintf
                           _tc_tecla
                           _testeMin
 ---------------------------------------------------------------------------------
 (1) _testeMin                                             0     0      0    1886
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             7     5      2    1298
                                             15 BANK0      7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            5     3      2     586
                                             10 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _serial_rx                                            5     3      2     189
                                             10 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _maketela                                             3     1      2    6140
                                             18 BANK0      3     1      2
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _atualizatela                                         8     6      2   78950
                                             27 BANK1      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                         _leituraCXI
                         _leituraCXS
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   46875
                                             86 BANK0     12     4      8
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___fladd
                            ___fldiv (ARG)
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    9420
                                             49 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                             16 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    8820
                                             49 BANK0     13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1444
                                             10 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1453
                                             15 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     634
                                             10 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     634
                                             10 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     772
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     952
                                             23 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             10 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                             58 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3827
                                             78 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3442
                                             62 BANK0     16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                             10 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1886
                                             10 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     770
                                             10 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _leituraCXS                                           0     0      0    8893
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _adc_amostra
 ---------------------------------------------------------------------------------
 (1) _leituraCXI                                           0     0      0    8893
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _adc_amostra
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      31
                                             10 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                             10 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    5573
                                             24 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2543
                                             49 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              5     2      3    5079
                                             13 BANK0      5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     248
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     6      2     904
                                             24 BANK0      8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                             10 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     452
                                             13 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     248
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 10    10      0   56694
                                              0 BANK0     10    10      0
                     _transmitedados
                     i2_atualizatela
 ---------------------------------------------------------------------------------
 (6) i2_atualizatela                                       8     6      2   34806
                                            115 COMRAM     8     6      2
                          i2_Lcd_Out
                          i2___fldiv
                          i2___flmul
                       i2_leituraCXI
                       i2_leituraCXS
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (7) i2_leituraCXS                                         0     0      0    4153
                          i2___fldiv
                          i2___flmul
                         i2___xxtofl
                      i2_adc_amostra
 ---------------------------------------------------------------------------------
 (7) i2_leituraCXI                                         0     0      0    4153
                          i2___fldiv
                          i2___flmul
                         i2___xxtofl
                      i2_adc_amostra
 ---------------------------------------------------------------------------------
 (8) i2___fldiv                                           25    17      8    1329
                                             39 COMRAM    25    17      8
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Out                                            5     2      3    1157
                                              3 COMRAM     5     2      3
                       i2_Lcd_Chr_CP
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Cmd                                            3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Chr_CP                                         3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _transmitedados                                       0     0      0   21888
                      _serial_tx_str
                      i2_adc_amostra
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (7) i2_sprintf                                           45    37      8   21298
                                             76 COMRAM    39    31      8
                          i2___awdiv
                          i2___fladd
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                      i2_adc_amostra (ARG)
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (8) i2_scale                                              9     5      4    4117
                                             39 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     608
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2___awdiv                                            8     4      4     664
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) i2_fround                                            13     9      4    3280
                                             39 COMRAM    13     9      4
                          i2___flmul
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (9) i2___lwmod                                            5     1      4     315
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     318
                                              5 COMRAM     7     3      4
                          i2___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___flmul                                           25    17      8    2402
                                             14 COMRAM    25    17      8
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___lwdiv (ARG)
                          i2___lwmod (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) i2__tdiv_to_l_                                       17     9      8     355
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (8) i2__div_to_l_                                        14     6      8     355
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (8) i2___xxtofl                                          14    10      4     400
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     315
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i2___llmod                                            9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___lldiv                                           13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) i2___fltol                                           10     6      4     307
                                             39 COMRAM    10     6      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___flsub                                            8     0      8    2185
                                             68 COMRAM     8     0      8
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___fladd                                           16     8      8    2088
                                             52 COMRAM    16     8      8
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___flneg                                            4     0      4      71
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) i2___flge                                            12     4      8     338
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) i2___fleq                                            12     4      8     194
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) i2_adc_amostra                                        7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _serial_tx_str                                        3     1      2     568
                                              1 COMRAM     3     1      2
                          _serial_tx
 ---------------------------------------------------------------------------------
 (8) _serial_tx                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   ___flge
   _adc_init
   _atualizatela
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     _leituraCXI
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _adc_amostra
     _leituraCXS
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _adc_amostra
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fleq (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _leituraCXI
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _adc_amostra
   _leituraCXS
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _adc_amostra
   _maketela
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
   _serial_init
   _serial_rx
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fldiv (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fleq (ARG)
     ___flge (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
     ___flsub (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _tc_tecla
     _atraso_ms
   _testeMin
     ___flge

 _isr (ROOT)
   _transmitedados
     _serial_tx_str
       _serial_tx
     i2_adc_amostra
     i2_sprintf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         i2_fround (ARG)
           i2___flmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___fleq
       i2___flge
       i2___flmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
       i2___flneg
       i2___flsub
         i2___fladd
           i2_fround (ARG)
             i2___flmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___xxtofl (ARG)
       i2___fltol
         i2___flmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_adc_amostra (ARG)
       i2_fround (ARG)
         i2___flmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
         i2___lwdiv
           i2___lwmod (ARG)
         i2___lwmod
       i2_isdigit (ARG)
       i2_scale (ARG)
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
   i2_atualizatela
     i2_Lcd_Out
       i2_Lcd_Chr_CP
       i2_Lcd_Cmd
     i2___fldiv
       i2___flmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl (ARG)
     i2___flmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___lwdiv (ARG)
         i2___lwmod (ARG)
       i2___lwmod (ARG)
       i2___xxtofl (ARG)
     i2_leituraCXI
       i2___fldiv
         i2___flmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
         i2___xxtofl (ARG)
       i2___flmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl
       i2_adc_amostra
     i2_leituraCXS
       i2___fldiv
         i2___flmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
         i2___xxtofl (ARG)
       i2___flmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl
       i2_adc_amostra
     i2_sprintf
       i2___awdiv
         i2___awmod (ARG)
       i2___fladd
         i2_fround (ARG)
           i2___flmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___lwdiv (ARG)
               i2___lwmod (ARG)
             i2___lwmod (ARG)
             i2___xxtofl (ARG)
           i2___lwdiv
             i2___lwmod (ARG)
           i2___lwmod
       i2___fleq
       i2___flge
       i2___flmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___lwdiv (ARG)
           i2___lwmod (ARG)
         i2___lwmod (ARG)
         i2___xxtofl (ARG)
       i2___flneg
       i2___flsub
         i2___fladd
           i2_fround (ARG)
             i2___flmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___lwdiv (ARG)
                 i2___lwmod (ARG)
               i2___lwmod (ARG)
               i2___xxtofl (ARG)
             i2___lwdiv
               i2___lwmod (ARG)
             i2___lwmod
         i2___xxtofl (ARG)
       i2___fltol
         i2___flmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___wmul
       i2___xxtofl
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_adc_amostra (ARG)
       i2_fround (ARG)
         i2___flmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)
         i2___lwdiv
           i2___lwmod (ARG)
         i2___lwmod
       i2_isdigit (ARG)
       i2_scale (ARG)
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___flmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___lwdiv (ARG)
             i2___lwmod (ARG)
           i2___lwmod (ARG)
           i2___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      2      3A       9       22.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23     100       7      100.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     63      76       5       92.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7B      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22D      15        0.0%
DATA                 0      0     22D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 01:33:00 2021

           ___fldiv@aexp 00C9             ___fldiv@bexp 00C8             ___fldiv@sign 00C1  
                     l20 79F0                       l15 0126                       l23 79F2  
                     l26 7A30                       l60 0096                       l54 6E8A  
                     l63 00A4                       l57 0086                       l59 0094  
                     l85 0102             ___awdiv@sign 0095      ___wmul@multiplicand 008C  
     i2___lwdiv@dividend 0006     __size_of_adc_amostra 0082                      l102 771E  
                    l111 7794                      l108 7770                      l109 777E  
                    l260 6510                      l156 7E64                      l406 7B2C  
                    l159 7E9C                      l512 52E6                      l424 5ECE  
                    l416 79AE                      l273 70D2                      l409 7AAE  
                    l258 6468                      l259 64BA                      l292 63DC  
                    l470 563C                      l374 24CA                      l711 687E  
                    l519 3DC2                      l439 457E                      l375 2592  
                    l359 2344                      l632 7FFE                      l472 5622  
                    l289 62A6                      l465 55F8                      l393 275A  
                    l482 56AA                      l475 5680                      l467 55E0  
                    l492 5766                      l396 2740                      l388 26AE  
                    l629 1540                      l477 5666                      l910 6A46  
                    l911 6A8C                      l904 7502                      l592 0FA8  
                    l666 7652                      l915 7F64                      l659 7642  
                    l863 6F50                      l938 6986                      l876 72F6  
                    l886 601C                      l895 600C                      l995 5C2A  
                    l997 5B70                      l998 5BA2                      _PR2 000FCB  
            i2___fladd@a 0039              i2___fladd@b 0035                      _key 007D  
            i2___fldiv@a 002C              i2___fldiv@b 0028                      _isr 0008  
                    _str 01D9             ___awmod@sign 008F               i2___xxtofl 5920  
                    wreg 000FE8              i2___flmul@a 0013              i2___flmul@b 000F  
            i2___flsub@a 0049              i2___flsub@b 0045             ___flmul@aexp 00A5  
           ___flmul@bexp 00AA             ___flmul@sign 00A4             ___flmul@temp 00AF  
           ___flmul@prod 00AB          i2sprintf@tmpval 005F             ___fltol@exp1 00C3  
                   l1004 5C1A                     l1312 591E                     l1208 2B9E  
                   l1224 7EE4                     l1152 7D12                     l1241 473E  
                   l1209 2B8C                     l1081 781E                     l1145 7D0A  
                   l1250 4826                     l1074 780E                     l1162 7DEC  
                   l1330 0046                     l1323 58B6                     l1155 7DE4  
                   l1236 491A                     l1316 585A                     l1309 57C2  
                   l1238 477A                     l1182 29B4                     l1247 47C0  
                   l1191 2C84                     l1183 29A2                     l1272 3570  
                   l1184 2968                     l1249 4838                     l1275 3402  
                   l1268 320C                     l1285 3532                     l1277 347A  
                   l1278 3468                     l1199 2ACE                     l9010 0040  
                   l9002 0016                     l9100 5F80                     l9020 5B0E  
                   l9004 001C                     l9110 5FB0                     l9102 5F90  
                   l9030 5B46                     l9014 5AD4                     l9006 002C  
                   l9200 4674                     l9120 5FDC                     l9104 5F92  
                   l9040 5B7A                     l9032 5B52                     l9016 5AFA  
                   l9008 003C                     l9210 46A4                     l9202 467C  
                   l9130 7FD8                     l9106 5F9C                     l9050 5BBE  
                   l9042 5B94                     l9034 5B62                     l9026 5B36  
                   l9220 46E2                     l9212 46A4                     l9204 4680  
                   l8500 28EE                     l9140 75D6                     l9132 7FF6  
                   l9116 5FC8                     l9108 5FA2                     l9060 5BEA  
                   l9044 5BA0                     l9036 5B66                     l9028 5B38  
                   ?_isr 0001                     l9230 472E                     l9222 46F2  
                   l9310 74D6                     l9302 7458                     l8510 2902  
                   l8502 28F2                     l9150 7620                     l9142 75DE  
                   l9126 5FF0                     l9118 5FD2                     l9070 5ED0  
                   l9046 5BAA                     l9038 5B6C                     l9240 4778  
                   l9232 473C                     l9224 4702                     l9216 46B8  
                   l9208 4694                     l9160 458E                     l9312 74FA  
                   l9304 7488                     l9320 69B8                     l8600 2B84  
                   l8520 2960                     l8504 28F6                     l8512 2906  
                   l8440 27E2                     l9152 7630                     l9144 75EA  
                   l9136 75AE                     l9400 77D0                     l9128 5FFC  
                   l9072 5EE8                     l9056 5BD6                     l9048 5BB0  
                   l9250 47BE                     l9242 478A                     l9234 4748  
                   l9226 470A                     l9218 46D2                     l9170 45CE  
                   l9162 459C                     l9410 577E                     l9314 7500  
                   l9306 7498                     l9330 6A26                     l9322 69C8  
                   l8610 2C02                     l8530 2996                     l8522 2976  
                   l8514 290A                     l8506 28FA                     l8442 27F2  
                   l8450 281C                     l8434 27C4                     l9154 7632  
                   l9146 75F8                     l9138 75C0                     l9402 77EE  
                   l9090 5F4A                     l9082 5F16                     l9066 5BFE  
                   l9058 5BE0                     l9260 481E                     l9244 47A0  
                   l9252 47D0                     l9236 4766                     l9228 471A  
                   l9180 45F4                     l9172 45D0                     l9164 459E  
                   l8700 32EE                     l9420 57FC                     l9412 578C  
                   l9308 74C6                     l9332 6A34                     l9324 69F6  
                   l9340 7F2C                     l8620 2C48                     l8604 2BAE  
                   l8612 2C04                     l8540 29E6                     l8532 29A0  
                   l8524 2982                     l8516 2934                     l8508 28FE  
                   l8460 284C                     l8452 282C                     l8444 2802  
                   l8436 27D2                     l9156 763C                     l9148 7602  
                   l9404 77FE                     l9092 5F4E                     l9084 5F18  
                   l9076 5EFC                     l9068 5C0A                     l9500 0716  
                   l9270 488C                     l9254 47DE                     l9246 47A6  
                   l9238 4768                     l9190 4634                     l9182 4602  
                   l9166 45AE                     l9174 45D8                     l9158 4580  
                   l8710 335C                     l8702 3308                     l9430 5850  
                   l9422 5804                     l9414 57D2                     l9334 6A84  
                   l9326 6A06                     l9318 6988                     l9342 7F44  
                   l8630 2C72                     l8622 2C56                     l8614 2C14  
                   l8606 2BBA                     l8550 2A22                     l8542 29F6  
                   l8534 29C2                     l8526 2986                     l8518 2950  
                   l8470 288C                     l8462 285A                     l8454 2832  
                   l8446 2812                     l8438 27E0                     l9350 6898  
                   l9406 7808                     l9094 5F54                     l9086 5F28  
                   l9510 076A                     l9502 072A                     l9280 48F6  
                   l9264 4848                     l9272 4890                     l9256 47E2  
                   l9248 47B0                     l9192 4636                     l9184 4604  
                   l9176 45E8                     l9168 45BE                     l8720 33F2  
                   l8712 3386                     l8704 3318                     l8640 3162  
                   l9440 58C6                     l9432 588C                     l9424 5810  
                   l9416 57E8                     l9408 576C                     l9336 6A8A  
                   l9328 6A14                     l9344 7F54                     l8632 2C74  
                   l8624 2C5C                     l8616 2C24                     l8608 2BC8  
                   l8560 2A68                     l8552 2A30                     l8544 2A04  
                   l8536 29D2                     l8528 2994                     l8480 28C6  
                   l8472 288E                     l8464 285C                     l8456 2844  
                   l8448 2814                     l9360 68E8                     l9096 5F58  
                   l9088 5F3A                     l8800 6F2A                     l9600 0BC6  
                   l9512 0774                     l9520 07E6                     l9282 48FA  
                   l9274 48AA                     l9266 4854                     l9258 47F0  
                   l9186 4614                     l9194 463E                     l9178 45EE  
                   l8730 3432                     l8722 3400                     l8714 33BC  
                   l8706 3334                     l8650 319A                     l8642 3164  
                   l9450 590E                     l9442 58CA                     l9434 5898  
                   l9426 5842                     l8626 2C5E                     l8618 2C44  
                   l8570 2AE4                     l8562 2A9C                     l8554 2A32  
                   l8546 2A12                     l8490 28DA                     l8482 28CA  
                   l8466 286C                     l8474 2896                     l8458 2846  
                   l9370 6912                     l9362 68EC                     l9354 68AC  
                   l9098 5F62                     l8802 6F30                     l8810 7246  
                   l9602 0BFC                     l9530 0868                     l9522 0802  
                   l9514 0792                     l9506 0734                     l8900 62AC  
                   l9284 4908                     l9276 48C0                     l9268 4862  
                   l9196 464E                     l9188 4624                     l8740 34A4  
                   l8732 3460                     l8724 3412                     l8716 33CA  
                   l8708 3340                     l8660 31C6                     l8652 31AA  
                   l8644 3174                     l8636 3146                     l9444 58EE  
                   l9436 58A6                     l9428 5844                     l8628 2C64  
                   l8580 2B20                     l8572 2AF4                     l8564 2A9E  
                   l8556 2A3C                     l8548 2A1E                     l8492 28DE  
                   l8484 28CE                     l8476 28A6                     l8468 287C  
                   l9380 693A                     l9372 691C                     l9364 68FA  
                   l9356 68D6                     l9348 6880                     l8804 6F40  
                   l8820 7274                     l8812 724C                     l9700 0FD6  
                   l9612 0C5E                     l9604 0C0A                     l9532 086E  
                   l9524 080C                     l9516 07C2                     l9508 074C  
                   l8910 6342                     l8902 62B0                     l9470 701A  
                   l9286 490E                     l9278 48DA                     l9198 4664  
                   l8750 351A                     l8742 34CE                     l8726 3420  
                   l8718 33E8                     l8670 321C                     l8662 31D6  
                   l8654 31B0                     l8646 3184                     l8638 3154  
                   l9446 58FE                     l9438 58C4                     l8590 2B4C  
                   l8582 2B22                     l8566 2AAE                     l8558 2A42  
                   l8494 28E2                     l8486 28D2                     l8478 28B8  
                   l9382 6946                     l9374 6926                     l9358 68D8  
                   l8806 6F48                     l8830 72AC                     l8822 727C  
                   l8814 725A                     l9710 10CC                     l9702 0FEE  
                   l9630 0D2C                     l9606 0C14                     l9614 0C74  
                   l9550 090A                     l9542 08A6                     l9526 081A  
                   l9534 0890                     l9518 07C8                     l9462 7E6E  
                   l9454 7E52                     l8920 63CA                     l8912 63B6  
                   l8904 6330                     l9472 701E                     l9288 4910  
                   l8752 3536                     l8760 355C                     l8736 348A  
                   l8744 34D2                     l8728 3424                     l8680 3256  
                   l8672 322C                     l8664 31E6                     l8656 31B6  
                   l8648 3194                     l9448 590C                     l8584 2B30  
                   l8576 2B08                     l8592 2B4E                     l8568 2ABE  
                   l8496 28E6                     l8488 28D6                     l9296 7E9E  
                   l9384 6956                     l9392 7796                     l8840 72E6  
                   l8832 72C2                     l8824 728E                     l8816 7262  
                   l9800 13FE                     l9720 114A                     l9712 10D2  
                   l9704 103A                     l9640 0DB2                     l9632 0D3E  
                   l9624 0CF0                     l9616 0CE2                     l9608 0C2A  
                   l9560 0962                     l9552 0922                     l9544 08E2  
                   l9536 089A                     l9528 0838                     l9464 7E72  
                   l9456 7E60                     l8914 63BE                     l8906 6338  
                   l8930 61FC                     l8922 616E                     l9490 70A2  
                   l9474 7028                     l9482 7046                     l8762 3560  
                   l8754 3546                     l8746 34EC                     l8738 3496  
                   l8690 32A8                     l8682 326C                     l8666 31F6  
                   l8658 31C4                     l8586 2B38                     l8578 2B12  
                   l8594 2B5C                     l8498 28EA                     l9298 7EB0  
                   l9386 6966                     l9394 77AE                     l8850 7CBA  
                   l8770 6EA0                     l8842 72EE                     l8834 72CA  
                   l8826 7296                     l8818 7266                     l9810 145A  
                   l9802 140A                     l9730 1198                     l9722 1152  
                   l9706 1086                     l9714 1120                     l9650 0E06  
                   l9642 0DC2                     l9634 0D80                     l9618 0CEC  
                   l9570 09D4                     l9562 096A                     l9554 092A  
                   l9546 08F4                     l9538 08A0                     l9466 7E82  
                   l8916 63C0                     l8908 633A                     l9900 6E12  
                   l8940 628A                     l8932 6204                     l8924 6172  
                   l9476 7032                     l9484 706E                     l8756 3554  
                   l8748 3500                     l8692 32B6                     l8684 3278  
                   l8676 3240                     l8668 31FC                     l8596 2B60  
                   l8588 2B3C                     l9388 6976                     l9396 77B6  
                   l8860 7CF4                     l8852 7CC2                     l8780 6EC6  
                   l8772 6EA8                     l8836 72D0                     l8828 729E  
                   l9812 1464                     l9804 1410                     l9740 11D8  
                   l9732 119C                     l9716 1138                     l9708 10BC  
                   l9660 0E46                     l9652 0E0C                     l9644 0DE6  
                   l9636 0D86                     l9628 0D2A                     l9580 0A54  
                   l9572 09F2                     l9564 09A0                     l9556 0938  
                   l9548 0902                     l9724 1168                     l9820 150E  
                   l9492 06E0                     l9468 7E86                     l8918 63C8  
                   l9902 6E36                     l9910 6E86                     l8942 628C  
                   l8934 6278                     l8926 61F2                     l9486 7078  
                   l9478 703C                     l8758 3556                     l8694 32C2  
                   l8686 3290                     l8678 324C                     l9830 7A32  
                   l8598 2B6E                     l9398 77C2                     l8862 7CFC  
                   l8854 7CCA                     l8846 7C9E                     l8870 7D9C  
                   l8790 6EFE                     l8782 6ECE                     l8774 6EAC  
                   l8766 6E8C                     l8838 72D6                     l9814 14E2  
                   l9806 142A                     l9750 1216                     l9734 11AC  
                   l9726 1182                     l9718 1144                     l9670 0EA2  
                   l9646 0DF2                     l9654 0E14                     l9662 0E4E  
                   l9638 0DAA                     l9590 0AEE                     l9582 0A8A  
                   l9574 0A02                     l9566 09B0                     l9558 095C  
                   l9822 1534                     l9494 06EE                     l9840 6796  
                   l9904 6E3E                     l9912 007A                     l8944 6294  
                   l8936 6280                     l8928 61FA                     l9488 709C  
                   l8696 32D2                     l8688 329C                     l9832 7A40  
                   l8864 7CFE                     l8856 7CD8                     l8848 7CA8  
                   l8880 7DD8                     l8872 7DA4                     l8960 529A  
                   l8792 6F04                     l8784 6EE0                     l8776 6EBA  
                   l8768 6E92                     l9808 144E                     l9760 128C  
                   l9752 1218                     l9736 11BE                     l9728 118A  
                   l9680 0F50                     l9672 0EEE                     l9664 0E68  
                   l9656 0E34                     l9648 0DFA                     l9592 0B28  
                   l9584 0A96                     l9576 0A08                     l9568 09B6  
                   l9496 0700                     l9920 00EE                     l9850 67CC  
                   l9842 679A                     l9834 6772                     l9906 6E5E  
                   l9914 007E                     l8938 6282                     l8698 32DE  
                   l8890 79C8                     l9826 7AB0                     l8866 7D04  
                   l8858 7CDE                     l8882 7DDE                     l8874 7DAC  
                   l8954 51AC                     l8946 5036                     l8794 6F1A  
                   l8786 6EE8                     l8778 6EC2                     l9818 14F2  
                   l9770 12E4                     l9762 1294                     l9754 122A  
                   l9746 11DC                     l9738 11D4                     l9690 0FA0  
                   l9682 0F5C                     l9674 0F24                     l9666 0E8C  
                   l9658 0E40                     l9594 0B46                     l9586 0ACA  
                   l9578 0A20                     l9498 070C                     l9930 00FA  
                   l9922 00F0                     l9860 680E                     l9852 67E2  
                   l9844 67A8                     l9836 6778                     l9908 6E7E  
                   l9916 0082                     l8884 79B4                     l9828 7ABE  
                   l8876 7DBA                     l8868 7D88                     l8956 51BC  
                   l8948 5048                     l8796 6F22                     l8788 6EF0  
                   l8980 3B90                     l8964 39A0                     l9780 135C  
                   l9772 1308                     l9764 12A8                     l9756 1258  
                   l9692 0FAC                     l9684 0F62                     l9668 0E98  
                   l9596 0B7C                     l9588 0AD0                     l9932 00FC  
                   l9924 00F4                     l9940 7702    __size_ofi2__div_to_l_ 014C  
                   l9862 682C                     l9854 67EA                     l9870 684E  
                   l9846 67B8                     l9838 6786                     l9918 0084  
                   l8886 79B8                     l8894 79D0                     l8878 7DD0  
                   l8798 6F24                     l8974 3AE0                     l8966 39B0  
                   l9790 13A8                     l9782 1366                     l9774 1316  
                   l9766 12CC                     l9758 1260                     l9694 0FB4  
                   l9686 0F6A                     l9678 0F38                     l9598 0BA8  
                   l9934 00FE                     l9926 00F6                     l9950 775E  
                   l9942 7710                     STR_1 06CD                     l9872 685E  
                   l9864 683C                     l9856 67F6                     l9848 67BC  
                   l9880 6D96                     l8896 7A00                     l8888 79C0  
                   l8992 3CEA                     l8976 3AF4                     l8968 39C6  
                   l8984 3BBC                     l9792 13BC                     l9784 1374  
                   l9776 1320                     l9768 12D4                     l9696 0FC4  
                   l9688 0F84                     l9936 0100                     l9928 00F8  
                   l9952 778C                     l9944 7726                     STR_2 06B2  
                   STR_3 0695                     l9962 63DE                     l9874 686E  
                   l9866 683E                     l9858 6804                     l9890 6DA6  
                   l9882 6D9A                     l8994 3CFE                     l8986 3BD0  
                   l9794 13C8                     l9786 1398                     l9778 134E  
                   l9698 0FD0                     l9946 773E                     l9938 76F8  
                   STR_4 06A9                     STR_5 06A0                     l9980 648E  
                   l9972 6480                     l9964 63F6                     l9868 6848  
                   l9892 6DA8                     l9884 6D9C                     l9796 13CE  
                   l9788 13A4                     l9948 7748                     STR_6 06D4  
                   STR_7 06D4                     l9990 64DA                     l9982 6490  
                   l9974 6488                     l9966 6462                     l9894 6DF4  
                   l9886 6D9E                     l9878 011A                     l8998 3D9A  
                   l9798 13EC                     l9958 7792                     STR_8 06C0  
                   STR_9 06C0                     l9992 64DC                     l9984 6492  
                   l9976 648A                     l9896 6E06                     l9888 6DA0  
                   l9994 64DE                     l9986 64A6                     l9978 648C  
                   l9898 6E0A                     l9996 64E0                     l9988 64D2  
                   l9998 64E2                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   i2l20 7B6A                     i2l23 7B6C                     i2l26 7BA8  
                   i2l91 0118                     i2l88 010A                     i2l97 7F9E  
                   _TMR0 000FD6             i2___flge@ff1 0001             i2___flge@ff2 0005  
 __size_ofi2_adc_amostra 007C             i2___fleq@ff1 0001             i2___fleq@ff2 0005  
                   _dado 007C                     _main 2296                     _txt0 0100  
                   fsr0h 000FEA       i2___lwdiv@quotient 000A                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 007E  
           i2___flneg@f1 0001                     prodh 000FF4                     prodl 000FF3  
                   start 000E             i2___fltol@f1 0028          ___fldiv@new_exp 00C2  
        __end_ofi2_scale 41D0          __end_of_Lcd_Cmd 63DE             _sprintf$1961 01DD  
        __end_of_Lcd_Out 70D4         serial_rx@timeout 008A             ___param_bank 000000  
          ?_atualizatela 01F8               _Lcd_Chr_CP 616A                    ??_isr 0080  
                  l10000 64E4                    l10010 6504                    l10002 64F8  
                  l10012 6504                    l10004 64F8                    l10020 5D8E  
                  l10014 650A                    l10006 64FE                    l10030 5E6E  
                  l10022 5DA4                    l10102 55A4                    l10016 650A  
                  l10008 64FE                    l10040 425E                    l10032 5EBC  
                  l10024 5DF6                    l10120 5630                    l10112 55EE  
                  l10104 55B8                    l10200 22BA                    l10050 42E8  
                  l10042 4280                    l10034 41D0                    l10026 5E08  
                  l10018 5D82                    l10130 568E                    l10122 564A  
                  l10114 5606                    l10106 55C6                    l10210 22CC  
                  l10202 22BE                    l10060 4370                    l10052 4308  
                  l10044 429E                    l10036 41F2                    l10028 5E5A  
                  l10140 56D8                    l10132 569C                    l10124 5658  
                  l10116 5614                    l10108 55D2                    l10300 2466  
                  l10220 22E0                    l10212 22D0                    l10204 22C2  
                  l10070 4416                    l10062 4392                    l10054 4320  
                  l10046 42B6                    l10038 4242                    l10150 5716  
                  l10142 56DA                    l10310 249E                    l10230 22F0  
                  l10222 22E2                    l10214 22D4                    l10206 22C6  
                  l10080 4532                    l10072 4438                    l10064 43B0  
                  l10056 433E                    l10048 42D4                    l10160 575C  
                  l10152 5728                    l10136 56B8                    l10128 5674  
                  l10144 56EA                    l10320 24EA                    l10312 24C2  
                  l10240 2300                    l10232 22F4                    l10224 22E4  
                  l10216 22D8                    l10208 22C8                    l10074 449C  
                  l10066 43C4                    l10082 456C                    l10058 4356  
                  l10162 5760                    l10154 5738                    l10146 56F6  
                  l10138 56C4                    l10090 79A4                    l10330 2530  
                  l10322 2500                    l10306 2474                    l10250 2312  
                  l10242 2302                    l10234 22F8                    l10226 22E8  
                  l10218 22DC                    l10076 44C2                    l10068 43FA  
                  l10156 5748                    l10148 5700                    l10092 558A  
                  l10084 792E                    l10332 2544                    l10324 2524  
                  l10308 2488                    l10260 232A                    l10252 2314  
                  l10244 2304                    l10236 22FC                    l10228 22EC  
                  l10078 44D6                    l10158 574A                    l10094 5598  
                  l10086 7964                    l10350 2620                    l10334 255A  
                  l10318 24D6                    l10342 2592                    l10270 2382  
                  l10262 2336                    l10254 2318                    l10246 2306  
                  l10238 22FE                    l10096 55A0                    l10088 7998  
                  l10360 26A8                    l10352 2622                    l10344 25A6  
                  l10336 257E                    l10280 23C6                    l10272 2386  
                  l10264 2346                    l10256 231C                    l10248 230A  
                  l10370 26EE                    l10362 26B0                    l10346 25DA  
                  l10354 262E                    l10290 2414                    l10282 23D0  
                  l10274 238A                    l10266 2360                    l10258 2320  
                  l10194 2296                    l10372 2704                    l10380 275A  
                  l10356 2662                    l10348 260E                    l10364 26B8  
                  l10292 241E                    l10284 23DC                    l10276 239E  
                  l10268 237E                    l10196 229E                    l10390 2792  
                  l10382 2770                    l10374 2726                    l10366 26CA  
                  l10358 2696                    l10294 242A                    l10286 23EA  
                  l10278 23B0                    l10198 22AC                    l10392 27AE  
                  l10384 2778                    l10376 2734                    l10368 26DC  
                  l10296 243C                    l10288 23FE                    l10386 277C  
                  l10378 274E                    l10298 2450                    l10388 277E  
          ___fltol@sign1 00C2          __end_of___aldiv 6880          __end_of___fladd 2C86  
                  ?_main 0001          __end_of___fldiv 491C          __end_of___awdiv 6F52  
        __end_of___flneg 7F66                    STR_10 06B9                    STR_11 06D9  
                  STR_12 06D3                    STR_13 06D4                    STR_14 06D3  
                  STR_15 06C7          __end_of___awmod 72F8          __end_of___flmul 3572  
        __end_of___flsub 7EE6          __end_of___fltol 6988          __end_of___lldiv 7654  
                  u11100 2802                    u11101 27FE                    u11110 2844  
                  u11111 2840                    u11200 2976                    u11120 285A  
                  u12000 003C                    u11201 2972                    u11121 2856  
                  u12001 0038                    u11210 2994                    u11130 286C  
                  u11211 2990                    u11131 2868                    u12011 5AE6  
                  u11300 2AE4                    u11220 29B4                    u11140 287C  
                  u12100 5EE8                    u12020 5AFA                    u11301 2AE0  
                  u11221 29B0                    u11141 2878                    u12101 5EE4  
                  u12021 5AF6                    u11310 2AF4                    u11230 29C2  
                  u11150 28B8                    u12110 5F12                    u11311 2AF0  
                  u11231 29BE                    u11151 28B4                    u12111 5F0E  
                  u12031 5B1E                    u12200 459C                    u11400 2BC8  
                  u11320 2B20                    u11240 29D2                    u11160 28C6  
                  u11080 27E0                    u12120 5F80                    u12040 5B32  
                  u13000 0DE6                    _T0CON 000FD5                    u12201 4598  
                  u11401 2BC4                    u11321 2B1C                    u11241 29CE  
                  u11161 28C2                    u11081 27DC                    u12121 5F7C  
                  u12041 5B2E                    u13001 0DE2                    u12210 45AE  
                  u11410 2C02                    u11330 2B30                    u11250 2A04  
                  u11170 2934                    u11090 27F2                    u12130 5FB0  
                  u12050 5B94                    u13010 0E30                    u12211 45AA  
                  u11411 2BFE                    u11331 2B2C                    u11251 2A00  
                  u11171 2930                    u11091 27EE                    u12131 5FAC  
                  u12051 5B90                    u13011 0E2C                    u12300 4766  
                  u12220 45BE                    u11500 31C4                    u11420 2C14  
                  u11340 2B4C                    u11260 2A12                    u11180 294C  
                  u12140 5FC4                    u12060 5BBE                    u13100 1198  
                  u13020 0E68          ___awdiv@divisor 0092                    u12301 4762  
                  u12221 45BA                    u11501 31C0                    u11421 2C10  
                  u11341 2B48                    u11261 2A0E                    u11181 2946  
                  u12141 5FC0                    u12061 5BBA                    u13101 1194  
                  u13021 0E64                    u12310 478A                    u12230 4602  
                  u11510 31D6                    u11430 2C24                    u11350 2B5C  
                  u11270 2A30                    u11190 294E                    u12150 5FEC  
                  u12070 5BD2                    u13110 11BE                    u13030 0E8C  
                  u12311 4786                    u12231 45FE                    u11511 31D2  
                  u11431 2C20                    u11351 2B58                    u11271 2A2C  
                  u12151 5FE8                    u12071 5BCE                    u13111 11BA  
                  u13031 0E88                    u12400 48AA                    u12320 47A0  
                  u12240 4614                    u11600 3476                    u11520 31E6  
                  u11440 2C44                    u11360 2B6E                    u11280 2A68  
                  u12160 600C                    u12080 5BFA                    u13200 1308  
                  u13120 11D4                    u13040 0F4C                    u14000 25A6  
                  _T1CON 000FCD                    u12401 48A6                    u12321 479C  
                  u12241 4610                    u11601 3472                    u11521 31E2  
                  u11441 2C40                    u11361 2B6A                    u11281 2A64  
        __end_of___llmod 7820                    u12161 6008                    u12081 5BF6  
                  u13201 1304                    u13121 11D0                    u13041 0F48  
                  u14001 25A2                    u12410 48DA                    u12330 47BE  
                  u12250 4624                    u11610 348A                    u11530 321C  
                  u11450 2C56                    u11370 2B84                    u11290 2AAE  
                  u12170 75D6                    u12090 5C1A                    u13210 134E  
                  u13130 1212                    u13050 0F84                    u14010 25DA  
                  u12411 48D6                    u12331 47BA                    u12251 4620  
                  u11611 3486                    u11531 3218                    u11451 2C52  
                  u11371 2B80                    u11291 2AAA                    u12171 75D2  
                  u12091 5C16                    u13211 134A                    u13131 120E  
                  u13051 0F80                    u14011 25D6                    u12420 4908  
                  u12340 47DE                    u12260 4664                    u11620 34A4  
                  u11540 322C                    u12500 6A84                    u11460 2C72  
                  u11380 2B9A                    u12180 75F8                    u11700 6F1A  
                  u13300 1534                    u13220 1374                    u13140 122A  
                  u13060 0FA0                    u14100 2718                    u14020 260E  
                  u12421 4904                    u12341 47DA                    u12261 4660  
                  u11621 34A0                    u11541 3228                    u12501 6A80  
                  u11461 2C6E                    u11381 2B96                    u12181 75F4  
                  u11701 6F16                    u13301 1530                    u13221 1370  
                  u13141 1226                    u13061 0F9C                    u14101 270E  
                  u14021 260A                    u13310 6786                    u12350 47F0  
                  u12270 46A4                    u11630 34EC                    u11550 33A6  
                  u11470 3162                    u12430 7488                    u12510 7F44  
                  u11390 2BAE                    u12190 7620                    u11710 6F40  
                  u13230 1398                    u13150 1258                    u13070 0FC4  
                  u14030 2620                    u13311 6782                    u12351 47EC  
                  u12271 46A0                    u11631 34E8                    u11471 315E  
                  u12431 7484                    u12511 7F40                    u11391 2BAA  
                  u12191 761C                    u11711 6F3C                    u13231 1394  
                  u13151 1254                    u13071 0FC0                    u14031 261C  
                  u13320 67A8                    u12360 481E                    u12280 471A  
                  u11640 351A                    u11560 3400                    u11480 3174  
                  u12440 74C6                    u12520 6898                    u12600 77D0  
                  u11800 7CF4                    u11720 725A                    u13240 13BC  
                  u13160 128C                    u13080 1134                    u14120 2734  
                  u14040 2662                    u13321 67A4                    u12361 481A  
                  u12281 4716                    u11641 3516                    u11561 33FC  
                  u11481 3170                    u12441 74C2                    u12521 6894  
                  u12601 77CC                    u11801 7CF0                    u11721 7256  
                  u13241 13B8                    u13161 1288                    u13081 1130  
                  u14121 2730                    u14041 265E                    u13330 67E2  
                  u13410 0094                    u12370 4834                    u12290 473C  
                  u11650 3554                    u11570 3420                    u11490 3184  
                  u12450 74FA                    u12530 68CC                    u12610 77EE  
                  u11810 7D9C                    u11730 7274                    u13250 13E8  
                  u13170 12A8                    u13090 1164                    u14130 274E  
                  u14050 2696                    u13331 67DE                    u13411 0090  
                  u12371 4830                    u12291 4738                    u11651 3550  
                  u11571 341C                    u11555 339C                    u11491 3180  
                  u12451 74F6                    u12611 77EA                    u11811 7D98  
                  u11731 7270                    u13251 13E4                    u13171 12A4  
                  u13091 1160                    u14131 274A                    u14051 2692  
                  u13340 6804                    u13420 00A4                    u12380 4848  
                  u11580 3432                    u12700 58FE                    u12620 577E  
                  u12460 69B8                    u12540 68FA                    u11820 7DBA  
                  u11660 6EA0                    u11740 728E                    u13260 13FE  
                  u13180 12CC                    u13500 5DA4                    u14140 2770  
                  u14060 26A8                    u13341 6800                    u13405 6E6E  
                  u13421 00A0                    u12381 4844                    u11581 342E  
                  u12701 58FA                    u12621 577A                    u12461 69B4  
                  u12541 68F6                    u11821 7DB6                    u11661 6E9C  
                  u11741 728A                    u13261 13FA                    u13181 12C8  
                  u13501 5DA0                    u14141 276C                    u14061 26A4  
                  u13350 682C                    u12390 4862                    u11590 3460  
                  u12710 590C                    u12630 578C                    u12470 69F6  
                  u12550 690E                    u11830 7DD0                    u11670 6EBA  
                  u11750 72AC                    u13270 142A                    u13190 12E4  
                  u13510 5E08                    u13430 7710                    u14150 2792  
                  u14118 271C                    u14070 26CA                    u13351 6828  
                  u14207 61FE                    u12391 485E                    u11591 345C  
                  u12711 5908                    u12631 5788                    u12471 69F2  
                  u12551 690A                    u12535 68C2                    u11831 7DCC  
                  u11671 6EB6                    u11751 72A8                    u13271 1426  
                  u13191 12E0                    u13511 5E04                    u13431 770C  
                  u14151 278E                    u14071 26C6                    u13360 685E  
                  u12640 57E8                    u11840 7A00                    u12480 6A14  
                  u12560 6936                    u11920 5048                    u11680 6EE0  
                  u11760 72C2                    u13280 144E                    u12800 0802  
                  u13600 4370                    u13520 5E6E                    u13440 771E  
                  u12720 7E82                    u14080 26EE                    u13361 685A  
                  u14217 627A                    u11905 6196                    u12641 57E4  
                  u11841 79FC                    u12481 6A10                    u12561 6932  
                  u11921 5044                    u11681 6EDC                    u11761 72BE  
                  u13281 144A                    u12801 07FE                    u13601 436C  
                  u13521 5E6A                    u13441 771A                    u12721 7E7E  
                  u14081 26EA                    u12650 583E                    u12490 6A34  
                  u12570 6956                    u11930 51BC                    u11690 6EFE  
                  u11770 72E6                    u13290 150E                    u12810 088C  
                  u13610 4392                    u13530 41F2                    u13450 775E  
                  u12730 7E9C                    u14090 2704                    u14307 6458  
                  u14227 6284                    u11915 61BC                    u12651 583A  
                  u12491 6A30                    u12571 6952                    u11931 51B8  
                  u11691 6EFA                    u11771 72E2                    u13291 150A  
                  u12811 0888                    u13611 438E                    u13531 41EE  
                  u13451 775A                    u12731 7E98                    u14091 2700  
                  u13380 6E06                    u12740 7098                    u12660 5888  
                  u12580 6966                    u11780 7CBA                    u11940 39B0  
                  u12900 0B46                    u12820 08F4                    u13620 4416  
                  u13540 425E                    u13460 7770                    u13700 5622  
                  u14317 6482                    u13381 6E02                    u14237 628E  
                  u12661 5884                    u12581 6962                    u11781 7CB6  
                  u11941 39AC                    u12901 0B42                    u12821 08F0  
                  u13621 4412                    u13541 425A                    u13461 776C  
                  u13701 561E                    u13390 6E36                    u12750 70C2  
                  u12670 58A6                    u12590 77AE                    u11790 7CD8  
                  u11950 39C6                    u12910 0B7C                    u12830 0902  
                  u13630 4438                    u13550 4280                    u13470 777E  
                  u13710 5630                    u14327 649C                    u13391 6E32  
                  u13375 6DC8                    u14247 629C                    u12671 58A2  
                  u11855 7A0A                    u12591 77AA                    u11791 7CD4  
                  u11951 39C2                    u12911 0B78                    u12831 08FE  
                  u13631 4434                    u13551 427C                    u13471 777A  
                  u14167 772E                    u13711 562C                    u12760 70D2  
                  u12680 58B6                    u11960 3AF4                    u12920 0BA8  
                  u12840 0938                    u13560 429E                    u13480 778C  
                  u13800 5728                    u13720 564A                    u13640 7964  
                  u11865 62BA                    u14337 64D4                    u14257 63FE  
                  u12761 70CE                    u12681 58B2                    u11961 3AF0  
                  u12921 0BA4                    u12841 0934                    u13561 429A  
                  u14177 5EC4                    u13481 7788                    u13801 5724  
                  u13721 5646                    u13641 7960                    u13490 64BA  
                  u12690 58C4                    u11970 3BD0                    u12930 0BC6  
                  u12850 09A0                    u12770 0700                    u13570 42D4  
                  u13810 5738                    u13730 5666                    u13650 7998  
                  u11875 62D4                    u14347 64EE                    u13491 64B6  
                  u14267 6410                    u12747 708E                    u12691 58C0  
                  u11971 3BCC                    u12931 0BC2                    u12851 099C  
                  u12771 06FC                    u14187 4574                    u13571 42D0  
                  u13811 5734                    u13731 5662                    u13651 7994  
                  u11980 3CFE                    u12940 0BFC                    u12860 0A02  
                  u12780 076A                    u13580 4308                    u13820 5748  
                  u13740 5674                    u13660 55C6                    u13900 2466  
                  u14357 6332                    u11885 62FA                    u14277 6422  
                  u14197 61F4                    u12757 70B8                    u11981 3CFA  
                  u12941 0BF8                    u12861 09FE                    u12781 0766  
                  u13581 4304                    u13821 5744                    u13741 5670  
                  u13661 55C2                    u13901 2462                    u11990 002C  
                  u12950 0D26                    u12870 0A8A                    u12790 07E6  
                  u13590 433E                    u13830 575C                    u13750 568E  
                  u13670 55E0                    u13910 2488                    u14367 633C  
                  u14287 6434                    u11895 617C                    u11991 0028  
                  u12951 0D22                    u12871 0A86                    u12791 07E2  
                  u13591 433A                    u13831 5758                    u13751 568A  
                  u13671 55DC                    u13911 2484                    u12960 0D3E  
                  u12880 0ACA                    u13760 56AA                    u13680 55EE  
                  u13920 249E                    u14377 63B8                    u14297 6446  
                  u12961 0D3A                    u12881 0AC6                    u13761 56A6  
                  u13681 55EA                    u13921 249A                    u12970 0D80  
                  u12890 0AEE                    u13770 56B8                    u13690 5606  
                  u13930 24C2                    u13850 23B0                    u14387 63C2  
                  u12971 0D7C                    u12891 0AEA                    u13771 56B4  
                  u13691 5602                    u13931 24BE                    u13851 23AC  
                  u12980 0DAA                    u13780 56EA                    u13940 24EA  
                  u13860 23C6                    u14397 63D2                    u12981 0DA6  
                  u13781 56E6                    u13941 24E6                    u13861 23C2  
                  u12990 0DC2                    u13790 5716                    u13950 2500  
                  u13870 23FE                    u12991 0DBE                    u13791 5712  
                  u13951 24FC                    u13871 23FA                    u13960 2524  
                  u13880 2414                    u13961 2520                    u13881 2410  
                  u13970 2544                    u13890 2450                    u13971 2540  
                  u13891 244C                    u13980 255A                    u13981 2556  
                  u13990 257E                    u13991 257A          __end_of___lwdiv 7D14  
        __end_of___lwmod 7DEE                    i2l406 7C9C                    i2l512 5588  
                  i2l273 7244                    i2l409 7C22                    i2l442 6D94  
                  i2l450 737C                    i2l292 6770                    i2l519 41CE  
                  i2l439 5030                    i2l447 7332                    i2l632 00CA  
                  i2l289 6644                    i2l629 2294                    i2l910 6C50  
                  i2l911 6C96                    i2l904 75AC                    i2l592 1D6C  
                  i2l666 76F6                    i2l915 7FD6                    i2l659 76E6  
                  i2l863 7014                    i2l938 6B92                    i2l876 7456  
        ___awdiv@counter 0094                    i2l886 6168                    i2l895 6158  
                  i2l995 5D80                    i2l997 5CC6                    i2l998 5CF8  
                  _RCREG 000FAE                    _TMR1H 000FCF                    _TMR1L 000FCE  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
           i2__div_to_l_ 601E                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD            i2___fladd@grs 0044       __size_of_PWM1_Init 00F6  
            ?_PWM1_Start 0001       __size_ofi2_Lcd_Cmd 012C               i2isdigit@c 0003  
     __size_ofi2_Lcd_Out 00B8          __end_of_dpowers 0695               i2scale@scl 0030  
                  _count 01C1                    _linha 0669                    _scale 399C  
        __end_of_isdigit 0048                    _tecla 00EF            i2___fldiv@grs 003B  
                  _txt11 0166                    _txt12 0144                    _txt13 0211  
                  _txt21 01B2                    _txt22 0184            i2___fldiv@rem 0034  
                  _txt31 01A9                    _txt23 019D                    _txt32 0177  
                  _txt33 0191                    _txt41 0155                    _txt42 0133  
                  _txt43 0200                    _txt2e 0122                    _txt3e 0111  
       __end_ofi2___flge 6C98         __end_ofi2___fleq 75AE                    tablat 000FF5  
  i2atualizatela@estados 0074         __end_ofi2___wmul 00CC                    ttemp5 007F  
                  ttemp6 0082                    ttemp7 0086                    status 000FD8  
                  wtemp8 007F          __end_of_sprintf 1542            i2___flmul@grs 001C  
       __end_ofi2_fround 558A       __size_ofi2___fladd 04C0       __size_ofi2___fldiv 039A  
     __size_ofi2___awdiv 00C4       __size_ofi2___flneg 0038       __size_ofi2___awmod 00B0  
     __size_ofi2___flmul 042A         ??i2_atualizatela 0076       __size_ofi2___flsub 0046  
     __size_ofi2___fltol 0106       __size_ofi2___lldiv 00A4       __size_ofi2___llmod 0088  
     __size_ofi2___lwdiv 0074       __size_ofi2___lwmod 0064         __end_of_Lcd_Init 6512  
        __initialization 78A8           ??_atualizatela 01FA        i2___lldiv@divisor 0005  
           __end_of_main 27C4        i2___lldiv@counter 000D       __size_ofi2_isdigit 0032  
          i2_adc_amostra 7B2E         serial_tx_str@val 0002                   ??_main 00E2  
          __activetblptr 000002               i2sprintf@c 0073               i2sprintf@f 004F  
        tc_tecla@timeout 008F       __size_ofi2_sprintf 0D54     __size_of__tdiv_to_l_ 0158  
            ?i2___xxtofl 0001    __size_ofi2_leituraCXI 007A    __size_ofi2_leituraCXS 007A  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 0097                   ?_scale 00B1                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR1L 000FBE         ___awdiv@dividend 0090  
       __end_of_adc_init 0128                   i2l1004 5D70                   i2l1208 305E  
                 i2l1224 7F2A                   i2l1312 5AD2                   i2l1152 7D86  
                 i2l1209 304C                   i2l1081 78A6                   i2l1145 7D7E  
                 i2l1241 4AD8                   i2l1074 7896                   i2l1162 7E50  
                 i2l1330 0078                   i2l1250 4BC0                   i2l1323 5A6A  
                 i2l1155 7E48                   i2l1316 5A0E                   i2l1236 4CB4  
                 i2l1309 5976                   i2l1182 2E74                   i2l1238 4B14  
                 i2l1191 3144                   i2l1183 2E62                   i2l1247 4B5A  
                 i2l1184 2E28                   i2l1272 399A                   i2l1249 4BD2  
                 i2l1275 382C                   i2l1268 3636                   i2l1285 395C  
                 i2l1277 38A4                   i2l1278 3892                   i2l1199 2F8E  
                 i2l7000 5A78                   i2l7010 5AC0                   i2l7002 5A7A  
                 i2l7012 5AC2                   i2l7004 5A7E                   i2l7020 005E  
                 i2l5500 740C                   i2l7030 7F6E                   i2l7006 5AA2  
                 i2l7022 006E                   i2l5510 7446                   i2l5502 7422  
                 i2l7032 7F80                   i2l5600 2D86                   i2l7008 5AB2  
                 i2l5520 7D2E                   i2l7024 0072                   i2l7016 004A  
                 i2l5440 6F64                   i2l5512 744E                   i2l5504 742A  
                 i2l7034 7F82                   i2l5610 2D9A                   i2l5602 2D8A  
                 i2l5530 7D68                   i2l5522 7D36                   i2l7018 004E  
                 i2l5450 6F8A                   i2l5442 6F6C                   i2l5506 7430  
                 i2l7028 7F66                   i2l5700 2FE0                   i2l5620 2DAE  
                 i2l5612 2D9E                   i2l5604 2D8E                   i2l5532 7D70  
                 i2l5524 7D3E                   i2l5516 7D14                   i2l5540 7E00  
                 i2l5460 6FC2                   i2l5452 6F92                   i2l5444 6F70  
                 i2l5436 6F52                   i2l5508 7436                   i2l6500 664C  
                 i2l5710 300C                   i2l5702 2FE2                   i2l5630 2DC2  
                 i2l5622 2DB2                   i2l5614 2DA2                   i2l5606 2D92  
                 i2l5534 7D72                   i2l5526 7D4C                   i2l5518 7D1C  
                 i2l5550 7E3C                   i2l5542 7E08                   i2l5470 6FEE  
                 i2l5462 6FC8                   i2l5454 6FA4                   i2l5446 6F7E  
                 i2l5438 6F56                   i2l6510 674E                   i2l6502 66CA  
                 i2l5720 3044                   i2l5704 2FF0                   i2l5712 300E  
                 i2l5640 2E20                   i2l5624 2DB6                   i2l5616 2DA6  
                 i2l5608 2D96                   i2l5632 2DC6                   i2l5560 2CA2  
                 i2l6600 76D6                   i2l5800 3680                   i2l5536 7D78  
                 i2l5528 7D52                   i2l5552 7E42                   i2l5544 7E10  
                 i2l6520 52EA                   i2l5464 6FDE                   i2l5456 6FAC  
                 i2l5472 6FF4                   i2l5448 6F86                   i2l5480 73A8  
                 i2l8120 6D10                   i2l8112 6C98                   i2l6512 6756  
                 i2l6504 66D2                   _INTCON 000FF2                   i2l5730 30C2  
                 i2l5706 2FF8                   i2l5714 301C                   i2l5650 2E56  
                 i2l5642 2E36                   i2l5634 2DCA                   i2l5626 2DBA  
                 i2l5618 2DAA                   i2l5562 2CB2                   i2l5570 2CDC  
                 i2l5554 2C86                   i2l6602 76E0                   i2l6610 6048  
                 i2l5810 36D2                   i2l5802 3696                   i2l5546 7E1E  
                 i2l5538 7DEE                   i2l6530 5464                   i2l6522 52FA  
                 i2l5474 7004                   i2l5466 6FE6                   i2l5458 6FB4  
                 i2l5490 73D4                   i2l5482 73AC                   i2l8122 6D38  
                 i2l8114 6CBA                   i2l6514 6758                   i2l6506 66D4  
                 i2l8130 4CB6                   i2l6460 7B34                   i2l5740 3108  
                 i2l5724 306E                   i2l5732 30C4                   i2l5716 3020  
                 i2l5708 2FFC                   i2l5660 2EA6                   i2l5652 2E60  
                 i2l5644 2E42                   i2l5636 2DF4                   i2l5628 2DBE  
                 i2l5580 2D0C                   i2l5572 2CEC                   i2l5564 2CC2  
                 i2l5556 2C92                   i2l6620 6074                   i2l6604 601E  
                 i2l5820 3718                   i2l5812 36E0                   i2l5804 36A2  
                 i2l5548 7E34                   i2l5476 700C                   i2l5468 6FE8  
                 i2l5492 73DC                   i2l5484 73BA                   i2l6540 3DD4  
                 i2l7500 1588                   i2l8124 6D44                   i2l8116 6CC6  
                 i2l6516 6760                   i2l6508 66DC                   i2l8140 4D78  
                 i2l8132 4CD6                   i2l5902 0106                   i2l6470 7B7A  
                 i2l6462 7B3C                   i2l6702 7FA0                   i2l5750 3132  
                 i2l5742 3116                   i2l5734 30D4                   i2l5726 307A  
                 i2l5718 302E                   i2l5670 2EE2                   i2l5662 2EB6  
                 i2l5654 2E82                   i2l5646 2E46                   i2l5638 2E10  
                 i2l5590 2D4C                   i2l5582 2D1A                   i2l5574 2CF2  
                 i2l5566 2CD2                   i2l5558 2CA0                   i2l6710 6A8E  
                 i2l6630 60A4                   i2l6622 6086                   i2l6606 6034  
                 i2l5830 3786                   i2l5822 3732                   i2l5814 36EC  
                 i2l5806 36BA                   i2l6534 553C                   i2l5494 73EE  
                 i2l5486 73C2                   i2l6550 3F10                   i2l6542 3DEA  
                 i2l7510 15CC                   i2l8126 6D6C                   i2l8118 6CF4  
                 i2l6518 6762                   i2l8150 4DF2                   i2l8142 4D8E  
                 i2l8134 4D1E                   i2l6464 7B44                   i2l6704 7FB6  
                 i2l5752 3134                   i2l5744 311C                   i2l5736 30E4  
                 i2l5728 3088                   i2l5680 2F28                   i2l5672 2EF0  
                 i2l5664 2EC4                   i2l5656 2E92                   i2l5648 2E54  
                 i2l5592 2D4E                   i2l5584 2D1C                   i2l5576 2D04  
                 i2l5568 2CD4                   i2l6720 6AE4                   i2l6712 6AA4  
                 i2l6640 60E8                   i2l6632 60AE                   i2l6624 6096  
                 i2l6616 6062                   i2l6800 5D40                   i2l5840 381C  
                 i2l5832 37B0                   i2l5824 3742                   i2l5816 36FC  
                 i2l5808 36C6                   i2l5760 358C                   i2l6528 5454  
                 i2l5496 73F6                   i2l5488 73C6                   i2l6560 3FE8  
                 i2l7600 1A08                   i2l7520 164E                   i2l7512 15E8  
                 i2l7504 158E                   i2l8128 6D88                   i2l6480 659E  
                 i2l8160 4E7C                   i2l8152 4E10                   i2l8144 4DAC  
                 i2l8136 4D3A                   i2l6458 7B30                   i2l6706 7FC6  
                 i2l5746 311E                   i2l5738 3104                   i2l5690 2FA4  
                 i2l5682 2F5C                   i2l5674 2EF2                   i2l5666 2ED2  
                 i2l5586 2D2C                   i2l5594 2D56                   i2l5578 2D06  
                 i2l6722 6AF4                   i2l6810 7820                   i2l6650 6114  
                 i2l6642 60EE                   i2l6634 60CC                   i2l6626 609A  
                 i2l6618 6064                   i2l5850 385C                   i2l5842 382A  
                 i2l5834 37E6                   i2l5826 375E                   i2l5818 3708  
                 i2l5770 35C4                   i2l5762 358E                   i2l5498 73FE  
                 i2l6554 3FA8                   i2l6538 3DC6                   i2l7610 1A66  
                 i2l7602 1A14                   i2l7530 16A8                   i2l7522 1654  
                 i2l7514 1610                   i2l7506 15A6                   i2l6490 6624  
                 i2l6482 65A0                   i2l6474 6514                   i2l8170 4F5C  
                 i2l8162 4E8E                   i2l8146 4DBE                   i2l8138 4D5A  
                 i2l8154 4E26                   i2l8410 7330                   i2l6468 7B4C  
                 i2l5748 3124                   i2l5692 2FB4                   i2l5684 2F5E  
                 i2l5676 2EFC                   i2l5668 2EDE                   i2l5596 2D66  
                 i2l5588 2D3C                   i2l6732 6B1E                   i2l6724 6AF8  
                 i2l6716 6AB8                   i2l6820 7876                   i2l6812 7836  
                 i2l6660 613C                   i2l6652 611E                   i2l6644 60FC  
                 i2l6636 60DC                   i2l6628 60A0                   i2l5860 38CE  
                 i2l5852 388A                   i2l5844 383C                   i2l5836 37F4  
                 i2l5828 376A                   i2l5780 35F0                   i2l5772 35D4  
                 i2l5764 359E                   i2l5756 3572                   i2l6572 41A6  
                 i2l6548 3EFC                   i2l7700 1DAE                   i2l7604 1A1C  
                 i2l7612 1A7A                   i2l7540 16DE                   i2l7524 1660  
                 i2l7532 16CA                   i2l7516 1614                   i2l7508 15C4  
                 i2l6492 662C                   i2l6484 65A8                   i2l6476 6518  
                 i2l7460 7190                   i2l6900 4AA4                   i2l8172 4F80  
                 i2l8156 4E40                   i2l8164 4EC0                   i2l8148 4DDC  
                 i2l8420 7364                   i2l8412 7340                   i2l6670 7570  
                 i2l5686 2F6E                   i2l5678 2F02                   i2l5598 2D78  
                 i2l6750 6B82                   i2l6742 6B46                   i2l6734 6B28  
                 i2l6726 6B06                   i2l6718 6AE2                   i2l6590 768E  
                 i2l6582 7654                   i2l6822 7886                   i2l6814 783E  
                 i2l6662 6148                   i2l6654 6128                   i2l6638 60DE  
                 i2l6806 5D54                   i2l5870 3944                   i2l5862 38F8  
                 i2l5846 384A                   i2l5838 3812                   i2l5790 3646  
                 i2l5782 3600                   i2l5774 35DA                   i2l5766 35AE  
                 i2l5758 357E                   i2l6566 40FA                   i2l6558 3FD4  
                 i2l7710 1E8C                   i2l7702 1DFA                   i2l7630 1B42  
                 i2l7622 1AF4                   i2l7614 1AE8                   i2l7606 1A32  
                 i2l7550 1756                   i2l7542 1716                   i2l7534 16D2  
                 i2l7526 167C                   i2l7518 1632                   i2l6494 662E  
                 i2l6486 661A                   i2l6478 6596                   i2l7462 7194  
                 i2l6910 4B00                   i2l6902 4AB4                   i2l8174 4F92  
                 i2l8166 4EDC                   i2l8158 4E60                   i2l8422 736C  
                 i2l8414 7342                   i2l6672 7580                   i2l6664 7504  
                 i2l6680 6B94                   i2l5696 2FC8                   i2l5688 2F7E  
                 i2l6744 6B52                   i2l6736 6B32                   i2l6592 769C  
                 i2l6584 7664                   i2l6824 7890                   i2l6816 784A  
                 i2l6576 00A6                   i2l6808 5D60                   i2l6760 5C64  
                 i2l5872 3960                   i2l5880 3986                   i2l5856 38B4  
                 i2l5864 38FC                   i2l5848 384E                   i2l5792 3656  
                 i2l5784 3610                   i2l5776 35E0                   i2l5768 35BE  
                 i2l6568 410E                   i2l7800 2178                   i2l7720 1F04  
                 i2l7704 1E46                   i2l7712 1ED8                   i2l7640 1BA8  
                 i2l7632 1B70                   i2l7616 1AF0                   i2l7560 179C  
                 i2l7552 175E                   i2l7544 1728                   i2l7536 16D8  
                 i2l7528 16A4                   i2l6496 6636                   i2l6488 6622  
                 i2l7480 7214                   i2l7464 719E                   i2l7472 71BC  
                 i2l6920 4B40                   i2l6912 4B02                   i2l6904 4AC8  
                 i2l6840 4948                   i2l6832 491C                   i2l8176 4FEA  
                 i2l8168 4EFC                   i2l8424 7378                   i2l8416 734A  
                 i2l8408 7322                   i2l6674 75A4                   i2l6666 7532  
                 i2l6690 6C1E                   i2l6682 6BC2                   i2l5698 2FD2  
                 i2l6826 7EE6                   i2l6746 6B62                   i2l6594 76A6  
                 i2l6586 767A                   i2l6818 7858                   i2l6578 00C2  
                 i2l6770 5C9C                   i2l6754 5C2C                   i2l5882 398A  
                 i2l5874 3970                   i2l5866 3916                   i2l5858 38C0  
                 i2l5786 3620                   i2l5778 35EE                   i2l7810 21C6  
                 i2l7802 217C                   i2l7730 1F4E                   i2l7714 1EEE  
                 i2l7706 1E7A                   i2l7650 1BEA                   i2l7642 1BC6  
                 i2l7634 1B76                   i2l7626 1B2E                   i2l7570 181A  
                 i2l7562 17CE                   i2l7554 176C                   i2l7546 1736  
                 i2l7722 1F1A                   i2l7490 1542                   i2l6498 6648  
                 i2l7466 71A8                   i2l7474 71E2                   i2l6930 4B7C  
                 i2l6922 4B4A                   i2l6914 4B12                   i2l6906 4AD6  
                 i2l6850 4982                   i2l6842 4958                   i2l6834 4928  
                 i2l7482 7C24                   i2l8178 5020                   i2l8418 7350  
                 i2l6676 75AA                   i2l6668 7542                   i2l6692 6C30  
                 i2l6684 6BD2                   i2l6828 7EF6                   i2l6748 6B72  
                 i2l6596 76C4                   i2l6588 7682                   i2l6780 5CD0  
                 i2l6772 5CA8                   i2l6756 5C50                   i2l5876 397E  
                 i2l5868 392A                   i2l5796 366A                   i2l5788 3626  
                 i2l7812 223C                   i2l7804 2194                   i2l7732 1F5E  
                 i2l7724 1F34                   i2l7716 1EFA                   i2l7708 1E88  
                 i2l7644 1BD2                   i2l7652 1BF0                   i2l7660 1C24  
                 i2l7636 1B94                   i2l7628 1B30                   i2l7580 18AC  
                 i2l7572 1828                   i2l7564 17DC                   i2l7556 1790  
                 i2l7548 173E                   i2l7820 2288                   i2l7492 154E  
                 i2l7476 71EC                   i2l7468 71B2                   i2l6940 4BEE  
                 i2l6932 4B8A                   i2l6924 4B58                   i2l6916 4B24  
                 i2l6908 4AE2                   i2l6860 49AE                   i2l6852 4988  
                 i2l6844 4968                   i2l6836 4936                   i2l7484 7C32  
                 i2l6694 6C3E                   i2l6686 6C00                   i2l6598 76D4  
                 i2l6790 5D14                   i2l6782 5CEA                   i2l6774 5CB8  
                 i2l6766 5C8C                   i2l5878 3980                   i2l5798 3676  
                 i2l7806 21B2                   i2l7750 1FCA                   i2l7734 1F70  
                 i2l7726 1F3C                   i2l7718 1EFE                   i2l7670 1CBC  
                 i2l7662 1C3E                   i2l7654 1C0E                   i2l7646 1BDA  
                 i2l7638 1B9A                   i2l7590 1942                   i2l7582 18B6  
                 i2l7574 182E                   i2l7566 17E2                   i2l7558 1794  
                 i2l7494 1560                   i2l7478 7210                   i2l6950 4C5A  
                 i2l6942 4BFC                   i2l6934 4BB8                   i2l6918 4B3A  
                 i2l6926 4B6A                   i2l6870 49E8                   i2l6862 49BE  
                 i2l6854 498E                   i2l6846 496A                   i2l6838 4938  
                 i2l7486 7BAA                   i2l6696 6C8E                   i2l6688 6C10  
                 i2l6784 5CF6                   i2l6776 5CBC                   i2l6768 5C8E  
                 i2l7808 21BE                   i2l7816 224C                   i2l7760 2032  
                 i2l7752 1FDC                   i2l7744 1F8E                   i2l7736 1F86  
                 i2l7728 1F4A                   i2l7680 1D24                   i2l7672 1CF0  
                 i2l7664 1C5C                   i2l7656 1C1A                   i2l7648 1BE6  
                 i2l7592 195E                   i2l7584 18E8                   i2l7576 1846  
                 i2l7568 17FE                   i2l7496 156C                   i2l6960 4CA8  
                 i2l6952 4C74                   i2l6944 4C26                   i2l6928 4B78  
                 i2l6872 49FE                   i2l6864 49CE                   i2l6856 499C  
                 i2l6848 4972                   i2l7488 7BB8                   i2l6698 6C94  
                 i2l6970 5922                   i2l6786 5D00                   i2l6778 5CC2  
                 i2l7770 2094                   i2l7762 2044                   i2l7754 2000  
                 i2l7738 1F8A                   i2l7690 1D70                   i2l7682 1D28  
                 i2l7666 1C68                   i2l7658 1C1E                   i2l7594 1990  
                 i2l7578 187A                   i2l7586 18EC                   i2l7498 1574  
                 i2l7818 2266                   i2l6962 4CAA                   i2l6954 4C90  
                 i2l6938 4BE2                   i2l6946 4C2A                   i2l6890 4A52  
                 i2l6874 4A0E                   i2l6882 4A2E                   i2l6866 49D0  
                 i2l6858 499E                   i2l6972 5932                   i2l6796 5D2C  
                 i2l6788 5D06                   i2l7780 20E0                   i2l7772 20A0  
                 i2l7764 2062                   i2l7756 2008                   i2l7748 1FC8  
                 i2l7692 1D78                   i2l7684 1D2E                   i2l7668 1C70  
                 i2l7676 1D02                   i2l7596 19BA                   i2l7588 1908  
                 i2l6956 4C94                   i2l6948 4C44                   i2l6892 4A6C  
                 i2l6884 4A3E                   i2l6876 4A16                   i2l6868 49D8  
                 i2l6990 59F8                   i2l6982 59B0                   i2l6974 5940  
                 i2l6798 5D36                   i2l7790 212E                   i2l7782 20EE  
                 i2l7774 20A8                   i2l7766 2068                   i2l7758 202C  
                 i2l7694 1D88                   i2l7686 1D48                   i2l7678 1D18  
                 i2l7598 19D6                   i2l6958 4CA2                   i2l6894 4A7C  
                 i2l6886 4A3E                   i2l6878 4A1A                   i2l6992 5A04  
                 i2l6984 59B8                   i2l6976 5986                   i2l7792 213A  
                 i2l7784 210C                   i2l7776 20CC                   i2l7768 2076  
                 i2l7696 1D94                   i2l7688 1D64                   i2l6896 4A8C  
                 i2l6994 5A40                   i2l6986 59C4                   i2l6978 599C  
                 i2l7794 213E                   i2l7786 2118                   i2l7778 20D8  
                 i2l7698 1D98                   i2l6898 4A9C                   i2l6996 5A4C  
                 i2l6988 59F6                   i2l7788 211C                   i2l7796 215A  
                 i2l6998 5A5A                   i2l7798 216C                ??i2_scale 002C  
              ??_Lcd_Cmd 008A                   u845_41 5C3C                   u847_41 5C74  
              ??_Lcd_Out 0090         __end_of___xxtofl 5920           _transmitedados 6C98  
 __size_ofi2__tdiv_to_l_ 0156           i2___fladd@aexp 0042           i2___fladd@bexp 0043  
           i2_scale$2227 002C         __end_of__powers_ 0635             ?_serial_init 0001  
                 ___flge 6988                   ___fleq 7458        __end_of_PWM1_Init 6E8C  
            ?_Lcd_Chr_CP 0001        __end_ofi2_Lcd_Cmd 6772                ??___aldiv 0092  
              ??___fladd 00C6                   ___wmul 7FD8        __end_ofi2_Lcd_Out 7246  
              ??___fldiv 00B9                ??___awdiv 0094                ??___flneg 008E  
    __size_of_PWM1_Start 002C                ??___awmod 008E                ??___flmul 00A0  
              ??___flsub 00D6                ??___fltol 00BE         __end_of_maketela 5ED0  
              ??___lldiv 0092                ??___llmod 009F                ??___lwdiv 0093  
              ??___lwmod 008E                   _minCXI 00ED                   _minCXS 00EB  
                 _count2 01BF           ?i2_adc_amostra 0001             i2_leituraCXI 7C24  
           i2_leituraCXS 7BAA                   _fround 5032                   clear_0 7900  
                 clear_1 790C                   clear_2 7918         ___awdiv@quotient 0096  
         i2___fldiv@aexp 0040           i2___fldiv@bexp 003F          ___awmod@divisor 008C  
         i2___fldiv@sign 0038          ___awmod@counter 008E                   _states 00F0  
       __end_of_tc_tecla 5768           i2___awdiv@sign 000C             __pdataCOMRAM 007D  
      __end_ofi2___fladd 3146                ??_isdigit 008A        __end_ofi2___fldiv 4CB6  
      __end_ofi2___awdiv 7016        __end_ofi2___flneg 7FD8        __end_ofi2___awmod 7458  
      __end_ofi2___flmul 399C        __end_ofi2___flsub 7F2C        __end_ofi2___fltol 6B94  
      __end_ofi2___lldiv 76F8        __end_ofi2___llmod 78A8        __end_ofi2___lwdiv 7D88  
           __mediumconst 0000        __end_ofi2___lwmod 7E52         __end_of_testeMin 79B0  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      _atualizatela$1957 01FC           i2___awmod@sign 0006                ??_sprintf 00DE  
         i2___flmul@aexp 0020           i2___flmul@bexp 0021           i2___flmul@sign 001B  
         i2___flmul@temp 0026           i2___flmul@prod 0022               ___flge@ff1 008A  
             ___flge@ff2 008E             ___xxtofl@arg 0094        __end_ofi2_isdigit 007A  
 __end_of_transmitedados 6D96             ___xxtofl@exp 0093             ___xxtofl@val 008A  
             ___fleq@ff1 008A               ___fleq@ff2 008E               __accesstop 0080  
__end_of__initialization 7920           i2___fltol@exp1 0031               ___flneg@f1 008A  
          i2sprintf@flag 0069            i2sprintf@eexp 0067            i2sprintf@fval 006D  
          ___rparam_used 000001            i2sprintf@prec 0071               ___fltol@f1 00BA  
      __end_ofi2_sprintf 2296       i2__tdiv_to_l_@exp1 0011        i2___llmod@divisor 0012  
     i2__tdiv_to_l_@cntr 0010        i2___llmod@counter 0016       i2__tdiv_to_l_@quot 000C  
    __size_ofi2___xxtofl 01B4       i2___lwmod@dividend 0001           __pcstackCOMRAM 0001  
     i2___lldiv@dividend 0001             __pidataBANK1 70D4             __pidataBANK2 00CC  
         i2_sprintf$2228 0059            __end_of_linha 066D            __end_of_scale 3DC4  
  __end_of_serial_tx_str 7FA0                ?i2___flge 0001                ?i2___fleq 0001  
              ?i2___wmul 0001            i2__tdiv_to_l_ 5C2C               __div_to_l_ 5ED0  
              ?i2_fround 0028                ?_Lcd_Init 0001     __end_of_atualizatela 4580  
        __div_to_l_@exp1 0097          __div_to_l_@cntr 0096                  ??_scale 00B5  
        __div_to_l_@quot 0092             sprintf@width 01EF       __size_of_atraso_ms 004C  
    __size_of_Lcd_Chr_CP 013E       i2___lldiv@quotient 0009               __pbssBANK0 00E3  
             __pbssBANK1 01B9               __pbssBANK2 0222              i2sprintf@ap 005D  
     i2adc_amostra@canal 0007              i2sprintf@sp 004D         i2__tdiv_to_l_@f1 0001  
       i2__tdiv_to_l_@f2 0005          ?_transmitedados 0001      atualizatela@estados 01F8  
            tc_tecla@ret 0094              tc_tecla@tmp 0091            __div_to_l_@f1 008A  
          __div_to_l_@f2 008E                  ?___flge 008A                  ?___fleq 008A  
        ??i2_adc_amostra 0003                  ?___wmul 008A            ??_adc_amostra 008C  
                _CCP1CON 000FBD                  ?_fround 00B1                ?_adc_init 0001  
         ?i2__tdiv_to_l_ 0001       __size_of_serial_rx 009E               ??i2___flge 0009  
     __size_of_serial_tx 0016               ??i2___fleq 0009               ??i2___wmul 0005  
                _INTCON2 000FF1                ?___xxtofl 008A               ??i2_fround 002C  
           ??_PWM1_Start 008A               ??_Lcd_Init 008D                ?_maketela 0092  
                i2_scale 3DC4                  _Lcd_Cmd 62A8                  _Lcd_Out 7016  
              ?_tc_tecla 008F          i2___fladd@signs 0041        __end_of__npowers_ 0669  
                __Hparam 0000               _scale$1960 00B5                  __Lparam 0000  
              ?_testeMin 0001                  ___aldiv 6772          __size_of___flge 0106  
        __size_of___fleq 00AC            ?i2_Lcd_Chr_CP 0001                  ___fladd 27C4  
                ___fldiv 4580                  ___awdiv 6E8C                  ___flneg 7F2C  
                ___awmod 7246                  ___flmul 3146                  ___flsub 7E9E  
                ___fltol 6880                  ___lldiv 75AE          __size_of___wmul 0028  
                ___llmod 7796               _leituraCXI 7AB0                  ___lwdiv 7C9E  
             _leituraCXS 7A32                  ___lwmod 7D88       __end_of_PWM1_Start 00A6  
   __size_of_serial_init 0016        __end_of_atraso_ms 7E9E             __psmallconst 0600  
                __pcinit 78A8          __size_of_fround 02B6                  __ramtop 0600  
             ??_adc_init 008A                  __ptext0 2296                  __ptext1 792E  
                __ptext2 558A                  __ptext3 7E52                  __ptext4 76F8  
                __ptext5 00EE                  __ptext6 5D82                  __ptext7 41D0  
                __ptext8 06E0                  __ptext9 399C            i2_fround$2225 0030  
          i2_fround$2226 002C              ?__div_to_l_ 008A                  _dpowers 066D  
              _T2CONbits 000FCA             i2fround@prec 0034      __end_of_adc_amostra 7A32  
                _isdigit 0012             __size_of_isr 73A0             ??i2___xxtofl 0005  
             ??___xxtofl 008E         ___awmod@dividend 008A         ___aldiv@dividend 008A  
            serial_rx@to 008D                  _sprintf 06E0           __pintcode_body 72F8  
   end_of_initialization 7920               ??_maketela 0094            __Lmediumconst 0000  
                int_func 72F8      i2___wmul@multiplier 0001                i2u1000_40 202C  
              i2u1000_41 2028                i2u1001_40 2044                i2u1001_41 2040  
      __end_of_serial_rx 7796                i2u1010_40 216C                i2u1002_40 2062  
      __end_of_serial_tx 011A                i2u1010_41 2168                i2u1002_41 205E  
              i2u1011_40 2194                i2u1003_40 2076                i2u1011_41 2190  
              i2u1003_41 2072                i2u1012_40 21B2                i2u1004_40 2094  
              i2u1012_41 21AE                i2u1004_41 2090                i2u1013_40 2266  
              i2u1005_40 20CC                i2u1013_41 2262                i2u1005_41 20C8  
              i2u1014_40 2288                i2u1006_40 20EE                i2u1014_41 2284  
              i2u1006_41 20EA                i2u1007_40 210C                i2u1007_41 2108  
          i2Lcd_Cmd@data 0003                i2u1008_40 212E                i2u1008_41 212A  
              i2u1009_40 2156                i2u1105_40 7330                i2u1009_41 2152  
              i2u1105_41 732C                i2u1106_40 7340                i2u1106_41 733C  
              i2u1107_40 7364                i2u1107_41 7360                i2u1070_40 4E60  
              i2u1062_40 4CD6                i2u1070_41 4E5C                i2u1062_41 4CD2  
              i2u1071_40 4EDC                i2u1063_40 4D3A                i2u1071_41 4ED8  
              i2u1063_41 4D36                i2u1072_40 4EFC                i2u1064_40 4D5A  
              i2u1072_41 4EF8                i2u1064_41 4D56                i2u1065_40 4D78  
              i2u1065_41 4D74                i2u1066_40 4DAC                i2u1066_41 4DA8  
              i2u1067_40 4DDC           i2___xxtofl@arg 000B                i2u1067_41 4DD8  
              i2u1068_40 4E10                i2u1068_41 4E0C                i2u1069_40 4E40  
              i2u1069_41 4E3C           i2___xxtofl@exp 000A                i2u1440_47 5026  
              i2u1441_47 66CC           i2___xxtofl@val 0001                i2u1450_47 6630  
              i2u1442_47 66D6                i2u1451_47 663C                i2u1443_47 6750  
              i2u1444_47 675A                i2u1445_47 6768                i2u1446_47 6598  
              i2u1447_47 65A2                i2u1448_47 661C                i2u1449_47 6626  
             ??_tc_tecla 0091          ___lldiv@divisor 008E          ___lldiv@counter 0096  
         ??i2_Lcd_Chr_CP 0001                _RCSTAbits 000FAB       __end_ofi2___xxtofl 5AD4  
       ___aldiv@quotient 0094             ??_Lcd_Chr_CP 008A               ??_testeMin 0096  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE           __tdiv_to_l_@f1 008A           __tdiv_to_l_@f2 008E  
        ??i2__tdiv_to_l_ 0009            ??__tdiv_to_l_ 0092                _PWM1_Init 6D96  
              i2_Lcd_Cmd 6646                i2_Lcd_Out 718E                _PORTCbits 000F82  
              _PORTDbits 000F83                _PORTEbits 000F84    __size_of_atualizatela 03B0  
            ___fladd@grs 00CD            ___xxtofl@sign 0092            i2Lcd_Out@data 0008  
              _TRISCbits 000F94                _TRISDbits 000F95                _TRISEbits 000F96  
            ___fldiv@grs 00C4              ___fldiv@rem 00BD          i2___fltol@sign1 0030  
              i2___fladd 2C86                i2___fldiv 491C                i2___awdiv 6F52  
              i2___flneg 7FA0                i2___awmod 73A8                i2___flmul 3572  
              i2___flsub 7EE6                i2___fltol 6A8E        i2___lwdiv@divisor 0008  
              i2___lldiv 7654                i2___llmod 7820                i2___lwdiv 7D14  
              i2___lwmod 7DEE        i2___lwdiv@counter 000C       __end_of_Lcd_Chr_CP 62A8  
            ___flmul@grs 00A6           i2sprintf@width 006B                _TXSTAbits 000FAC  
     i2___llmod@dividend 000E       i2___awdiv@dividend 0007                i2_isdigit 0048  
    __size_of__div_to_l_ 014E           serial_tx_str@i 0004             _atualizatela 41D0  
              i2_sprintf 1542              ?_leituraCXI 0001              ?_leituraCXS 0001  
         __end_of___flge 6A8E           __end_of___fleq 7504              _adc_amostra 79B0  
             atraso_ms@i 008C               atraso_ms@j 008E           __end_of___wmul 8000  
            _BAUDCONbits 000FB8            __pidataCOMRAM 718D               ?_PWM1_Init 0098  
             ?i2_Lcd_Cmd 0001  __size_ofi2_atualizatela 037C               ?i2_Lcd_Out 0004  
         __end_of_fround 52E8         i2___wmul@product 0005        __size_ofi2___flge 0104  
    start_initialization 78A8        __size_ofi2___fleq 00AA       i2___awdiv@quotient 000D  
      __size_ofi2___wmul 0026      __end_of__tdiv_to_l_ 5C2C         ??_transmitedados 0074  
            __end_of_isr 73A8               ?i2___fladd 0035               ?i2___fldiv 0028  
      __size_ofi2_fround 02A2               ?i2___awdiv 0007               ?i2___flneg 0001  
             ?i2___awmod 0001               ?i2___flmul 000F               ?i2___flsub 0045  
             ?i2___fltol 0028               ?i2___lldiv 0001               ?i2___llmod 000E  
          Lcd_Out@buffer 008E               ?i2___lwdiv 0006               ?i2___lwmod 0001  
      __size_of_Lcd_Init 0134          ___llmod@divisor 009B          ___llmod@counter 009F  
             ?i2_isdigit 0001                 ??___flge 0092                 ??___fleq 0092  
               ??___wmul 008E               ?i2_sprintf 004D              __pdataBANK1 0100  
            __pdataBANK2 0200                 ??_fround 00B5            sprintf@tmpval 01E3  
              ___fladd@a 00C2                ___fladd@b 00BE               fround@prec 00BD  
          ?i2__div_to_l_ 0001                ___fldiv@a 00B5                ___fldiv@b 00B1  
      __size_of_adc_init 000E                ___flmul@a 009C                ___flmul@b 0098  
            __pbssCOMRAM 007C             i2sprintf@val 0063                ___flsub@a 00D2  
              ___flsub@b 00CE            __pcstackBANK0 0080            __pcstackBANK1 01DD  
          __pcstackBANK2 0238        i2___lwmod@divisor 0003        __size_of___xxtofl 01B8  
      i2___lwmod@counter 0005     __end_ofi2_Lcd_Chr_CP 6646             _isdigit$1745 008B  
    __size_of_leituraCXI 007E      __size_of_leituraCXS 007E                 ?i2_scale 0028  
               ?_Lcd_Cmd 0001   __size_of_serial_tx_str 003A              sprintf@flag 01ED  
               ?_Lcd_Out 008D              sprintf@eexp 01EB              sprintf@fval 01F1  
            sprintf@prec 01F5        __size_of_maketela 014E               tc_tecla@to 0092  
       ___lwdiv@dividend 008F        __size_of_tc_tecla 01DE         i2Lcd_Chr_CP@data 0003  
              __pintcode 0008                 ?___aldiv 008A                 ?___fladd 00BE  
               ?___fldiv 00B1                 ?___awdiv 0090                 ?___flneg 008A  
               ?___awmod 008A                 ?___flmul 0098                 ?___flsub 00CE  
               ?___fltol 00BA                _flag_safe 01BD                 ?___lldiv 008A  
               ?___llmod 0097                __npowers_ 0635                 ?___lwdiv 008F  
               ?___lwmod 008A    __end_ofi2_adc_amostra 7BAA        __size_of_testeMin 0082  
            ??_PWM1_Init 009A                _buffer_rx 0222              ??i2_Lcd_Cmd 0001  
              _buffer_tx 01C3              __tdiv_to_l_ 5AD4              ??i2_Lcd_Out 0007  
         ??i2__div_to_l_ 0009             ??__div_to_l_ 0092                _atraso_ms 7E52  
            __smallconst 0600                 ?_isdigit 0001         ___lwdiv@quotient 0094  
            ??i2___fladd 003D              ??i2___fldiv 0030              ??i2___awdiv 000B  
            ??i2___flneg 0005              ??i2___awmod 0005                 ?_sprintf 00D6  
            ??i2___flmul 0017              ??i2___flsub 004D              ??i2___fltol 002C  
            ??i2___lldiv 0009           __size_of_scale 0428              ??i2___llmod 0016  
            ??i2___lwdiv 000A              ??i2___lwmod 0005               PWM1_Init@f 0098  
         atraso_ms@valor 008A          ___aldiv@divisor 008E          ___aldiv@counter 0092  
         ___wmul@product 008E            PWM1_Init@temp 009E              ??i2_isdigit 0001  
               _PIR1bits 000F9E       __end_of__div_to_l_ 601E                 i2u700_40 3600  
               i2u700_41 35FC                 i2u701_40 3610                 i2u701_41 360C  
          ??_serial_init 008A                 i2u710_40 38B4                 i2u702_40 3646  
               i2u710_41 38B0                 i2u702_41 3642                 i2u711_40 38CE  
               i2u703_40 3656                 i2u711_41 38CA                 i2u703_41 3652  
               i2u712_40 3916                 i2u704_40 37D0                 i2u640_40 6F7E  
               i2u712_41 3912                 i2u640_41 6F7A                 i2u704_45 37C6  
               i2u713_40 3944                 i2u705_40 382A                 i2u641_40 6FA4  
               i2u713_41 3940                 i2u705_41 3826                 i2u641_41 6FA0  
               i2u714_40 397E                 i2u706_40 384A                 i2u642_40 6FC2  
               i2u650_40 7446                 i2u714_41 397A                 i2u706_41 3846  
               i2u642_41 6FBE                 i2u650_41 7442                 i2u810_45 666E  
               i2u707_40 385C                 i2u651_40 7D2E                 i2u643_40 6FDE  
               i2u707_41 3858                 i2u651_41 7D2A                 i2u643_41 6FDA  
               i2u811_45 6694                 i2u804_40 7B7A                 i2u660_40 2D04  
               i2u820_40 769C                 i2u708_40 388A                 i2u652_40 7D4C  
               i2u812_40 52FA                 i2u644_40 7004                 i2u804_41 7B76  
               i2u660_41 2D00                 i2u820_41 7698                 i2u708_41 3886  
               i2u652_41 7D48                 i2u812_41 52F6                 i2u644_41 7000  
               i2u717_40 0118                 i2u661_40 2D1A                 i2u821_40 76C4  
               i2u709_40 38A0                 i2u653_40 7D68                 i2u813_40 5464  
               i2u645_40 73BA                 i2u717_41 0114                 i2u661_41 2D16  
               i2u821_41 76C0                 i2u709_41 389C                 i2u653_41 7D64  
               i2u813_41 5460                 i2u645_41 73B6                 i2u805_45 7B82  
               i2u830_40 7570                 i2u670_40 2E54                 i2u662_40 2D2C  
               i2u822_40 6034                 i2u654_40 7E00                 i2u646_40 73D4  
               i2u814_40 3DD4                 i2u830_41 756C                 i2u670_41 2E50  
               i2u662_41 2D28                 i2u822_41 6030                 i2u654_41 7DFC  
               i2u646_41 73D0                 i2u814_41 3DD0                 i2u806_45 6520  
               i2u831_40 75A4                 i2u671_40 2E74                 i2u663_40 2D3C  
               i2u823_40 605E                 i2u655_40 7E1E                 i2u639_40 6F64  
               i2u647_40 73EE                 i2u815_40 3DEA                 i2u831_41 75A0  
               i2u671_41 2E70                 i2u663_41 2D38                 i2u823_41 605A  
               i2u655_41 7E1A                 i2u639_41 6F60                 i2u647_41 73EA  
               i2u815_41 3DE6                 i2u807_45 653A                 i2u832_40 6BC2  
               i2u680_40 2FB4                 i2u672_40 2E82                 i2u664_40 2D78  
               i2u840_40 6B06                 i2u824_40 60CC                 i2u656_40 7E34  
               i2u648_40 740C                 i2u816_40 3F10                 i2u832_41 6BBE  
               i2u680_41 2FB0                 i2u672_41 2E7E                 i2u664_41 2D74  
               i2u840_41 6B02                 i2u824_41 60C8                 i2u656_41 7E30  
               i2u648_41 7408                 i2u816_41 3F0C                 i2u808_45 6560  
              _serial_rx 76F8                 i2u833_40 6C00                 i2u681_40 2FE0  
               i2u673_40 2E92                 i2u665_40 2D86                 i2u657_40 2CA0  
               i2u841_40 6B1A                 i2u825_40 60FC                 i2u649_40 7422  
               i2u817_40 3FE8                 i2u833_41 6BFC                 i2u681_41 2FDC  
               i2u673_41 2E8E                 i2u665_41 2D82                 i2u657_41 2C9C  
               i2u841_41 6B16                 i2u825_41 60F8                 i2u649_41 741E  
               i2u817_41 3FE4                _serial_tx 0104                 i2u809_45 6654  
               i2u834_40 6C1E                 i2u690_40 30C2                 i2u682_40 2FF0  
               i2u674_40 2EC4                 i2u666_40 2DF4                 i2u658_40 2CB2  
               i2u842_40 6B42                 i2u826_40 6110                 i2u850_40 5D14  
               i2u818_40 410E                 i2u834_41 6C1A                 i2u690_41 30BE  
               i2u682_41 2FEC                 i2u674_41 2EC0                 i2u666_41 2DF0  
               i2u658_41 2CAE                 i2u842_41 6B3E                 i2u826_41 610C  
               i2u850_41 5D10                 i2u818_41 410A                 i2u835_40 6C3E  
               i2u691_40 30D4                 i2u683_40 300C                 i2u675_40 2ED2  
               i2u667_40 2E0C                 i2u659_40 2CC2                 i2u843_40 6B62  
               i2u819_40 767A                 i2u827_40 6138                 i2u851_40 5D28  
               i2u835_41 6C3A                 i2u691_41 30D0                 i2u683_41 3008  
               i2u675_41 2ECE                 i2u667_41 2E06                 i2u659_41 2CBE  
               i2u843_41 6B5E                 i2u819_41 7676                 i2u827_41 6134  
               i2u851_41 5D24                 i2u836_40 6C8E                 i2u692_40 30E4  
               i2u684_40 301C                 i2u676_40 2EF0                 i2u668_40 2E0E  
               i2u844_40 6B72                 i2u828_40 6158                 i2u852_40 5D50  
               i2u860_40 499C                 i2u836_41 6C8A                 i2u692_41 30E0  
               i2u684_41 3018                 i2u676_41 2EEC                 i2u844_41 6B6E  
               i2u828_41 6154                 i2u852_41 5D4C                 i2u860_41 4998  
               i2u829_40 7532                 i2u837_40 7FB6                 i2u693_40 3104  
               i2u685_40 302E                 i2u677_40 2F28                 i2u669_40 2E36  
               i2u853_40 5D70                 i2u861_40 49AE                 i2u829_41 752E  
               i2u837_41 7FB2                 i2u693_41 3100                 i2u685_41 302A  
               i2u677_41 2F24                 i2u669_41 2E32                 i2u853_41 5D6C  
               i2u861_41 49AA                 i2u694_40 3116                 i2u686_40 3044  
               i2u678_40 2F6E                 i2u838_40 6AA4                 i2u854_40 7836  
               i2u846_40 5C50                 i2u870_40 4B58                 i2u862_40 49BE  
               i2u694_41 3112                 i2u686_41 3040                 i2u678_41 2F6A  
               i2u838_41 6AA0                 i2u854_41 7832                 i2u846_41 5C4C  
               i2u870_41 4B54                 i2u862_41 49BA                 i2u695_40 3132  
               i2u687_40 305A                 i2u679_40 2FA4                 i2u839_40 6AD8  
               i2u855_40 7858                 i2u871_40 4B78                 i2u863_40 49FE  
               i2u695_41 312E                 i2u687_41 3056                 i2u679_41 2FA0  
               i2u855_41 7854                 i2u871_41 4B74                 i2u863_41 49FA  
               i2u839_45 6ACE                 i2u688_40 306E                 i2u856_40 7876  
               i2u880_40 5932                 i2u848_40 5C88                 i2u696_40 358C  
               i2u960_40 7244                 i2u872_40 4B8A                 i2u864_40 4A3E  
               i2u688_41 306A                 i2u856_41 7872                 i2u880_41 592E  
               i2u848_41 5C84                 i2u696_41 3588                 i2u960_41 7240  
               i2u872_41 4B86                 i2u864_41 4A3A                 i2u689_40 3088  
               i2u881_40 5940                 i2u849_40 5CEA                 i2u697_40 359E  
               i2u961_40 1560                 i2u873_40 4BB8                 i2u865_40 4AB4  
               i2u857_40 4936                 i2u689_41 3084                 i2u881_41 593C  
               i2u849_41 5CE6                 i2u697_41 359A                 i2u961_41 155C  
               i2u873_41 4BB4                 i2u865_41 4AB0                 i2u857_41 4932  
               i2u882_40 599C                 i2u698_40 35AE                 i2u890_40 005E  
               i2u970_40 1828                 i2u962_40 15C4                 i2u874_40 4BCE  
               i2u866_40 4AD6                 i2u858_40 4948                 i2u882_41 5998  
               i2u698_41 35AA                 i2u890_41 005A                 i2u970_41 1824  
               i2u962_41 15C0                 i2u874_41 4BCA                 i2u866_41 4AD2  
               i2u858_41 4944                 i2u883_40 59F2                 i2u699_40 35EE  
               i2u891_40 006E                 i2u971_40 18AC                 i2u963_40 1632  
               i2u875_40 4BE2                 i2u867_40 4B00                 i2u859_40 4958  
               i2u883_41 59EE                 i2u699_41 35EA                 i2u891_41 006A  
               i2u971_41 18A8                 i2u963_41 162E                 i2u875_41 4BDE  
               i2u867_41 4AFC                 i2u859_41 4954                 i2u892_40 7F9E  
               i2u884_40 5A3C                 i2u980_40 1B42                 i2u972_40 18E8  
               i2u964_40 164E                 i2u876_40 4BFC                 i2u868_40 4B24  
               i2u892_41 7F9A                 i2u884_41 5A38                 i2u980_41 1B3E  
               i2u972_41 18E4                 i2u964_41 164A                 i2u876_41 4BF8  
               i2u868_41 4B20                 i2u885_40 5A5A                 i2u981_40 1B70  
               i2u973_40 1908                 i2u965_40 16C6                 i2u877_40 4C44  
               i2u869_40 4B3A                 i2u885_41 5A56                 i2u981_41 1B6C  
               i2u973_41 1904                 i2u965_41 16C2                 i2u877_41 4C40  
               i2u869_41 4B36                 i2u886_40 5A6A                 i2u990_40 1D64  
               i2u982_40 1B94                 i2u974_40 195E                 i2u966_40 1728  
               i2u958_40 720C                 i2u878_40 4C74                 i2u886_41 5A66  
               i2u990_41 1D60                 i2u982_41 1B90                 i2u974_41 195A  
               i2u966_41 1724                 i2u878_41 4C70                 i2u958_47 7202  
               i2u887_40 5A78                 i2u991_40 1D88                 i2u983_40 1BA8  
               i2u975_40 1990                 i2u967_40 1736                 i2u959_40 7234  
               i2u879_40 4CA2                 i2u887_41 5A74                 i2u991_41 1D84  
               i2u983_41 1BA4                 i2u975_41 198C                 i2u967_41 1732  
               i2u879_41 4C9E                 i2u959_47 722A                 i2u888_40 5AB2  
               i2u992_40 1EEA                 i2u984_40 1BC6                 i2u976_40 19BA  
               i2u968_40 176C                 i2u888_41 5AAE                 i2u992_41 1EE6  
               i2u984_41 1BC2                 i2u976_41 19B6                 i2u968_41 1768  
               i2u889_40 5AC0                 i2u993_40 1F16                 i2u985_40 1C0A  
               i2u977_40 19D6                 i2u969_40 17CE                 i2u889_41 5ABC  
               i2u993_41 1F12                 i2u985_41 1C06                 i2u977_41 19D2  
               i2u969_41 17CA                _tensaoCXI 00E7                 i2u994_40 1F4A  
               i2u986_40 1C3E                 i2u978_40 1A08                 i2u994_41 1F46  
               i2u986_41 1C3A                 i2u978_41 1A04                _tensaoCXS 00E3  
               i2u995_40 1F70                 i2u987_40 1C5C                 i2u979_40 1B2A  
               i2u995_41 1F6C                 i2u987_41 1C58                 i2u979_41 1B26  
      i2___fldiv@new_exp 0039                 i2u996_40 1F86                 i2u988_40 1D14  
               i2u996_41 1F82                 i2u988_41 1D10                 i2u997_40 1FC4  
               i2u989_40 1D48                 i2u997_41 1FC0                 i2u989_41 1D44  
               Lcd_Out@x 008D                 Lcd_Out@y 0090                 i2u998_40 1FDC  
               i2u998_41 1FD8                 i2u999_40 2000                 i2u999_41 1FFC  
            ??i2_sprintf 0055            ?i2_leituraCXI 0001            ?i2_leituraCXS 0001  
        i2__div_to_l_@f1 0001          i2__div_to_l_@f2 0005           i2_atualizatela 4CB6  
          _serial_tx_str 7F66             Lcd_Init@data 008E               _ADCON0bits 000FC2  
               i2___flge 6B94                 i2___fleq 7504        ___wmul@multiplier 008A  
               i2___wmul 00A6               ?_atraso_ms 008A        i2___awdiv@divisor 0009  
               i2_fround 52E8        i2___awdiv@counter 000B                 _Lcd_Init 63DE  
            _INTCON2bits 000FF1                copy_data0 78BC                copy_data1 78DC  
     i2___awmod@dividend 0001         __size_ofi2_scale 040C         __size_of_Lcd_Cmd 0136  
       __size_of_Lcd_Out 00BE                 __Hrparam 0000                 __Lrparam 0000  
             ?_serial_rx 008A               ?_serial_tx 0001           ??i2_leituraCXI 0041  
         ??i2_leituraCXS 0041   __end_ofi2_atualizatela 5032             ??_leituraCXI 00CA  
           ??_leituraCXS 00CA             ?_adc_amostra 008A         __size_of___aldiv 010E  
       __size_of___fladd 04C2         __size_of___fldiv 039C         __size_of___awdiv 00C6  
       __size_of___flneg 003A         __size_of___awmod 00B2         __size_of___flmul 042C  
       __size_of___flsub 0048         __size_of___fltol 0108           ?_serial_tx_str 0002  
  i2___wmul@multiplicand 0003         __size_of___lldiv 00A6         __size_of___llmod 008A  
       __size_of___lwdiv 0076         __size_of___lwmod 0066      __end_of_serial_init 0104  
            _fround$1958 00B9              _fround$1959 00B5                 _adc_init 011A  
  __end_ofi2__tdiv_to_l_ 5D82    __size_ofi2_Lcd_Chr_CP 0134               sprintf@val 01E7  
               ___xxtofl 5768                tc_tecla@i 0095         __size_of_isdigit 0036  
         Lcd_Chr_CP@data 008C          ___lwdiv@divisor 0091          ___lwdiv@counter 0093  
               __ptext10 7246                 __ptext11 6E8C                 __ptext20 75AE  
               __ptext12 0012                 __ptext21 6880                 __ptext13 5032  
               __ptext30 5768                 __ptext22 7E9E                 __ptext14 7D88  
               __ptext31 3146                 __ptext23 27C4                 __ptext15 7C9E  
               __ptext40 62A8                 __ptext32 4580                 __ptext24 7F2C  
               __ptext16 5AD4                 __ptext33 7016                 __ptext25 6988  
               __ptext17 5ED0                 __ptext50 1542                 __ptext42 4CB6  
               __ptext34 616A                 __ptext26 7458                 __ptext18 7FD8  
               __ptext51 3DC4                 __ptext43 7BAA                 __ptext35 011A  
               __ptext27 7A32                 __ptext19 7796                 __ptext60 601E  
               __ptext52 73A8                 __ptext44 7C24                 __ptext36 007A  
               __ptext28 7AB0                 __ptext61 5920                 __ptext53 6F52  
               __ptext45 491C                 __ptext37 6D96                 __ptext29 79B0  
               __ptext70 7504                 __ptext62 00A6                 __ptext54 0048  
               __ptext46 718E                 __ptext38 6772                 __ptext71 7B2E  
               __ptext63 7820                 __ptext55 52E8                 __ptext47 6646  
               __ptext39 63DE                 __ptext72 7F66                 __ptext64 7654  
               __ptext56 7DEE                 __ptext48 6512                 __ptext73 0104  
               __ptext65 6A8E                 __ptext57 7D14                 __ptext49 6C98  
               __ptext66 7EE6                 __ptext58 3572                 __ptext67 2C86  
               __ptext59 5C2C                 __ptext68 7FA0                 __ptext69 6B94  
               __powers_ 0601         __size_of_sprintf 0E62                 _maketela 5D82  
         i2_isdigit$1745 0002       __end_of_leituraCXI 7B2E              Lcd_Cmd@data 008C  
     __end_of_leituraCXS 7AB0            __size_of_main 052E     __end_ofi2__div_to_l_ 616A  
               _nivelCXI 01BB                 _nivelCXS 01B9                 _tc_tecla 558A  
               _testeMin 792E                 int$flags 007E             i2_Lcd_Chr_CP 6512  
        ?i2_atualizatela 0074                 main@dado 0238             serial_tx@val 0001  
            ??_atraso_ms 008C        i2___awmod@divisor 0003        i2___awmod@counter 0005  
            Lcd_Out@data 0091               _INTCONbits 000FF2                 isdigit@c 008C  
               scale@scl 00B9                 intlevel2 0000                sprintf@ap 01E1  
       __tdiv_to_l_@exp1 009A                sprintf@sp 00D6         __tdiv_to_l_@cntr 0099  
       __tdiv_to_l_@quot 0095          i2___xxtofl@sign 0009         ___lwmod@dividend 008A  
       ___lldiv@dividend 008A         maketela@estados0 0092      i2_atualizatela$2224 0078  
            ??_serial_rx 008C              ??_serial_tx 0001              _serial_init 00EE  
             i2Lcd_Out@x 0004               i2Lcd_Out@y 0007          ??_serial_tx_str 0004  
           ?__tdiv_to_l_ 008A                 sprintf@c 01F7                 sprintf@f 00D8  
       ___lldiv@quotient 0092          ___lwmod@divisor 008C          ___lwmod@counter 008E  
       adc_amostra@canal 0090             ___aldiv@sign 0093               _PWM1_Start 007A  
          ___fladd@signs 00CA     __end_ofi2_leituraCXI 7C9E     __end_ofi2_leituraCXS 7C24  
      i2__div_to_l_@exp1 000E        i2__div_to_l_@cntr 000D        i2__div_to_l_@quot 0009  
           ___fladd@aexp 00CB             ___fladd@bexp 00CC  __size_of_transmitedados 00FE  
        i2Lcd_Out@buffer 0005  
